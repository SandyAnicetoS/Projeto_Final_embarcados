

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Aug 01 20:56:40 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4520 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	idataBANK0
    76  001854                     __pidataBANK0:
    77                           	callstack 0
    78                           
    79                           ;initializer for brancas@F2435
    80  001854  01                 	db	1
    81  001855  03                 	db	3
    82  001856  01                 	db	1
    83  001857  0F                 	db	15
    84  001858  04                 	db	4
    85  001859  02                 	db	2
    86  00185A  02                 	db	2
    87  00185B  06                 	db	6
    88  00185C  10                 	db	16
    89  00185D  18                 	db	24
    90  00185E  10                 	db	16
    91  00185F  1E                 	db	30
    92  001860  04                 	db	4
    93  001861  08                 	db	8
    94  001862  08                 	db	8
    95  001863  0C                 	db	12
    96  001864  00                 	db	0
    97  001865  11                 	db	17
    98  001866  1A                 	db	26
    99  001867  0C                 	db	12
   100  001868  02                 	db	2
   101  001869  02                 	db	2
   102  00186A  02                 	db	2
   103  00186B  04                 	db	4
   104  00186C  00                 	db	0
   105  00186D  11                 	db	17
   106  00186E  0B                 	db	11
   107  00186F  06                 	db	6
   108  001870  08                 	db	8
   109  001871  08                 	db	8
   110  001872  08                 	db	8
   111  001873  04                 	db	4
   112  001874  02                 	db	2
   113  001875  02                 	db	2
   114  001876  02                 	db	2
   115  001877  02                 	db	2
   116  001878  02                 	db	2
   117  001879  04                 	db	4
   118  00187A  08                 	db	8
   119  00187B  1F                 	db	31
   120  00187C  08                 	db	8
   121  00187D  08                 	db	8
   122  00187E  08                 	db	8
   123  00187F  08                 	db	8
   124  001880  08                 	db	8
   125  001881  04                 	db	4
   126  001882  02                 	db	2
   127  001883  1F                 	db	31
   128  001884  02                 	db	2
   129  001885  02                 	db	2
   130  001886  02                 	db	2
   131  001887  02                 	db	2
   132  001888  02                 	db	2
   133  001889  04                 	db	4
   134  00188A  08                 	db	8
   135  00188B  1F                 	db	31
   136  00188C  08                 	db	8
   137  00188D  08                 	db	8
   138  00188E  08                 	db	8
   139  00188F  08                 	db	8
   140  001890  08                 	db	8
   141  001891  04                 	db	4
   142  001892  02                 	db	2
   143  001893  1F                 	db	31
   144                           
   145                           ;initializer for pretas@F2430
   146  001894  01                 	db	1
   147  001895  03                 	db	3
   148  001896  01                 	db	1
   149  001897  0F                 	db	15
   150  001898  07                 	db	7
   151  001899  03                 	db	3
   152  00189A  03                 	db	3
   153  00189B  07                 	db	7
   154  00189C  10                 	db	16
   155  00189D  18                 	db	24
   156  00189E  10                 	db	16
   157  00189F  1E                 	db	30
   158  0018A0  1C                 	db	28
   159  0018A1  18                 	db	24
   160  0018A2  18                 	db	24
   161  0018A3  1C                 	db	28
   162  0018A4  00                 	db	0
   163  0018A5  11                 	db	17
   164  0018A6  1B                 	db	27
   165  0018A7  0F                 	db	15
   166  0018A8  03                 	db	3
   167  0018A9  03                 	db	3
   168  0018AA  03                 	db	3
   169  0018AB  07                 	db	7
   170  0018AC  00                 	db	0
   171  0018AD  11                 	db	17
   172  0018AE  1B                 	db	27
   173  0018AF  1E                 	db	30
   174  0018B0  18                 	db	24
   175  0018B1  18                 	db	24
   176  0018B2  18                 	db	24
   177  0018B3  1C                 	db	28
   178  0018B4  03                 	db	3
   179  0018B5  03                 	db	3
   180  0018B6  03                 	db	3
   181  0018B7  03                 	db	3
   182  0018B8  03                 	db	3
   183  0018B9  07                 	db	7
   184  0018BA  0F                 	db	15
   185  0018BB  1F                 	db	31
   186  0018BC  18                 	db	24
   187  0018BD  18                 	db	24
   188  0018BE  18                 	db	24
   189  0018BF  18                 	db	24
   190  0018C0  18                 	db	24
   191  0018C1  1C                 	db	28
   192  0018C2  1E                 	db	30
   193  0018C3  1F                 	db	31
   194  0018C4  03                 	db	3
   195  0018C5  03                 	db	3
   196  0018C6  03                 	db	3
   197  0018C7  03                 	db	3
   198  0018C8  03                 	db	3
   199  0018C9  07                 	db	7
   200  0018CA  0F                 	db	15
   201  0018CB  1F                 	db	31
   202  0018CC  18                 	db	24
   203  0018CD  18                 	db	24
   204  0018CE  18                 	db	24
   205  0018CF  18                 	db	24
   206  0018D0  18                 	db	24
   207  0018D1  1C                 	db	28
   208  0018D2  1E                 	db	30
   209  0018D3  1F                 	db	31
   210                           
   211                           	psect	smallconst
   212  000600                     __psmallconst:
   213                           	callstack 0
   214  000600  00                 	db	0
   215  000601                     _valor@ssd$F219:
   216                           	callstack 0
   217  000601  3F                 	db	63
   218  000602  06                 	db	6
   219  000603  5B                 	db	91
   220  000604  4F                 	db	79
   221  000605  66                 	db	102
   222  000606  6D                 	db	109
   223  000607  7D                 	db	125
   224  000608  07                 	db	7
   225  000609  7F                 	db	127
   226  00060A  6F                 	db	111
   227  00060B  77                 	db	119
   228  00060C  7C                 	db	124
   229  00060D  39                 	db	57
   230  00060E  5E                 	db	94
   231  00060F  79                 	db	121
   232  000610  71                 	db	113
   233  000611                     __end_of_valor@ssd$F219:
   234                           	callstack 0
   235  0000                     _T0CON	set	4053
   236  0000                     _TMR0L	set	4054
   237  0000                     _TMR0H	set	4055
   238  0000                     _INTCON	set	4082
   239  0000                     _TRISE	set	3990
   240  0000                     _TRISD	set	3989
   241  0000                     _TRISC	set	3988
   242  0000                     _TRISB	set	3987
   243  0000                     _TRISA	set	3986
   244  0000                     _PORTE	set	3972
   245  0000                     _PORTC	set	3970
   246  0000                     _PORTB	set	3969
   247  0000                     _PORTA	set	3968
   248  0000                     _PORTEbits	set	3972
   249  0000                     _PORTD	set	3971
   250  000611                     STR_3:
   251  000611  45                 	db	69	;'E'
   252  000612  73                 	db	115	;'s'
   253  000613  63                 	db	99	;'c'
   254  000614  6F                 	db	111	;'o'
   255  000615  6C                 	db	108	;'l'
   256  000616  68                 	db	104	;'h'
   257  000617  61                 	db	97	;'a'
   258  000618  20                 	db	32
   259  000619  64                 	db	100	;'d'
   260  00061A  6F                 	db	111	;'o'
   261  00061B  20                 	db	32
   262  00061C  00                 	db	0
   263  00061D                     STR_11:
   264  00061D  56                 	db	86	;'V'
   265  00061E  65                 	db	101	;'e'
   266  00061F  6E                 	db	110	;'n'
   267  000620  63                 	db	99	;'c'
   268  000621  65                 	db	101	;'e'
   269  000622  64                 	db	100	;'d'
   270  000623  6F                 	db	111	;'o'
   271  000624  72                 	db	114	;'r'
   272  000625  00                 	db	0
   273  000626                     STR_5:
   274  000626  42                 	db	66	;'B'
   275  000627  72                 	db	114	;'r'
   276  000628  61                 	db	97	;'a'
   277  000629  6E                 	db	110	;'n'
   278  00062A  63                 	db	99	;'c'
   279  00062B  61                 	db	97	;'a'
   280  00062C  73                 	db	115	;'s'
   281  00062D  00                 	db	0
   282  00062E                     STR_2:
   283  00062E  55                 	db	85	;'U'
   284  00062F  4E                 	db	78	;'N'
   285  000630  49                 	db	73	;'I'
   286  000631  46                 	db	70	;'F'
   287  000632  45                 	db	69	;'E'
   288  000633  49                 	db	73	;'I'
   289  000634  00                 	db	0
   290  000635                     STR_9:
   291  000635  50                 	db	80	;'P'
   292  000636  72                 	db	114	;'r'
   293  000637  65                 	db	101	;'e'
   294  000638  74                 	db	116	;'t'
   295  000639  61                 	db	97	;'a'
   296  00063A  73                 	db	115	;'s'
   297  00063B  00                 	db	0
   298  00063C                     STR_1:
   299  00063C  43                 	db	67	;'C'
   300  00063D  48                 	db	72	;'H'
   301  00063E  45                 	db	69	;'E'
   302  00063F  53                 	db	83	;'S'
   303  000640  53                 	db	83	;'S'
   304  000641  00                 	db	0
   305  000642                     STR_6:
   306  000642  4A                 	db	74	;'J'
   307  000643  6F                 	db	111	;'o'
   308  000644  67                 	db	103	;'g'
   309  000645  61                 	db	97	;'a'
   310  000646  6D                 	db	109	;'m'
   311  000647  00                 	db	0
   312  000648                     STR_4:
   313  000648  54                 	db	84	;'T'
   314  000649  65                 	db	101	;'e'
   315  00064A  6D                 	db	109	;'m'
   316  00064B  70                 	db	112	;'p'
   317  00064C  6F                 	db	111	;'o'
   318  00064D  00                 	db	0
   319  00064E  00                 	db	0	; dummy byte at the end
   320  0000                     
   321                           ; #config settings
   322                           
   323                           	psect	cinit
   324  001B0A                     __pcinit:
   325                           	callstack 0
   326  001B0A                     start_initialization:
   327                           	callstack 0
   328  001B0A                     __initialization:
   329                           	callstack 0
   330                           
   331                           ; Initialize objects allocated to BANK0 (128 bytes)
   332                           ; load TBLPTR registers with __pidataBANK0
   333  001B0A  0E54               	movlw	low __pidataBANK0
   334  001B0C  6EF6               	movwf	tblptrl,c
   335  001B0E  0E18               	movlw	high __pidataBANK0
   336  001B10  6EF7               	movwf	tblptrh,c
   337  001B12  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   338  001B14  6EF8               	movwf	tblptru,c
   339  001B16  EE00  F080         	lfsr	0,__pdataBANK0
   340  001B1A  EE10 F080          	lfsr	1,128
   341  001B1E                     copy_data0:
   342  001B1E  0009               	tblrd		*+
   343  001B20  CFF5 FFEE          	movff	tablat,postinc0
   344  001B24  50E5               	movf	postdec1,w,c
   345  001B26  50E1               	movf	fsr1l,w,c
   346  001B28  E1FA               	bnz	copy_data0
   347                           
   348                           ; Clear objects allocated to COMRAM (12 bytes)
   349  001B2A  EE00  F068         	lfsr	0,__pbssCOMRAM
   350  001B2E  0E0C               	movlw	12
   351  001B30                     clear_0:
   352  001B30  6AEE               	clrf	postinc0,c
   353  001B32  06E8               	decf	wreg,f,c
   354  001B34  E1FD               	bnz	clear_0
   355  001B36                     end_of_initialization:
   356                           	callstack 0
   357  001B36                     __end_of__initialization:
   358                           	callstack 0
   359  001B36  0E00               	movlw	low (__Lmediumconst shr (0+16))
   360  001B38  6EF8               	movwf	tblptru,c
   361  001B3A  0100               	movlb	0
   362  001B3C  EF28  F003         	goto	_main	;jump to C main() function
   363                           
   364                           	psect	bssCOMRAM
   365  000068                     __pbssCOMRAM:
   366                           	callstack 0
   367  000068                     kpDebounce@valorAntigo:
   368                           	callstack 0
   369  000068                     	ds	2
   370  00006A                     kpDebounce@valorNovo:
   371                           	callstack 0
   372  00006A                     	ds	2
   373  00006C                     _valor:
   374                           	callstack 0
   375  00006C                     	ds	2
   376  00006E                     _v3:
   377                           	callstack 0
   378  00006E                     	ds	1
   379  00006F                     _v2:
   380                           	callstack 0
   381  00006F                     	ds	1
   382  000070                     _v1:
   383                           	callstack 0
   384  000070                     	ds	1
   385  000071                     _v0:
   386                           	callstack 0
   387  000071                     	ds	1
   388  000072                     _display:
   389                           	callstack 0
   390  000072                     	ds	1
   391  000073                     kpDebounce@tempo:
   392                           	callstack 0
   393  000073                     	ds	1
   394                           
   395                           	psect	dataBANK0
   396  000080                     __pdataBANK0:
   397                           	callstack 0
   398  000080                     brancas@F2435:
   399                           	callstack 0
   400  000080                     	ds	64
   401  0000C0                     pretas@F2430:
   402                           	callstack 0
   403  0000C0                     	ds	64
   404                           
   405                           	psect	cstackCOMRAM
   406  000001                     __pcstackCOMRAM:
   407                           	callstack 0
   408  000001                     ??_kpDebounce:
   409  000001                     ?_kpRead:
   410                           	callstack 0
   411  000001                     ?___wmul:
   412                           	callstack 0
   413  000001                     ?___awdiv:
   414                           	callstack 0
   415  000001                     lcd_wr@val:
   416                           	callstack 0
   417  000001                     digitalWrite@pin:
   418                           	callstack 0
   419  000001                     pinMode@pin:
   420                           	callstack 0
   421  000001                     timerReset@tempo:
   422                           	callstack 0
   423  000001                     atraso_ms@t:
   424                           	callstack 0
   425  000001                     ___wmul@multiplier:
   426                           	callstack 0
   427  000001                     ___awdiv@dividend:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x0
   431  000001                     	ds	2
   432  000003                     digitalWrite@value:
   433                           	callstack 0
   434  000003                     pinMode@type:
   435                           	callstack 0
   436  000003                     timerReset@ciclos:
   437                           	callstack 0
   438  000003                     atraso_ms@i:
   439                           	callstack 0
   440  000003                     ___wmul@multiplicand:
   441                           	callstack 0
   442  000003                     ___awdiv@divisor:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x2
   446  000003                     	ds	2
   447  000005                     ??_digitalWrite:
   448  000005                     ??_pinMode:
   449  000005                     atraso_ms@j:
   450                           	callstack 0
   451  000005                     ___awdiv@counter:
   452                           	callstack 0
   453  000005                     ___wmul@product:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x4
   457  000005                     	ds	1
   458  000006                     kpDebounce@old_D:
   459                           	callstack 0
   460  000006                     atraso_ms@k:
   461                           	callstack 0
   462  000006                     ___awdiv@sign:
   463                           	callstack 0
   464                           
   465                           ; 1 bytes @ 0x5
   466  000006                     	ds	1
   467  000007                     ??_ssdUpdate:
   468  000007                     lcd_cmd@val:
   469                           	callstack 0
   470  000007                     lcd_dat@val:
   471                           	callstack 0
   472  000007                     kpDebounce@k:
   473                           	callstack 0
   474  000007                     atraso_s@t:
   475                           	callstack 0
   476  000007                     ___awdiv@quotient:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x6
   480  000007                     	ds	1
   481  000008                     lcd_str@str:
   482                           	callstack 0
   483  000008                     pretas@black:
   484                           	callstack 0
   485  000008                     brancas@white:
   486                           	callstack 0
   487                           
   488                           ; 64 bytes @ 0x7
   489  000008                     	ds	1
   490  000009                     ?___awmod:
   491                           	callstack 0
   492  000009                     kpDebounce@j:
   493                           	callstack 0
   494  000009                     atraso_s@i:
   495                           	callstack 0
   496  000009                     ___awmod@dividend:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x8
   500  000009                     	ds	1
   501  00000A                     ??_lcd_str:
   502  00000A                     kpDebounce@i:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x9
   506  00000A                     	ds	1
   507  00000B                     atraso_s@j:
   508                           	callstack 0
   509  00000B                     ___awmod@divisor:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0xA
   513  00000B                     	ds	1
   514  00000C                     lcd_str@i:
   515                           	callstack 0
   516  00000C                     atraso_s@k:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0xB
   520  00000C                     	ds	1
   521  00000D                     ___awmod@counter:
   522                           	callstack 0
   523                           
   524                           ; 1 bytes @ 0xC
   525  00000D                     	ds	1
   526  00000E                     ___awmod@sign:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0xD
   530  00000E                     	ds	1
   531  00000F                     ssdDigit@pos:
   532                           	callstack 0
   533                           
   534                           ; 1 bytes @ 0xE
   535  00000F                     	ds	1
   536  000010                     ssdDigit@val:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0xF
   540  000010                     	ds	56
   541  000048                     pretas@coluna:
   542                           	callstack 0
   543  000048                     brancas@coluna:
   544                           	callstack 0
   545                           
   546                           ; 1 bytes @ 0x47
   547  000048                     	ds	1
   548  000049                     pretas@i:
   549                           	callstack 0
   550  000049                     brancas@i:
   551                           	callstack 0
   552                           
   553                           ; 1 bytes @ 0x48
   554  000049                     	ds	1
   555  00004A                     ??_main:
   556                           
   557                           ; 1 bytes @ 0x49
   558  00004A                     	ds	2
   559  00004C                     main@tecla1:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x4B
   563  00004C                     	ds	2
   564  00004E                     main@tecla2:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x4D
   568  00004E                     	ds	2
   569  000050                     main@t1:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x4F
   573  000050                     	ds	2
   574  000052                     main@t2:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x51
   578  000052                     	ds	2
   579  000054                     main@tempo:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x53
   583  000054                     	ds	2
   584  000056                     main@flagcontrole:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x55
   588  000056                     	ds	2
   589  000058                     main@tempflag:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x57
   593  000058                     	ds	2
   594  00005A                     main@UnMin:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x59
   598  00005A                     	ds	2
   599  00005C                     main@DeMin:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x5B
   603  00005C                     	ds	2
   604  00005E                     main@UnSeg:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x5D
   608  00005E                     	ds	2
   609  000060                     main@DeSeg:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x5F
   613  000060                     	ds	2
   614  000062                     main@j:
   615                           	callstack 0
   616                           
   617                           ; 1 bytes @ 0x61
   618  000062                     	ds	1
   619  000063                     main@contP1:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x62
   623  000063                     	ds	2
   624  000065                     main@contP2:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x64
   628  000065                     	ds	2
   629  000067                     main@i:
   630                           	callstack 0
   631                           
   632                           ; 1 bytes @ 0x66
   633  000067                     	ds	1
   634                           
   635 ;;
   636 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   637 ;;
   638 ;; *************** function _main *****************
   639 ;; Defined at:
   640 ;;		line 69 in file "main.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;		None
   643 ;; Auto vars:     Size  Location     Type
   644 ;;  contP2          2  100[COMRAM] int 
   645 ;;  contP1          2   98[COMRAM] int 
   646 ;;  DeSeg           2   95[COMRAM] int 
   647 ;;  UnSeg           2   93[COMRAM] int 
   648 ;;  DeMin           2   91[COMRAM] int 
   649 ;;  UnMin           2   89[COMRAM] int 
   650 ;;  tempflag        2   87[COMRAM] unsigned int 
   651 ;;  flagcontrole    2   85[COMRAM] int 
   652 ;;  tempo           2   83[COMRAM] int 
   653 ;;  t2              2   81[COMRAM] unsigned int 
   654 ;;  t1              2   79[COMRAM] unsigned int 
   655 ;;  tecla2          2   77[COMRAM] unsigned int 
   656 ;;  tecla1          2   75[COMRAM] unsigned int 
   657 ;;  i               1  102[COMRAM] unsigned char 
   658 ;;  j               1   97[COMRAM] unsigned char 
   659 ;; Return value:  Size  Location     Type
   660 ;;                  2  281[None  ] int 
   661 ;; Registers used:
   662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   668 ;;      Params:         0       0       0       0       0       0       0
   669 ;;      Locals:        28       0       0       0       0       0       0
   670 ;;      Temps:          2       0       0       0       0       0       0
   671 ;;      Totals:        30       0       0       0       0       0       0
   672 ;;Total ram usage:       30 bytes
   673 ;; Hardware stack levels required when called: 3
   674 ;; This function calls:
   675 ;;		___awdiv
   676 ;;		___awmod
   677 ;;		___wmul
   678 ;;		_atraso_ms
   679 ;;		_atraso_s
   680 ;;		_brancas
   681 ;;		_kpDebounce
   682 ;;		_kpInit
   683 ;;		_kpRead
   684 ;;		_lcd_cmd
   685 ;;		_lcd_init
   686 ;;		_lcd_str
   687 ;;		_pretas
   688 ;;		_ssdDigit
   689 ;;		_ssdInit
   690 ;;		_ssdUpdate
   691 ;;		_timerInit
   692 ;;		_timerReset
   693 ;;		_timerWait
   694 ;; This function is called by:
   695 ;;		Startup code after reset
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           	psect	text0
   700  000650                     __ptext0:
   701                           	callstack 0
   702  000650                     _main:
   703                           	callstack 28
   704  000650                     
   705                           ;main.c: 70:     int UnMin = 0, DeMin = 0, UnSeg = 0, DeSeg = 0, tempo;
   706  000650  0E00               	movlw	0
   707  000652  6E5B               	movwf	(main@UnMin+1)^0,c
   708  000654  0E00               	movlw	0
   709  000656  6E5A               	movwf	main@UnMin^0,c
   710  000658  0E00               	movlw	0
   711  00065A  6E5D               	movwf	(main@DeMin+1)^0,c
   712  00065C  0E00               	movlw	0
   713  00065E  6E5C               	movwf	main@DeMin^0,c
   714  000660  0E00               	movlw	0
   715  000662  6E5F               	movwf	(main@UnSeg+1)^0,c
   716  000664  0E00               	movlw	0
   717  000666  6E5E               	movwf	main@UnSeg^0,c
   718  000668  0E00               	movlw	0
   719  00066A  6E61               	movwf	(main@DeSeg+1)^0,c
   720  00066C  0E00               	movlw	0
   721  00066E  6E60               	movwf	main@DeSeg^0,c
   722                           
   723                           ;main.c: 71:     int contP1, contP2, flagcontrole = 0;
   724  000670  0E00               	movlw	0
   725  000672  6E57               	movwf	(main@flagcontrole+1)^0,c
   726  000674  0E00               	movlw	0
   727  000676  6E56               	movwf	main@flagcontrole^0,c
   728                           
   729                           ;main.c: 73:     unsigned char i, j;;main.c: 75:     TRISD = 0x00;
   730  000678  0E00               	movlw	0
   731  00067A  6E95               	movwf	149,c	;volatile
   732                           
   733                           ;main.c: 76:     TRISE = 0x00;
   734  00067C  0E00               	movlw	0
   735  00067E  6E96               	movwf	150,c	;volatile
   736                           
   737                           ;main.c: 77:     PORTD = 0x00;
   738  000680  0E00               	movlw	0
   739  000682  6E83               	movwf	131,c	;volatile
   740                           
   741                           ;main.c: 78:     TRISE = 0x00;
   742  000684  0E00               	movlw	0
   743  000686  6E96               	movwf	150,c	;volatile
   744                           
   745                           ;main.c: 79:     TRISA = 0xC3;
   746  000688  0EC3               	movlw	195
   747  00068A  6E92               	movwf	146,c	;volatile
   748                           
   749                           ;main.c: 80:     TRISB = 0x03;
   750  00068C  0E03               	movlw	3
   751  00068E  6E93               	movwf	147,c	;volatile
   752                           
   753                           ;main.c: 81:     TRISC = 0x01;
   754  000690  0E01               	movlw	1
   755  000692  6E94               	movwf	148,c	;volatile
   756  000694                     
   757                           ;main.c: 83:     lcd_init();
   758  000694  ECD8  F00C         	call	_lcd_init	;wreg free
   759  000698                     
   760                           ;main.c: 84:     lcd_cmd(0x0C);
   761  000698  0E0C               	movlw	12
   762  00069A  ECB5  F00D         	call	_lcd_cmd
   763  00069E                     
   764                           ;main.c: 86:     pretas(3);
   765  00069E  0E03               	movlw	3
   766  0006A0  ECA6  F00B         	call	_pretas
   767  0006A4                     
   768                           ;main.c: 87:     atraso_s(1);
   769  0006A4  0E00               	movlw	0
   770  0006A6  6E08               	movwf	(atraso_s@t+1)^0,c
   771  0006A8  0E01               	movlw	1
   772  0006AA  6E07               	movwf	atraso_s@t^0,c
   773  0006AC  EC6A  F00C         	call	_atraso_s	;wreg free
   774  0006B0                     
   775                           ;main.c: 88:     lcd_cmd(0x01);
   776  0006B0  0E01               	movlw	1
   777  0006B2  ECB5  F00D         	call	_lcd_cmd
   778  0006B6                     
   779                           ;main.c: 90:     brancas(8);
   780  0006B6  0E08               	movlw	8
   781  0006B8  ECE8  F00B         	call	_brancas
   782  0006BC                     
   783                           ;main.c: 91:     atraso_s(1);
   784  0006BC  0E00               	movlw	0
   785  0006BE  6E08               	movwf	(atraso_s@t+1)^0,c
   786  0006C0  0E01               	movlw	1
   787  0006C2  6E07               	movwf	atraso_s@t^0,c
   788  0006C4  EC6A  F00C         	call	_atraso_s	;wreg free
   789  0006C8                     
   790                           ;main.c: 92:     lcd_cmd(0x01);
   791  0006C8  0E01               	movlw	1
   792  0006CA  ECB5  F00D         	call	_lcd_cmd
   793  0006CE                     
   794                           ;main.c: 94:     lcd_cmd(0x80 + 5);
   795  0006CE  0E85               	movlw	133
   796  0006D0  ECB5  F00D         	call	_lcd_cmd
   797  0006D4                     
   798                           ;main.c: 95:     lcd_str("CHESS");
   799  0006D4  0E3C               	movlw	low STR_1
   800  0006D6  6E08               	movwf	lcd_str@str^0,c
   801  0006D8  0E06               	movlw	high STR_1
   802  0006DA  6E09               	movwf	(lcd_str@str+1)^0,c
   803  0006DC  EC5D  F00D         	call	_lcd_str	;wreg free
   804  0006E0                     
   805                           ;main.c: 96:     lcd_cmd(0xC0 + 5);
   806  0006E0  0EC5               	movlw	197
   807  0006E2  ECB5  F00D         	call	_lcd_cmd
   808  0006E6                     
   809                           ;main.c: 97:     lcd_str("UNIFEI");
   810  0006E6  0E2E               	movlw	low STR_2
   811  0006E8  6E08               	movwf	lcd_str@str^0,c
   812  0006EA  0E06               	movlw	high STR_2
   813  0006EC  6E09               	movwf	(lcd_str@str+1)^0,c
   814  0006EE  EC5D  F00D         	call	_lcd_str	;wreg free
   815  0006F2                     
   816                           ;main.c: 98:     atraso_s(2);
   817  0006F2  0E00               	movlw	0
   818  0006F4  6E08               	movwf	(atraso_s@t+1)^0,c
   819  0006F6  0E02               	movlw	2
   820  0006F8  6E07               	movwf	atraso_s@t^0,c
   821  0006FA  EC6A  F00C         	call	_atraso_s	;wreg free
   822  0006FE                     
   823                           ;main.c: 100:     lcd_cmd(0x01);
   824  0006FE  0E01               	movlw	1
   825  000700  ECB5  F00D         	call	_lcd_cmd
   826  000704                     
   827                           ;main.c: 101:     lcd_cmd(0x80 + 3);
   828  000704  0E83               	movlw	131
   829  000706  ECB5  F00D         	call	_lcd_cmd
   830  00070A                     
   831                           ;main.c: 102:     lcd_str("Escolha do ");
   832  00070A  0E11               	movlw	low STR_3
   833  00070C  6E08               	movwf	lcd_str@str^0,c
   834  00070E  0E06               	movlw	high STR_3
   835  000710  6E09               	movwf	(lcd_str@str+1)^0,c
   836  000712  EC5D  F00D         	call	_lcd_str	;wreg free
   837  000716                     
   838                           ;main.c: 103:     lcd_cmd(0xC0 + 5);
   839  000716  0EC5               	movlw	197
   840  000718  ECB5  F00D         	call	_lcd_cmd
   841  00071C                     
   842                           ;main.c: 104:     lcd_str("Tempo");
   843  00071C  0E48               	movlw	low STR_4
   844  00071E  6E08               	movwf	lcd_str@str^0,c
   845  000720  0E06               	movlw	high STR_4
   846  000722  6E09               	movwf	(lcd_str@str+1)^0,c
   847  000724  EC5D  F00D         	call	_lcd_str	;wreg free
   848  000728                     
   849                           ;main.c: 106:     ssdInit();
   850  000728  EC32  F00D         	call	_ssdInit	;wreg free
   851  00072C                     
   852                           ;main.c: 107:     kpInit();
   853  00072C  ECFB  F00D         	call	_kpInit	;wreg free
   854  000730                     
   855                           ;main.c: 108:     timerInit();
   856  000730  EC00  F00E         	call	_timerInit	;wreg free
   857  000734                     l2175:
   858                           
   859                           ;main.c: 112:         ssdDigit((DeMin%10), 0);
   860  000734  0E00               	movlw	0
   861  000736  6E0F               	movwf	ssdDigit@pos^0,c
   862  000738  C05C  F009         	movff	main@DeMin,___awmod@dividend
   863  00073C  C05D  F00A         	movff	main@DeMin+1,___awmod@dividend+1
   864  000740  0E00               	movlw	0
   865  000742  6E0C               	movwf	(___awmod@divisor+1)^0,c
   866  000744  0E0A               	movlw	10
   867  000746  6E0B               	movwf	___awmod@divisor^0,c
   868  000748  EC4E  F00B         	call	___awmod	;wreg free
   869  00074C  5009               	movf	?___awmod^0,w,c
   870  00074E  EC06  F00D         	call	_ssdDigit
   871  000752                     
   872                           ;main.c: 113:         ssdDigit((UnMin%10), 1);
   873  000752  0E01               	movlw	1
   874  000754  6E0F               	movwf	ssdDigit@pos^0,c
   875  000756  C05A  F009         	movff	main@UnMin,___awmod@dividend
   876  00075A  C05B  F00A         	movff	main@UnMin+1,___awmod@dividend+1
   877  00075E  0E00               	movlw	0
   878  000760  6E0C               	movwf	(___awmod@divisor+1)^0,c
   879  000762  0E0A               	movlw	10
   880  000764  6E0B               	movwf	___awmod@divisor^0,c
   881  000766  EC4E  F00B         	call	___awmod	;wreg free
   882  00076A  5009               	movf	?___awmod^0,w,c
   883  00076C  EC06  F00D         	call	_ssdDigit
   884  000770                     
   885                           ;main.c: 114:         ssdDigit((DeSeg%10), 2);
   886  000770  0E02               	movlw	2
   887  000772  6E0F               	movwf	ssdDigit@pos^0,c
   888  000774  C060  F009         	movff	main@DeSeg,___awmod@dividend
   889  000778  C061  F00A         	movff	main@DeSeg+1,___awmod@dividend+1
   890  00077C  0E00               	movlw	0
   891  00077E  6E0C               	movwf	(___awmod@divisor+1)^0,c
   892  000780  0E0A               	movlw	10
   893  000782  6E0B               	movwf	___awmod@divisor^0,c
   894  000784  EC4E  F00B         	call	___awmod	;wreg free
   895  000788  5009               	movf	?___awmod^0,w,c
   896  00078A  EC06  F00D         	call	_ssdDigit
   897  00078E                     
   898                           ;main.c: 115:         ssdDigit((UnSeg%10), 3);
   899  00078E  0E03               	movlw	3
   900  000790  6E0F               	movwf	ssdDigit@pos^0,c
   901  000792  C05E  F009         	movff	main@UnSeg,___awmod@dividend
   902  000796  C05F  F00A         	movff	main@UnSeg+1,___awmod@dividend+1
   903  00079A  0E00               	movlw	0
   904  00079C  6E0C               	movwf	(___awmod@divisor+1)^0,c
   905  00079E  0E0A               	movlw	10
   906  0007A0  6E0B               	movwf	___awmod@divisor^0,c
   907  0007A2  EC4E  F00B         	call	___awmod	;wreg free
   908  0007A6  5009               	movf	?___awmod^0,w,c
   909  0007A8  EC06  F00D         	call	_ssdDigit
   910  0007AC                     
   911                           ;main.c: 116:         for (tempo=0; tempo<100; tempo++);
   912  0007AC  0E00               	movlw	0
   913  0007AE  6E55               	movwf	(main@tempo+1)^0,c
   914  0007B0  0E00               	movlw	0
   915  0007B2  6E54               	movwf	main@tempo^0,c
   916  0007B4                     l2185:
   917  0007B4  BE55               	btfsc	(main@tempo+1)^0,7,c
   918  0007B6  EFE6  F003         	goto	u1841
   919  0007BA  5055               	movf	(main@tempo+1)^0,w,c
   920  0007BC  E109               	bnz	u1840
   921  0007BE  0E64               	movlw	100
   922  0007C0  5C54               	subwf	main@tempo^0,w,c
   923  0007C2  A0D8               	btfss	status,0,c
   924  0007C4  EFE6  F003         	goto	u1841
   925  0007C8  EFE8  F003         	goto	u1840
   926  0007CC                     u1841:
   927  0007CC  EFEA  F003         	goto	l2189
   928  0007D0                     u1840:
   929  0007D0  EFEE  F003         	goto	l2193
   930  0007D4                     l2189:
   931  0007D4  4A54               	infsnz	main@tempo^0,f,c
   932  0007D6  2A55               	incf	(main@tempo+1)^0,f,c
   933  0007D8  EFDA  F003         	goto	l2185
   934  0007DC                     l2193:
   935                           
   936                           ;main.c: 117:         ssdUpdate();
   937  0007DC  EC44  F00A         	call	_ssdUpdate	;wreg free
   938  0007E0                     
   939                           ;main.c: 119:         kpDebounce();
   940  0007E0  EC87  F009         	call	_kpDebounce	;wreg free
   941  0007E4                     
   942                           ;main.c: 120:         if (kpRead() != tecla1){
   943  0007E4  ECF6  F00D         	call	_kpRead	;wreg free
   944  0007E8  504C               	movf	main@tecla1^0,w,c
   945  0007EA  1801               	xorwf	?_kpRead^0,w,c
   946  0007EC  E109               	bnz	u1850
   947  0007EE  504D               	movf	(main@tecla1+1)^0,w,c
   948  0007F0  1802               	xorwf	(?_kpRead+1)^0,w,c
   949  0007F2  B4D8               	btfsc	status,2,c
   950  0007F4  EFFE  F003         	goto	u1851
   951  0007F8  EF00  F004         	goto	u1850
   952  0007FC                     u1851:
   953  0007FC  EF9A  F003         	goto	l2175
   954  000800                     u1850:
   955  000800                     
   956                           ;main.c: 121:             tecla1 = kpRead();
   957  000800  ECF6  F00D         	call	_kpRead	;wreg free
   958  000804  C001  F04C         	movff	?_kpRead,main@tecla1
   959  000808  C002  F04D         	movff	?_kpRead+1,main@tecla1+1
   960                           
   961                           ;main.c: 123:             if (((kpRead()) & (1<<(3)))){
   962  00080C  ECF6  F00D         	call	_kpRead	;wreg free
   963  000810  A601               	btfss	?_kpRead^0,3,c
   964  000812  EF0D  F004         	goto	u1861
   965  000816  EF0F  F004         	goto	u1860
   966  00081A                     u1861:
   967  00081A  EF23  F004         	goto	l2207
   968  00081E                     u1860:
   969  00081E                     
   970                           ;main.c: 124:                 DeMin++;
   971  00081E  4A5C               	infsnz	main@DeMin^0,f,c
   972  000820  2A5D               	incf	(main@DeMin+1)^0,f,c
   973  000822                     
   974                           ;main.c: 125:                 if (DeMin > 9){
   975  000822  BE5D               	btfsc	(main@DeMin+1)^0,7,c
   976  000824  EF1D  F004         	goto	u1871
   977  000828  505D               	movf	(main@DeMin+1)^0,w,c
   978  00082A  E109               	bnz	u1870
   979  00082C  0E0A               	movlw	10
   980  00082E  5C5C               	subwf	main@DeMin^0,w,c
   981  000830  A0D8               	btfss	status,0,c
   982  000832  EF1D  F004         	goto	u1871
   983  000836  EF1F  F004         	goto	u1870
   984  00083A                     u1871:
   985  00083A  EF23  F004         	goto	l2207
   986  00083E                     u1870:
   987  00083E                     
   988                           ;main.c: 126:                     DeMin = 0;
   989  00083E  0E00               	movlw	0
   990  000840  6E5D               	movwf	(main@DeMin+1)^0,c
   991  000842  0E00               	movlw	0
   992  000844  6E5C               	movwf	main@DeMin^0,c
   993  000846                     l2207:
   994                           
   995                           ;main.c: 129:             if (((kpRead()) & (1<<(7)))){
   996  000846  ECF6  F00D         	call	_kpRead	;wreg free
   997  00084A  AE01               	btfss	?_kpRead^0,7,c
   998  00084C  EF2A  F004         	goto	u1881
   999  000850  EF2C  F004         	goto	u1880
  1000  000854                     u1881:
  1001  000854  EF40  F004         	goto	l2215
  1002  000858                     u1880:
  1003  000858                     
  1004                           ;main.c: 130:                 UnMin++;
  1005  000858  4A5A               	infsnz	main@UnMin^0,f,c
  1006  00085A  2A5B               	incf	(main@UnMin+1)^0,f,c
  1007  00085C                     
  1008                           ;main.c: 131:                 if (UnMin > 9){
  1009  00085C  BE5B               	btfsc	(main@UnMin+1)^0,7,c
  1010  00085E  EF3A  F004         	goto	u1891
  1011  000862  505B               	movf	(main@UnMin+1)^0,w,c
  1012  000864  E109               	bnz	u1890
  1013  000866  0E0A               	movlw	10
  1014  000868  5C5A               	subwf	main@UnMin^0,w,c
  1015  00086A  A0D8               	btfss	status,0,c
  1016  00086C  EF3A  F004         	goto	u1891
  1017  000870  EF3C  F004         	goto	u1890
  1018  000874                     u1891:
  1019  000874  EF40  F004         	goto	l2215
  1020  000878                     u1890:
  1021  000878                     
  1022                           ;main.c: 132:                     UnMin = 0;
  1023  000878  0E00               	movlw	0
  1024  00087A  6E5B               	movwf	(main@UnMin+1)^0,c
  1025  00087C  0E00               	movlw	0
  1026  00087E  6E5A               	movwf	main@UnMin^0,c
  1027  000880                     l2215:
  1028                           
  1029                           ;main.c: 135:             if (((kpRead()) & (1<<(11)))){
  1030  000880  ECF6  F00D         	call	_kpRead	;wreg free
  1031  000884  A602               	btfss	(?_kpRead+1)^0,3,c
  1032  000886  EF47  F004         	goto	u1901
  1033  00088A  EF49  F004         	goto	u1900
  1034  00088E                     u1901:
  1035  00088E  EF5D  F004         	goto	l2223
  1036  000892                     u1900:
  1037  000892                     
  1038                           ;main.c: 136:                 DeSeg++;
  1039  000892  4A60               	infsnz	main@DeSeg^0,f,c
  1040  000894  2A61               	incf	(main@DeSeg+1)^0,f,c
  1041  000896                     
  1042                           ;main.c: 137:                 if (DeSeg > 9){
  1043  000896  BE61               	btfsc	(main@DeSeg+1)^0,7,c
  1044  000898  EF57  F004         	goto	u1911
  1045  00089C  5061               	movf	(main@DeSeg+1)^0,w,c
  1046  00089E  E109               	bnz	u1910
  1047  0008A0  0E0A               	movlw	10
  1048  0008A2  5C60               	subwf	main@DeSeg^0,w,c
  1049  0008A4  A0D8               	btfss	status,0,c
  1050  0008A6  EF57  F004         	goto	u1911
  1051  0008AA  EF59  F004         	goto	u1910
  1052  0008AE                     u1911:
  1053  0008AE  EF5D  F004         	goto	l2223
  1054  0008B2                     u1910:
  1055  0008B2                     
  1056                           ;main.c: 138:                     DeSeg = 0;
  1057  0008B2  0E00               	movlw	0
  1058  0008B4  6E61               	movwf	(main@DeSeg+1)^0,c
  1059  0008B6  0E00               	movlw	0
  1060  0008B8  6E60               	movwf	main@DeSeg^0,c
  1061  0008BA                     l2223:
  1062                           
  1063                           ;main.c: 141:             if (((kpRead()) & (1<<(2)))){
  1064  0008BA  ECF6  F00D         	call	_kpRead	;wreg free
  1065  0008BE  A401               	btfss	?_kpRead^0,2,c
  1066  0008C0  EF64  F004         	goto	u1921
  1067  0008C4  EF66  F004         	goto	u1920
  1068  0008C8                     u1921:
  1069  0008C8  EF7A  F004         	goto	l2231
  1070  0008CC                     u1920:
  1071  0008CC                     
  1072                           ;main.c: 142:                 UnSeg++;
  1073  0008CC  4A5E               	infsnz	main@UnSeg^0,f,c
  1074  0008CE  2A5F               	incf	(main@UnSeg+1)^0,f,c
  1075  0008D0                     
  1076                           ;main.c: 143:                 if (UnSeg > 9){
  1077  0008D0  BE5F               	btfsc	(main@UnSeg+1)^0,7,c
  1078  0008D2  EF74  F004         	goto	u1931
  1079  0008D6  505F               	movf	(main@UnSeg+1)^0,w,c
  1080  0008D8  E109               	bnz	u1930
  1081  0008DA  0E0A               	movlw	10
  1082  0008DC  5C5E               	subwf	main@UnSeg^0,w,c
  1083  0008DE  A0D8               	btfss	status,0,c
  1084  0008E0  EF74  F004         	goto	u1931
  1085  0008E4  EF76  F004         	goto	u1930
  1086  0008E8                     u1931:
  1087  0008E8  EF7A  F004         	goto	l2231
  1088  0008EC                     u1930:
  1089  0008EC                     
  1090                           ;main.c: 144:                     UnSeg = 0;
  1091  0008EC  0E00               	movlw	0
  1092  0008EE  6E5F               	movwf	(main@UnSeg+1)^0,c
  1093  0008F0  0E00               	movlw	0
  1094  0008F2  6E5E               	movwf	main@UnSeg^0,c
  1095  0008F4                     l2231:
  1096                           
  1097                           ;main.c: 147:             if (((kpRead()) & (1<<(0)))){
  1098  0008F4  ECF6  F00D         	call	_kpRead	;wreg free
  1099  0008F8  A001               	btfss	?_kpRead^0,0,c
  1100  0008FA  EF81  F004         	goto	u1941
  1101  0008FE  EF83  F004         	goto	u1940
  1102  000902                     u1941:
  1103  000902  EF9A  F003         	goto	l2175
  1104  000906                     u1940:
  1105  000906                     
  1106                           ;main.c: 148:                 contP1 = UnSeg+(DeSeg*10)+(UnMin*100)+(DeMin*1000);
  1107  000906  C05C  F001         	movff	main@DeMin,___wmul@multiplier
  1108  00090A  C05D  F002         	movff	main@DeMin+1,___wmul@multiplier+1
  1109  00090E  0E03               	movlw	3
  1110  000910  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1111  000912  0EE8               	movlw	232
  1112  000914  6E03               	movwf	___wmul@multiplicand^0,c
  1113  000916  ECCA  F00D         	call	___wmul	;wreg free
  1114  00091A  C001  F04A         	movff	?___wmul,??_main
  1115  00091E  C002  F04B         	movff	?___wmul+1,??_main+1
  1116  000922  C05A  F001         	movff	main@UnMin,___wmul@multiplier
  1117  000926  C05B  F002         	movff	main@UnMin+1,___wmul@multiplier+1
  1118  00092A  0E00               	movlw	0
  1119  00092C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1120  00092E  0E64               	movlw	100
  1121  000930  6E03               	movwf	___wmul@multiplicand^0,c
  1122  000932  ECCA  F00D         	call	___wmul	;wreg free
  1123  000936  5001               	movf	?___wmul^0,w,c
  1124  000938  264A               	addwf	??_main^0,f,c
  1125  00093A  5002               	movf	(?___wmul+1)^0,w,c
  1126  00093C  224B               	addwfc	(??_main+1)^0,f,c
  1127  00093E  C060  F001         	movff	main@DeSeg,___wmul@multiplier
  1128  000942  C061  F002         	movff	main@DeSeg+1,___wmul@multiplier+1
  1129  000946  0E00               	movlw	0
  1130  000948  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1131  00094A  0E0A               	movlw	10
  1132  00094C  6E03               	movwf	___wmul@multiplicand^0,c
  1133  00094E  ECCA  F00D         	call	___wmul	;wreg free
  1134  000952  5001               	movf	?___wmul^0,w,c
  1135  000954  264A               	addwf	??_main^0,f,c
  1136  000956  5002               	movf	(?___wmul+1)^0,w,c
  1137  000958  224B               	addwfc	(??_main+1)^0,f,c
  1138  00095A  505E               	movf	main@UnSeg^0,w,c
  1139  00095C  244A               	addwf	??_main^0,w,c
  1140  00095E  6E63               	movwf	main@contP1^0,c
  1141  000960  505F               	movf	(main@UnSeg+1)^0,w,c
  1142  000962  204B               	addwfc	(??_main+1)^0,w,c
  1143  000964  6E64               	movwf	(main@contP1+1)^0,c
  1144                           
  1145                           ;main.c: 149:                 contP2 = UnSeg+(DeSeg*10)+(UnMin*100)+(DeMin*1000);
  1146  000966  C05C  F001         	movff	main@DeMin,___wmul@multiplier
  1147  00096A  C05D  F002         	movff	main@DeMin+1,___wmul@multiplier+1
  1148  00096E  0E03               	movlw	3
  1149  000970  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1150  000972  0EE8               	movlw	232
  1151  000974  6E03               	movwf	___wmul@multiplicand^0,c
  1152  000976  ECCA  F00D         	call	___wmul	;wreg free
  1153  00097A  C001  F04A         	movff	?___wmul,??_main
  1154  00097E  C002  F04B         	movff	?___wmul+1,??_main+1
  1155  000982  C05A  F001         	movff	main@UnMin,___wmul@multiplier
  1156  000986  C05B  F002         	movff	main@UnMin+1,___wmul@multiplier+1
  1157  00098A  0E00               	movlw	0
  1158  00098C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1159  00098E  0E64               	movlw	100
  1160  000990  6E03               	movwf	___wmul@multiplicand^0,c
  1161  000992  ECCA  F00D         	call	___wmul	;wreg free
  1162  000996  5001               	movf	?___wmul^0,w,c
  1163  000998  264A               	addwf	??_main^0,f,c
  1164  00099A  5002               	movf	(?___wmul+1)^0,w,c
  1165  00099C  224B               	addwfc	(??_main+1)^0,f,c
  1166  00099E  C060  F001         	movff	main@DeSeg,___wmul@multiplier
  1167  0009A2  C061  F002         	movff	main@DeSeg+1,___wmul@multiplier+1
  1168  0009A6  0E00               	movlw	0
  1169  0009A8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1170  0009AA  0E0A               	movlw	10
  1171  0009AC  6E03               	movwf	___wmul@multiplicand^0,c
  1172  0009AE  ECCA  F00D         	call	___wmul	;wreg free
  1173  0009B2  5001               	movf	?___wmul^0,w,c
  1174  0009B4  264A               	addwf	??_main^0,f,c
  1175  0009B6  5002               	movf	(?___wmul+1)^0,w,c
  1176  0009B8  224B               	addwfc	(??_main+1)^0,f,c
  1177  0009BA  505E               	movf	main@UnSeg^0,w,c
  1178  0009BC  244A               	addwf	??_main^0,w,c
  1179  0009BE  6E65               	movwf	main@contP2^0,c
  1180  0009C0  505F               	movf	(main@UnSeg+1)^0,w,c
  1181  0009C2  204B               	addwfc	(??_main+1)^0,w,c
  1182  0009C4  6E66               	movwf	(main@contP2+1)^0,c
  1183  0009C6                     
  1184                           ;main.c: 150:                 timerInit();
  1185  0009C6  EC00  F00E         	call	_timerInit	;wreg free
  1186  0009CA                     
  1187                           ;main.c: 151:                 tempflag = 1;
  1188  0009CA  0E00               	movlw	0
  1189  0009CC  6E59               	movwf	(main@tempflag+1)^0,c
  1190  0009CE  0E01               	movlw	1
  1191  0009D0  6E58               	movwf	main@tempflag^0,c
  1192  0009D2                     
  1193                           ;main.c: 152:                 lcd_cmd(0x01);
  1194  0009D2  0E01               	movlw	1
  1195  0009D4  ECB5  F00D         	call	_lcd_cmd
  1196  0009D8                     
  1197                           ;main.c: 153:                 lcd_cmd(0x80);
  1198  0009D8  0E80               	movlw	128
  1199  0009DA  ECB5  F00D         	call	_lcd_cmd
  1200  0009DE                     
  1201                           ;main.c: 154:                 lcd_str("Brancas");
  1202  0009DE  0E26               	movlw	low STR_5
  1203  0009E0  6E08               	movwf	lcd_str@str^0,c
  1204  0009E2  0E06               	movlw	high STR_5
  1205  0009E4  6E09               	movwf	(lcd_str@str+1)^0,c
  1206  0009E6  EC5D  F00D         	call	_lcd_str	;wreg free
  1207  0009EA                     
  1208                           ;main.c: 155:                 lcd_cmd(0xC0);
  1209  0009EA  0EC0               	movlw	192
  1210  0009EC  ECB5  F00D         	call	_lcd_cmd
  1211  0009F0                     
  1212                           ;main.c: 156:                 lcd_str("Jogam");
  1213  0009F0  0E42               	movlw	low STR_6
  1214  0009F2  6E08               	movwf	lcd_str@str^0,c
  1215  0009F4  0E06               	movlw	high STR_6
  1216  0009F6  6E09               	movwf	(lcd_str@str+1)^0,c
  1217  0009F8  EC5D  F00D         	call	_lcd_str	;wreg free
  1218  0009FC                     
  1219                           ;main.c: 157:                 brancas(9);
  1220  0009FC  0E09               	movlw	9
  1221  0009FE  ECE8  F00B         	call	_brancas
  1222  000A02                     l2251:
  1223                           
  1224                           ;main.c: 161:                     timerReset(5000);
  1225  000A02  0E13               	movlw	19
  1226  000A04  6E02               	movwf	(timerReset@tempo+1)^0,c
  1227  000A06  0E88               	movlw	136
  1228  000A08  6E01               	movwf	timerReset@tempo^0,c
  1229  000A0A  ECDD  F00D         	call	_timerReset	;wreg free
  1230  000A0E                     
  1231                           ;main.c: 163:                     if (tempflag == 1){
  1232  000A0E  0458               	decf	main@tempflag^0,w,c
  1233  000A10  1059               	iorwf	(main@tempflag+1)^0,w,c
  1234  000A12  A4D8               	btfss	status,2,c
  1235  000A14  EF0E  F005         	goto	u1951
  1236  000A18  EF10  F005         	goto	u1950
  1237  000A1C                     u1951:
  1238  000A1C  EF8F  F005         	goto	l2273
  1239  000A20                     u1950:
  1240  000A20                     
  1241                           ;main.c: 164:                         t1++;
  1242  000A20  4A50               	infsnz	main@t1^0,f,c
  1243  000A22  2A51               	incf	(main@t1+1)^0,f,c
  1244  000A24                     
  1245                           ;main.c: 165:                         if (t1 >= 200){
  1246  000A24  5051               	movf	(main@t1+1)^0,w,c
  1247  000A26  E109               	bnz	u1960
  1248  000A28  0EC8               	movlw	200
  1249  000A2A  5C50               	subwf	main@t1^0,w,c
  1250  000A2C  A0D8               	btfss	status,0,c
  1251  000A2E  EF1B  F005         	goto	u1961
  1252  000A32  EF1D  F005         	goto	u1960
  1253  000A36                     u1961:
  1254  000A36  EF8F  F005         	goto	l2273
  1255  000A3A                     u1960:
  1256  000A3A                     
  1257                           ;main.c: 166:                             contP1--;
  1258  000A3A  0663               	decf	main@contP1^0,f,c
  1259  000A3C  A0D8               	btfss	status,0,c
  1260  000A3E  0664               	decf	(main@contP1+1)^0,f,c
  1261  000A40                     
  1262                           ;main.c: 167:                             if (contP1 <= 0){
  1263  000A40  BE64               	btfsc	(main@contP1+1)^0,7,c
  1264  000A42  EF2D  F005         	goto	u1970
  1265  000A46  5064               	movf	(main@contP1+1)^0,w,c
  1266  000A48  E106               	bnz	u1971
  1267  000A4A  0463               	decf	main@contP1^0,w,c
  1268  000A4C  B0D8               	btfsc	status,0,c
  1269  000A4E  EF2B  F005         	goto	u1971
  1270  000A52  EF2D  F005         	goto	u1970
  1271  000A56                     u1971:
  1272  000A56  EF31  F005         	goto	l2265
  1273  000A5A                     u1970:
  1274  000A5A                     
  1275                           ;main.c: 168:                                 flagcontrole = 1;
  1276  000A5A  0E00               	movlw	0
  1277  000A5C  6E57               	movwf	(main@flagcontrole+1)^0,c
  1278  000A5E  0E01               	movlw	1
  1279  000A60  6E56               	movwf	main@flagcontrole^0,c
  1280  000A62                     l2265:
  1281                           
  1282                           ;main.c: 170:                             ssdDigit(((contP1 / 1000) % 10), 0);
  1283  000A62  0E00               	movlw	0
  1284  000A64  6E0F               	movwf	ssdDigit@pos^0,c
  1285  000A66  0E03               	movlw	3
  1286  000A68  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1287  000A6A  0EE8               	movlw	232
  1288  000A6C  6E03               	movwf	___awdiv@divisor^0,c
  1289  000A6E  C063  F001         	movff	main@contP1,___awdiv@dividend
  1290  000A72  C064  F002         	movff	main@contP1+1,___awdiv@dividend+1
  1291  000A76  ECEC  F00A         	call	___awdiv	;wreg free
  1292  000A7A  C001  F009         	movff	?___awdiv,___awmod@dividend
  1293  000A7E  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1294  000A82  0E00               	movlw	0
  1295  000A84  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1296  000A86  0E0A               	movlw	10
  1297  000A88  6E0B               	movwf	___awmod@divisor^0,c
  1298  000A8A  EC4E  F00B         	call	___awmod	;wreg free
  1299  000A8E  5009               	movf	?___awmod^0,w,c
  1300  000A90  EC06  F00D         	call	_ssdDigit
  1301  000A94                     
  1302                           ;main.c: 171:                             ssdDigit(((contP1 / 100) % 10), 1);
  1303  000A94  0E01               	movlw	1
  1304  000A96  6E0F               	movwf	ssdDigit@pos^0,c
  1305  000A98  0E00               	movlw	0
  1306  000A9A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1307  000A9C  0E64               	movlw	100
  1308  000A9E  6E03               	movwf	___awdiv@divisor^0,c
  1309  000AA0  C063  F001         	movff	main@contP1,___awdiv@dividend
  1310  000AA4  C064  F002         	movff	main@contP1+1,___awdiv@dividend+1
  1311  000AA8  ECEC  F00A         	call	___awdiv	;wreg free
  1312  000AAC  C001  F009         	movff	?___awdiv,___awmod@dividend
  1313  000AB0  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1314  000AB4  0E00               	movlw	0
  1315  000AB6  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1316  000AB8  0E0A               	movlw	10
  1317  000ABA  6E0B               	movwf	___awmod@divisor^0,c
  1318  000ABC  EC4E  F00B         	call	___awmod	;wreg free
  1319  000AC0  5009               	movf	?___awmod^0,w,c
  1320  000AC2  EC06  F00D         	call	_ssdDigit
  1321  000AC6                     
  1322                           ;main.c: 172:                             ssdDigit(((contP1 / 10) % 10), 2);
  1323  000AC6  0E02               	movlw	2
  1324  000AC8  6E0F               	movwf	ssdDigit@pos^0,c
  1325  000ACA  0E00               	movlw	0
  1326  000ACC  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1327  000ACE  0E0A               	movlw	10
  1328  000AD0  6E03               	movwf	___awdiv@divisor^0,c
  1329  000AD2  C063  F001         	movff	main@contP1,___awdiv@dividend
  1330  000AD6  C064  F002         	movff	main@contP1+1,___awdiv@dividend+1
  1331  000ADA  ECEC  F00A         	call	___awdiv	;wreg free
  1332  000ADE  C001  F009         	movff	?___awdiv,___awmod@dividend
  1333  000AE2  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1334  000AE6  0E00               	movlw	0
  1335  000AE8  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1336  000AEA  0E0A               	movlw	10
  1337  000AEC  6E0B               	movwf	___awmod@divisor^0,c
  1338  000AEE  EC4E  F00B         	call	___awmod	;wreg free
  1339  000AF2  5009               	movf	?___awmod^0,w,c
  1340  000AF4  EC06  F00D         	call	_ssdDigit
  1341  000AF8                     
  1342                           ;main.c: 173:                             ssdDigit((contP1 % 10), 3);
  1343  000AF8  0E03               	movlw	3
  1344  000AFA  6E0F               	movwf	ssdDigit@pos^0,c
  1345  000AFC  C063  F009         	movff	main@contP1,___awmod@dividend
  1346  000B00  C064  F00A         	movff	main@contP1+1,___awmod@dividend+1
  1347  000B04  0E00               	movlw	0
  1348  000B06  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1349  000B08  0E0A               	movlw	10
  1350  000B0A  6E0B               	movwf	___awmod@divisor^0,c
  1351  000B0C  EC4E  F00B         	call	___awmod	;wreg free
  1352  000B10  5009               	movf	?___awmod^0,w,c
  1353  000B12  EC06  F00D         	call	_ssdDigit
  1354                           
  1355                           ;main.c: 174:                             t1 = 0;
  1356  000B16  0E00               	movlw	0
  1357  000B18  6E51               	movwf	(main@t1+1)^0,c
  1358  000B1A  0E00               	movlw	0
  1359  000B1C  6E50               	movwf	main@t1^0,c
  1360  000B1E                     l2273:
  1361                           
  1362                           ;main.c: 177:                     if (tempflag == 2){
  1363  000B1E  0E02               	movlw	2
  1364  000B20  1858               	xorwf	main@tempflag^0,w,c
  1365  000B22  1059               	iorwf	(main@tempflag+1)^0,w,c
  1366  000B24  A4D8               	btfss	status,2,c
  1367  000B26  EF97  F005         	goto	u1981
  1368  000B2A  EF99  F005         	goto	u1980
  1369  000B2E                     u1981:
  1370  000B2E  EF18  F006         	goto	l2293
  1371  000B32                     u1980:
  1372  000B32                     
  1373                           ;main.c: 178:                         t2++;
  1374  000B32  4A52               	infsnz	main@t2^0,f,c
  1375  000B34  2A53               	incf	(main@t2+1)^0,f,c
  1376  000B36                     
  1377                           ;main.c: 179:                         if (t2 >= 200){
  1378  000B36  5053               	movf	(main@t2+1)^0,w,c
  1379  000B38  E109               	bnz	u1990
  1380  000B3A  0EC8               	movlw	200
  1381  000B3C  5C52               	subwf	main@t2^0,w,c
  1382  000B3E  A0D8               	btfss	status,0,c
  1383  000B40  EFA4  F005         	goto	u1991
  1384  000B44  EFA6  F005         	goto	u1990
  1385  000B48                     u1991:
  1386  000B48  EF18  F006         	goto	l2293
  1387  000B4C                     u1990:
  1388  000B4C                     
  1389                           ;main.c: 180:                             contP2--;
  1390  000B4C  0665               	decf	main@contP2^0,f,c
  1391  000B4E  A0D8               	btfss	status,0,c
  1392  000B50  0666               	decf	(main@contP2+1)^0,f,c
  1393  000B52                     
  1394                           ;main.c: 181:                             if (contP2 <= 0){
  1395  000B52  BE66               	btfsc	(main@contP2+1)^0,7,c
  1396  000B54  EFB6  F005         	goto	u2000
  1397  000B58  5066               	movf	(main@contP2+1)^0,w,c
  1398  000B5A  E106               	bnz	u2001
  1399  000B5C  0465               	decf	main@contP2^0,w,c
  1400  000B5E  B0D8               	btfsc	status,0,c
  1401  000B60  EFB4  F005         	goto	u2001
  1402  000B64  EFB6  F005         	goto	u2000
  1403  000B68                     u2001:
  1404  000B68  EFBA  F005         	goto	l2285
  1405  000B6C                     u2000:
  1406  000B6C                     
  1407                           ;main.c: 182:                                 flagcontrole = 2;
  1408  000B6C  0E00               	movlw	0
  1409  000B6E  6E57               	movwf	(main@flagcontrole+1)^0,c
  1410  000B70  0E02               	movlw	2
  1411  000B72  6E56               	movwf	main@flagcontrole^0,c
  1412  000B74                     l2285:
  1413                           
  1414                           ;main.c: 184:                             ssdDigit(((contP2 / 1000) % 10), 0);
  1415  000B74  0E00               	movlw	0
  1416  000B76  6E0F               	movwf	ssdDigit@pos^0,c
  1417  000B78  0E03               	movlw	3
  1418  000B7A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1419  000B7C  0EE8               	movlw	232
  1420  000B7E  6E03               	movwf	___awdiv@divisor^0,c
  1421  000B80  C065  F001         	movff	main@contP2,___awdiv@dividend
  1422  000B84  C066  F002         	movff	main@contP2+1,___awdiv@dividend+1
  1423  000B88  ECEC  F00A         	call	___awdiv	;wreg free
  1424  000B8C  C001  F009         	movff	?___awdiv,___awmod@dividend
  1425  000B90  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1426  000B94  0E00               	movlw	0
  1427  000B96  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1428  000B98  0E0A               	movlw	10
  1429  000B9A  6E0B               	movwf	___awmod@divisor^0,c
  1430  000B9C  EC4E  F00B         	call	___awmod	;wreg free
  1431  000BA0  5009               	movf	?___awmod^0,w,c
  1432  000BA2  EC06  F00D         	call	_ssdDigit
  1433  000BA6                     
  1434                           ;main.c: 185:                             ssdDigit(((contP2 / 100) % 10), 1);
  1435  000BA6  0E01               	movlw	1
  1436  000BA8  6E0F               	movwf	ssdDigit@pos^0,c
  1437  000BAA  0E00               	movlw	0
  1438  000BAC  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1439  000BAE  0E64               	movlw	100
  1440  000BB0  6E03               	movwf	___awdiv@divisor^0,c
  1441  000BB2  C065  F001         	movff	main@contP2,___awdiv@dividend
  1442  000BB6  C066  F002         	movff	main@contP2+1,___awdiv@dividend+1
  1443  000BBA  ECEC  F00A         	call	___awdiv	;wreg free
  1444  000BBE  C001  F009         	movff	?___awdiv,___awmod@dividend
  1445  000BC2  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1446  000BC6  0E00               	movlw	0
  1447  000BC8  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1448  000BCA  0E0A               	movlw	10
  1449  000BCC  6E0B               	movwf	___awmod@divisor^0,c
  1450  000BCE  EC4E  F00B         	call	___awmod	;wreg free
  1451  000BD2  5009               	movf	?___awmod^0,w,c
  1452  000BD4  EC06  F00D         	call	_ssdDigit
  1453  000BD8                     
  1454                           ;main.c: 186:                             ssdDigit(((contP2 / 10) % 10), 2);
  1455  000BD8  0E02               	movlw	2
  1456  000BDA  6E0F               	movwf	ssdDigit@pos^0,c
  1457  000BDC  0E00               	movlw	0
  1458  000BDE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1459  000BE0  0E0A               	movlw	10
  1460  000BE2  6E03               	movwf	___awdiv@divisor^0,c
  1461  000BE4  C065  F001         	movff	main@contP2,___awdiv@dividend
  1462  000BE8  C066  F002         	movff	main@contP2+1,___awdiv@dividend+1
  1463  000BEC  ECEC  F00A         	call	___awdiv	;wreg free
  1464  000BF0  C001  F009         	movff	?___awdiv,___awmod@dividend
  1465  000BF4  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1466  000BF8  0E00               	movlw	0
  1467  000BFA  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1468  000BFC  0E0A               	movlw	10
  1469  000BFE  6E0B               	movwf	___awmod@divisor^0,c
  1470  000C00  EC4E  F00B         	call	___awmod	;wreg free
  1471  000C04  5009               	movf	?___awmod^0,w,c
  1472  000C06  EC06  F00D         	call	_ssdDigit
  1473  000C0A                     
  1474                           ;main.c: 187:                             ssdDigit((contP2 % 10), 3);
  1475  000C0A  0E03               	movlw	3
  1476  000C0C  6E0F               	movwf	ssdDigit@pos^0,c
  1477  000C0E  C065  F009         	movff	main@contP2,___awmod@dividend
  1478  000C12  C066  F00A         	movff	main@contP2+1,___awmod@dividend+1
  1479  000C16  0E00               	movlw	0
  1480  000C18  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1481  000C1A  0E0A               	movlw	10
  1482  000C1C  6E0B               	movwf	___awmod@divisor^0,c
  1483  000C1E  EC4E  F00B         	call	___awmod	;wreg free
  1484  000C22  5009               	movf	?___awmod^0,w,c
  1485  000C24  EC06  F00D         	call	_ssdDigit
  1486                           
  1487                           ;main.c: 188:                             t2 = 0;
  1488  000C28  0E00               	movlw	0
  1489  000C2A  6E53               	movwf	(main@t2+1)^0,c
  1490  000C2C  0E00               	movlw	0
  1491  000C2E  6E52               	movwf	main@t2^0,c
  1492  000C30                     l2293:
  1493                           
  1494                           ;main.c: 192:                     kpDebounce();
  1495  000C30  EC87  F009         	call	_kpDebounce	;wreg free
  1496  000C34                     
  1497                           ;main.c: 193:                     if (kpRead() != tecla2){
  1498  000C34  ECF6  F00D         	call	_kpRead	;wreg free
  1499  000C38  504E               	movf	main@tecla2^0,w,c
  1500  000C3A  1801               	xorwf	?_kpRead^0,w,c
  1501  000C3C  E109               	bnz	u2010
  1502  000C3E  504F               	movf	(main@tecla2+1)^0,w,c
  1503  000C40  1802               	xorwf	(?_kpRead+1)^0,w,c
  1504  000C42  B4D8               	btfsc	status,2,c
  1505  000C44  EF26  F006         	goto	u2011
  1506  000C48  EF28  F006         	goto	u2010
  1507  000C4C                     u2011:
  1508  000C4C  EF78  F006         	goto	l2321
  1509  000C50                     u2010:
  1510  000C50                     
  1511                           ;main.c: 194:                         tecla2 = kpRead();
  1512  000C50  ECF6  F00D         	call	_kpRead	;wreg free
  1513  000C54  C001  F04E         	movff	?_kpRead,main@tecla2
  1514  000C58  C002  F04F         	movff	?_kpRead+1,main@tecla2+1
  1515                           
  1516                           ;main.c: 196:                         if (((kpRead()) & (1<<(3)))){
  1517  000C5C  ECF6  F00D         	call	_kpRead	;wreg free
  1518  000C60  A601               	btfss	?_kpRead^0,3,c
  1519  000C62  EF35  F006         	goto	u2021
  1520  000C66  EF37  F006         	goto	u2020
  1521  000C6A                     u2021:
  1522  000C6A  EF53  F006         	goto	l2309
  1523  000C6E                     u2020:
  1524  000C6E                     
  1525                           ;main.c: 197:                             lcd_cmd(0x01);
  1526  000C6E  0E01               	movlw	1
  1527  000C70  ECB5  F00D         	call	_lcd_cmd
  1528                           
  1529                           ;main.c: 198:                             lcd_cmd(0x80);
  1530  000C74  0E80               	movlw	128
  1531  000C76  ECB5  F00D         	call	_lcd_cmd
  1532  000C7A                     
  1533                           ;main.c: 199:                             lcd_str("Brancas");
  1534  000C7A  0E26               	movlw	low STR_5
  1535  000C7C  6E08               	movwf	lcd_str@str^0,c
  1536  000C7E  0E06               	movlw	high STR_5
  1537  000C80  6E09               	movwf	(lcd_str@str+1)^0,c
  1538  000C82  EC5D  F00D         	call	_lcd_str	;wreg free
  1539  000C86                     
  1540                           ;main.c: 200:                             lcd_cmd(0xC0);
  1541  000C86  0EC0               	movlw	192
  1542  000C88  ECB5  F00D         	call	_lcd_cmd
  1543                           
  1544                           ;main.c: 201:                             lcd_str("Jogam");
  1545  000C8C  0E42               	movlw	low STR_6
  1546  000C8E  6E08               	movwf	lcd_str@str^0,c
  1547  000C90  0E06               	movlw	high STR_6
  1548  000C92  6E09               	movwf	(lcd_str@str+1)^0,c
  1549  000C94  EC5D  F00D         	call	_lcd_str	;wreg free
  1550  000C98                     
  1551                           ;main.c: 202:                             brancas(9);
  1552  000C98  0E09               	movlw	9
  1553  000C9A  ECE8  F00B         	call	_brancas
  1554  000C9E                     
  1555                           ;main.c: 204:                             tempflag = 1;
  1556  000C9E  0E00               	movlw	0
  1557  000CA0  6E59               	movwf	(main@tempflag+1)^0,c
  1558  000CA2  0E01               	movlw	1
  1559  000CA4  6E58               	movwf	main@tempflag^0,c
  1560  000CA6                     l2309:
  1561                           
  1562                           ;main.c: 207:                         if (((kpRead()) & (1<<(7)))){
  1563  000CA6  ECF6  F00D         	call	_kpRead	;wreg free
  1564  000CAA  AE01               	btfss	?_kpRead^0,7,c
  1565  000CAC  EF5A  F006         	goto	u2031
  1566  000CB0  EF5C  F006         	goto	u2030
  1567  000CB4                     u2031:
  1568  000CB4  EF78  F006         	goto	l2321
  1569  000CB8                     u2030:
  1570  000CB8                     
  1571                           ;main.c: 209:                             lcd_cmd(0x01);
  1572  000CB8  0E01               	movlw	1
  1573  000CBA  ECB5  F00D         	call	_lcd_cmd
  1574                           
  1575                           ;main.c: 210:                             lcd_cmd(0x80);
  1576  000CBE  0E80               	movlw	128
  1577  000CC0  ECB5  F00D         	call	_lcd_cmd
  1578  000CC4                     
  1579                           ;main.c: 211:                             lcd_str("Pretas");
  1580  000CC4  0E35               	movlw	low STR_9
  1581  000CC6  6E08               	movwf	lcd_str@str^0,c
  1582  000CC8  0E06               	movlw	high STR_9
  1583  000CCA  6E09               	movwf	(lcd_str@str+1)^0,c
  1584  000CCC  EC5D  F00D         	call	_lcd_str	;wreg free
  1585  000CD0                     
  1586                           ;main.c: 212:                             lcd_cmd(0xC0);
  1587  000CD0  0EC0               	movlw	192
  1588  000CD2  ECB5  F00D         	call	_lcd_cmd
  1589                           
  1590                           ;main.c: 213:                             lcd_str("Jogam");
  1591  000CD6  0E42               	movlw	low STR_6
  1592  000CD8  6E08               	movwf	lcd_str@str^0,c
  1593  000CDA  0E06               	movlw	high STR_6
  1594  000CDC  6E09               	movwf	(lcd_str@str+1)^0,c
  1595  000CDE  EC5D  F00D         	call	_lcd_str	;wreg free
  1596  000CE2                     
  1597                           ;main.c: 214:                             pretas(9);
  1598  000CE2  0E09               	movlw	9
  1599  000CE4  ECA6  F00B         	call	_pretas
  1600  000CE8                     
  1601                           ;main.c: 216:                             tempflag = 2;
  1602  000CE8  0E00               	movlw	0
  1603  000CEA  6E59               	movwf	(main@tempflag+1)^0,c
  1604  000CEC  0E02               	movlw	2
  1605  000CEE  6E58               	movwf	main@tempflag^0,c
  1606  000CF0                     l2321:
  1607                           
  1608                           ;main.c: 220:                     if (flagcontrole == 1){
  1609  000CF0  0456               	decf	main@flagcontrole^0,w,c
  1610  000CF2  1057               	iorwf	(main@flagcontrole+1)^0,w,c
  1611  000CF4  A4D8               	btfss	status,2,c
  1612  000CF6  EF7F  F006         	goto	u2041
  1613  000CFA  EF81  F006         	goto	u2040
  1614  000CFE                     u2041:
  1615  000CFE  EFD4  F006         	goto	l2363
  1616  000D02                     u2040:
  1617  000D02                     
  1618                           ;main.c: 221:                         flagcontrole = 0;
  1619  000D02  0E00               	movlw	0
  1620  000D04  6E57               	movwf	(main@flagcontrole+1)^0,c
  1621  000D06  0E00               	movlw	0
  1622  000D08  6E56               	movwf	main@flagcontrole^0,c
  1623                           
  1624                           ;main.c: 222:                         tempflag = 0;
  1625  000D0A  0E00               	movlw	0
  1626  000D0C  6E59               	movwf	(main@tempflag+1)^0,c
  1627  000D0E  0E00               	movlw	0
  1628  000D10  6E58               	movwf	main@tempflag^0,c
  1629  000D12                     
  1630                           ;main.c: 223:                         lcd_cmd(0x01);
  1631  000D12  0E01               	movlw	1
  1632  000D14  ECB5  F00D         	call	_lcd_cmd
  1633  000D18                     
  1634                           ;main.c: 224:                         lcd_cmd(0x80 + 1);
  1635  000D18  0E81               	movlw	129
  1636  000D1A  ECB5  F00D         	call	_lcd_cmd
  1637  000D1E                     
  1638                           ;main.c: 225:                         lcd_str("Vencedor");
  1639  000D1E  0E1D               	movlw	low STR_11
  1640  000D20  6E08               	movwf	lcd_str@str^0,c
  1641  000D22  0E06               	movlw	high STR_11
  1642  000D24  6E09               	movwf	(lcd_str@str+1)^0,c
  1643  000D26  EC5D  F00D         	call	_lcd_str	;wreg free
  1644  000D2A                     
  1645                           ;main.c: 226:                         lcd_cmd(0xC0 + 2);
  1646  000D2A  0EC2               	movlw	194
  1647  000D2C  ECB5  F00D         	call	_lcd_cmd
  1648  000D30                     
  1649                           ;main.c: 227:                         lcd_str("Pretas");
  1650  000D30  0E35               	movlw	low STR_9
  1651  000D32  6E08               	movwf	lcd_str@str^0,c
  1652  000D34  0E06               	movlw	high STR_9
  1653  000D36  6E09               	movwf	(lcd_str@str+1)^0,c
  1654  000D38  EC5D  F00D         	call	_lcd_str	;wreg free
  1655  000D3C                     
  1656                           ;main.c: 228:                         pretas(10);
  1657  000D3C  0E0A               	movlw	10
  1658  000D3E  ECA6  F00B         	call	_pretas
  1659  000D42                     
  1660                           ;main.c: 230:                         for (j = 0; j < 3; j++) {
  1661  000D42  0E00               	movlw	0
  1662  000D44  6E62               	movwf	main@j^0,c
  1663  000D46                     l2339:
  1664  000D46  0E02               	movlw	2
  1665  000D48  6462               	cpfsgt	main@j^0,c
  1666  000D4A  EFA9  F006         	goto	u2051
  1667  000D4E  EFAB  F006         	goto	u2050
  1668  000D52                     u2051:
  1669  000D52  EFAD  F006         	goto	l2343
  1670  000D56                     u2050:
  1671  000D56  EFD4  F006         	goto	l2363
  1672  000D5A                     l2343:
  1673                           
  1674                           ;main.c: 231:                             for (i = 1; i > 0; i = i * 2) {
  1675  000D5A  0E01               	movlw	1
  1676  000D5C  6E67               	movwf	main@i^0,c
  1677  000D5E  5067               	movf	main@i^0,w,c
  1678  000D60  A4D8               	btfss	status,2,c
  1679  000D62  EFB5  F006         	goto	u2061
  1680  000D66  EFB7  F006         	goto	u2060
  1681  000D6A                     u2061:
  1682  000D6A  EFB9  F006         	goto	l2347
  1683  000D6E                     u2060:
  1684  000D6E  EFD0  F006         	goto	l2359
  1685  000D72                     l2347:
  1686                           
  1687                           ;main.c: 232:                                 ((TRISC) |= (1<<(1)));
  1688  000D72  8294               	bsf	148,1,c	;volatile
  1689  000D74                     
  1690                           ;main.c: 233:                                 PORTB = i;
  1691  000D74  C067  FF81         	movff	main@i,3969	;volatile
  1692  000D78                     
  1693                           ;main.c: 234:                                 PORTD = i;
  1694  000D78  C067  FF83         	movff	main@i,3971	;volatile
  1695  000D7C                     
  1696                           ;main.c: 235:                                 atraso_ms(100);
  1697  000D7C  0E00               	movlw	0
  1698  000D7E  6E02               	movwf	(atraso_ms@t+1)^0,c
  1699  000D80  0E64               	movlw	100
  1700  000D82  6E01               	movwf	atraso_ms@t^0,c
  1701  000D84  ECA6  F00C         	call	_atraso_ms	;wreg free
  1702  000D88                     
  1703                           ;main.c: 236:                             }
  1704  000D88  5067               	movf	main@i^0,w,c
  1705  000D8A  0D02               	mullw	2
  1706  000D8C  CFF3 F067          	movff	prodl,main@i
  1707  000D90  5067               	movf	main@i^0,w,c
  1708  000D92  A4D8               	btfss	status,2,c
  1709  000D94  EFCE  F006         	goto	u2071
  1710  000D98  EFD0  F006         	goto	u2070
  1711  000D9C                     u2071:
  1712  000D9C  EFB9  F006         	goto	l2347
  1713  000DA0                     u2070:
  1714  000DA0                     l2359:
  1715                           
  1716                           ;main.c: 237:                             ((TRISC) &= ~(1<<(1)));
  1717  000DA0  9294               	bcf	148,1,c	;volatile
  1718                           
  1719                           ;main.c: 238:                         }
  1720  000DA2  2A62               	incf	main@j^0,f,c
  1721  000DA4  EFA3  F006         	goto	l2339
  1722  000DA8                     l2363:
  1723                           
  1724                           ;main.c: 241:                     if (flagcontrole == 2){
  1725  000DA8  0E02               	movlw	2
  1726  000DAA  1856               	xorwf	main@flagcontrole^0,w,c
  1727  000DAC  1057               	iorwf	(main@flagcontrole+1)^0,w,c
  1728  000DAE  A4D8               	btfss	status,2,c
  1729  000DB0  EFDC  F006         	goto	u2081
  1730  000DB4  EFDE  F006         	goto	u2080
  1731  000DB8                     u2081:
  1732  000DB8  EF31  F007         	goto	l2405
  1733  000DBC                     u2080:
  1734  000DBC                     
  1735                           ;main.c: 242:                         flagcontrole = 0;
  1736  000DBC  0E00               	movlw	0
  1737  000DBE  6E57               	movwf	(main@flagcontrole+1)^0,c
  1738  000DC0  0E00               	movlw	0
  1739  000DC2  6E56               	movwf	main@flagcontrole^0,c
  1740                           
  1741                           ;main.c: 243:                         tempflag = 0;
  1742  000DC4  0E00               	movlw	0
  1743  000DC6  6E59               	movwf	(main@tempflag+1)^0,c
  1744  000DC8  0E00               	movlw	0
  1745  000DCA  6E58               	movwf	main@tempflag^0,c
  1746  000DCC                     
  1747                           ;main.c: 244:                         lcd_cmd(0x01);
  1748  000DCC  0E01               	movlw	1
  1749  000DCE  ECB5  F00D         	call	_lcd_cmd
  1750  000DD2                     
  1751                           ;main.c: 245:                         lcd_cmd(0x80 + 1);
  1752  000DD2  0E81               	movlw	129
  1753  000DD4  ECB5  F00D         	call	_lcd_cmd
  1754  000DD8                     
  1755                           ;main.c: 246:                         lcd_str("Vencedor");
  1756  000DD8  0E1D               	movlw	low STR_11
  1757  000DDA  6E08               	movwf	lcd_str@str^0,c
  1758  000DDC  0E06               	movlw	high STR_11
  1759  000DDE  6E09               	movwf	(lcd_str@str+1)^0,c
  1760  000DE0  EC5D  F00D         	call	_lcd_str	;wreg free
  1761  000DE4                     
  1762                           ;main.c: 247:                         lcd_cmd(0xC0 + 2);
  1763  000DE4  0EC2               	movlw	194
  1764  000DE6  ECB5  F00D         	call	_lcd_cmd
  1765  000DEA                     
  1766                           ;main.c: 248:                         lcd_str("Brancas");
  1767  000DEA  0E26               	movlw	low STR_5
  1768  000DEC  6E08               	movwf	lcd_str@str^0,c
  1769  000DEE  0E06               	movlw	high STR_5
  1770  000DF0  6E09               	movwf	(lcd_str@str+1)^0,c
  1771  000DF2  EC5D  F00D         	call	_lcd_str	;wreg free
  1772  000DF6                     
  1773                           ;main.c: 249:                         brancas(10);
  1774  000DF6  0E0A               	movlw	10
  1775  000DF8  ECE8  F00B         	call	_brancas
  1776  000DFC                     
  1777                           ;main.c: 251:                         for (j = 0; j < 3; j++) {
  1778  000DFC  0E00               	movlw	0
  1779  000DFE  6E62               	movwf	main@j^0,c
  1780  000E00                     l2381:
  1781  000E00  0E02               	movlw	2
  1782  000E02  6462               	cpfsgt	main@j^0,c
  1783  000E04  EF06  F007         	goto	u2091
  1784  000E08  EF08  F007         	goto	u2090
  1785  000E0C                     u2091:
  1786  000E0C  EF0A  F007         	goto	l2385
  1787  000E10                     u2090:
  1788  000E10  EF31  F007         	goto	l2405
  1789  000E14                     l2385:
  1790                           
  1791                           ;main.c: 252:                             for (i = 1; i > 0; i = i * 2) {
  1792  000E14  0E01               	movlw	1
  1793  000E16  6E67               	movwf	main@i^0,c
  1794  000E18  5067               	movf	main@i^0,w,c
  1795  000E1A  A4D8               	btfss	status,2,c
  1796  000E1C  EF12  F007         	goto	u2101
  1797  000E20  EF14  F007         	goto	u2100
  1798  000E24                     u2101:
  1799  000E24  EF16  F007         	goto	l2389
  1800  000E28                     u2100:
  1801  000E28  EF2D  F007         	goto	l2401
  1802  000E2C                     l2389:
  1803                           
  1804                           ;main.c: 253:                                 ((TRISC) |= (1<<(1)));
  1805  000E2C  8294               	bsf	148,1,c	;volatile
  1806  000E2E                     
  1807                           ;main.c: 254:                                 PORTB = i;
  1808  000E2E  C067  FF81         	movff	main@i,3969	;volatile
  1809  000E32                     
  1810                           ;main.c: 255:                                 PORTD = i;
  1811  000E32  C067  FF83         	movff	main@i,3971	;volatile
  1812  000E36                     
  1813                           ;main.c: 256:                                 atraso_ms(100);
  1814  000E36  0E00               	movlw	0
  1815  000E38  6E02               	movwf	(atraso_ms@t+1)^0,c
  1816  000E3A  0E64               	movlw	100
  1817  000E3C  6E01               	movwf	atraso_ms@t^0,c
  1818  000E3E  ECA6  F00C         	call	_atraso_ms	;wreg free
  1819  000E42                     
  1820                           ;main.c: 257:                             }
  1821  000E42  5067               	movf	main@i^0,w,c
  1822  000E44  0D02               	mullw	2
  1823  000E46  CFF3 F067          	movff	prodl,main@i
  1824  000E4A  5067               	movf	main@i^0,w,c
  1825  000E4C  A4D8               	btfss	status,2,c
  1826  000E4E  EF2B  F007         	goto	u2111
  1827  000E52  EF2D  F007         	goto	u2110
  1828  000E56                     u2111:
  1829  000E56  EF16  F007         	goto	l2389
  1830  000E5A                     u2110:
  1831  000E5A                     l2401:
  1832                           
  1833                           ;main.c: 258:                             ((TRISC) &= ~(1<<(1)));
  1834  000E5A  9294               	bcf	148,1,c	;volatile
  1835                           
  1836                           ;main.c: 259:                         }
  1837  000E5C  2A62               	incf	main@j^0,f,c
  1838  000E5E  EF00  F007         	goto	l2381
  1839  000E62                     l2405:
  1840                           
  1841                           ;main.c: 262:                     ssdUpdate();
  1842  000E62  EC44  F00A         	call	_ssdUpdate	;wreg free
  1843  000E66                     
  1844                           ;main.c: 263:                     timerWait();
  1845  000E66  ECEE  F00D         	call	_timerWait	;wreg free
  1846                           
  1847                           ;main.c: 264:                 }
  1848  000E6A  EF01  F005         	goto	l2251
  1849  000E6E  EF00  F000         	goto	start
  1850  000E72                     __end_of_main:
  1851                           	callstack 0
  1852                           
  1853 ;; *************** function _timerWait *****************
  1854 ;; Defined at:
  1855 ;;		line 31 in file "timer.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;		None
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;		None
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      void 
  1862 ;; Registers used:
  1863 ;;		None
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1869 ;;      Params:         0       0       0       0       0       0       0
  1870 ;;      Locals:         0       0       0       0       0       0       0
  1871 ;;      Temps:          0       0       0       0       0       0       0
  1872 ;;      Totals:         0       0       0       0       0       0       0
  1873 ;;Total ram usage:        0 bytes
  1874 ;; Hardware stack levels used: 1
  1875 ;; This function calls:
  1876 ;;		Nothing
  1877 ;; This function is called by:
  1878 ;;		_main
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text1
  1883  001BDC                     __ptext1:
  1884                           	callstack 0
  1885  001BDC                     _timerWait:
  1886                           	callstack 30
  1887  001BDC                     l190:
  1888  001BDC  A4F2               	btfss	242,2,c	;volatile
  1889  001BDE  EFF3  F00D         	goto	u601
  1890  001BE2  EFF5  F00D         	goto	u600
  1891  001BE6                     u601:
  1892  001BE6  EFEE  F00D         	goto	l190
  1893  001BEA                     u600:
  1894  001BEA  0012               	return		;funcret
  1895  001BEC                     __end_of_timerWait:
  1896                           	callstack 0
  1897                           
  1898 ;; *************** function _timerReset *****************
  1899 ;; Defined at:
  1900 ;;		line 37 in file "timer.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  tempo           2    0[COMRAM] unsigned int 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  ciclos          2    2[COMRAM] unsigned int 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, status,0
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1914 ;;      Params:         2       0       0       0       0       0       0
  1915 ;;      Locals:         2       0       0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0       0       0
  1917 ;;      Totals:         4       0       0       0       0       0       0
  1918 ;;Total ram usage:        4 bytes
  1919 ;; Hardware stack levels used: 1
  1920 ;; This function calls:
  1921 ;;		Nothing
  1922 ;; This function is called by:
  1923 ;;		_main
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           	psect	text2
  1928  001BBA                     __ptext2:
  1929                           	callstack 0
  1930  001BBA                     _timerReset:
  1931                           	callstack 30
  1932  001BBA                     
  1933                           ;timer.c: 37: void timerReset(unsigned int tempo);timer.c: 38: {;timer.c: 40:  unsigned 
      +                          ciclos = tempo * 2;
  1934  001BBA  90D8               	bcf	status,0,c
  1935  001BBC  3401               	rlcf	timerReset@tempo^0,w,c
  1936  001BBE  6E03               	movwf	timerReset@ciclos^0,c
  1937  001BC0  3402               	rlcf	(timerReset@tempo+1)^0,w,c
  1938  001BC2  6E04               	movwf	(timerReset@ciclos+1)^0,c
  1939  001BC4                     
  1940                           ;timer.c: 42:  ciclos = 65535 - ciclos;
  1941  001BC4  1E03               	comf	timerReset@ciclos^0,f,c
  1942  001BC6  1E04               	comf	(timerReset@ciclos+1)^0,f,c
  1943  001BC8                     
  1944                           ;timer.c: 44:  ciclos -= 14;
  1945  001BC8  0E0E               	movlw	14
  1946  001BCA  5E03               	subwf	timerReset@ciclos^0,f,c
  1947  001BCC  0E00               	movlw	0
  1948  001BCE  5A04               	subwfb	(timerReset@ciclos+1)^0,f,c
  1949  001BD0                     
  1950                           ;timer.c: 45:  TMR0H = (ciclos >> 8);
  1951  001BD0  5004               	movf	(timerReset@ciclos+1)^0,w,c
  1952  001BD2  6ED7               	movwf	215,c	;volatile
  1953  001BD4                     
  1954                           ;timer.c: 46:  TMR0L = (ciclos & 0x00FF);
  1955  001BD4  C003  FFD6         	movff	timerReset@ciclos,4054	;volatile
  1956  001BD8                     
  1957                           ;timer.c: 48:  ((INTCON) &= ~(1<<(2)));
  1958  001BD8  94F2               	bcf	242,2,c	;volatile
  1959  001BDA  0012               	return		;funcret
  1960  001BDC                     __end_of_timerReset:
  1961                           	callstack 0
  1962                           
  1963 ;; *************** function _timerInit *****************
  1964 ;; Defined at:
  1965 ;;		line 51 in file "timer.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;		None
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;		None
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  1    wreg      void 
  1972 ;; Registers used:
  1973 ;;		wreg, status,2, status,0
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1979 ;;      Params:         0       0       0       0       0       0       0
  1980 ;;      Locals:         0       0       0       0       0       0       0
  1981 ;;      Temps:          0       0       0       0       0       0       0
  1982 ;;      Totals:         0       0       0       0       0       0       0
  1983 ;;Total ram usage:        0 bytes
  1984 ;; Hardware stack levels used: 1
  1985 ;; This function calls:
  1986 ;;		Nothing
  1987 ;; This function is called by:
  1988 ;;		_main
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text3
  1993  001C00                     __ptext3:
  1994                           	callstack 0
  1995  001C00                     _timerInit:
  1996                           	callstack 30
  1997  001C00                     
  1998                           ;timer.c: 53:  T0CON = 0b00001000;
  1999  001C00  0E08               	movlw	8
  2000  001C02  6ED5               	movwf	213,c	;volatile
  2001  001C04                     
  2002                           ;timer.c: 54:  ((T0CON) |= (1<<(7)));
  2003  001C04  8ED5               	bsf	213,7,c	;volatile
  2004  001C06  0012               	return		;funcret
  2005  001C08                     __end_of_timerInit:
  2006                           	callstack 0
  2007                           
  2008 ;; *************** function _ssdUpdate *****************
  2009 ;; Defined at:
  2010 ;;		line 54 in file "ssd.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;		None
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;		None
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2024 ;;      Params:         0       0       0       0       0       0       0
  2025 ;;      Locals:         0       0       0       0       0       0       0
  2026 ;;      Temps:          2       0       0       0       0       0       0
  2027 ;;      Totals:         2       0       0       0       0       0       0
  2028 ;;Total ram usage:        2 bytes
  2029 ;; Hardware stack levels used: 1
  2030 ;; Hardware stack levels required when called: 1
  2031 ;; This function calls:
  2032 ;;		_digitalWrite
  2033 ;; This function is called by:
  2034 ;;		_main
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           	psect	text4
  2039  001488                     __ptext4:
  2040                           	callstack 0
  2041  001488                     _ssdUpdate:
  2042                           	callstack 29
  2043  001488                     
  2044                           ;ssd.c: 58:     TRISD= 0x00;
  2045  001488  0E00               	movlw	0
  2046  00148A  6E95               	movwf	149,c	;volatile
  2047  00148C                     
  2048                           ;ssd.c: 60:     digitalWrite(PIN_A2,0);
  2049  00148C  0E00               	movlw	0
  2050  00148E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2051  001490  0E02               	movlw	2
  2052  001492  6E01               	movwf	digitalWrite@pin^0,c
  2053  001494  0E00               	movlw	0
  2054  001496  6E04               	movwf	(digitalWrite@value+1)^0,c
  2055  001498  0E00               	movlw	0
  2056  00149A  6E03               	movwf	digitalWrite@value^0,c
  2057  00149C  EC39  F007         	call	_digitalWrite	;wreg free
  2058  0014A0                     
  2059                           ;ssd.c: 61:     digitalWrite(PIN_A3,0);
  2060  0014A0  0E00               	movlw	0
  2061  0014A2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2062  0014A4  0E03               	movlw	3
  2063  0014A6  6E01               	movwf	digitalWrite@pin^0,c
  2064  0014A8  0E00               	movlw	0
  2065  0014AA  6E04               	movwf	(digitalWrite@value+1)^0,c
  2066  0014AC  0E00               	movlw	0
  2067  0014AE  6E03               	movwf	digitalWrite@value^0,c
  2068  0014B0  EC39  F007         	call	_digitalWrite	;wreg free
  2069  0014B4                     
  2070                           ;ssd.c: 62:     digitalWrite(PIN_A4,0);
  2071  0014B4  0E00               	movlw	0
  2072  0014B6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2073  0014B8  0E04               	movlw	4
  2074  0014BA  6E01               	movwf	digitalWrite@pin^0,c
  2075  0014BC  0E00               	movlw	0
  2076  0014BE  6E04               	movwf	(digitalWrite@value+1)^0,c
  2077  0014C0  0E00               	movlw	0
  2078  0014C2  6E03               	movwf	digitalWrite@value^0,c
  2079  0014C4  EC39  F007         	call	_digitalWrite	;wreg free
  2080  0014C8                     
  2081                           ;ssd.c: 63:     digitalWrite(PIN_A5,0);
  2082  0014C8  0E00               	movlw	0
  2083  0014CA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2084  0014CC  0E05               	movlw	5
  2085  0014CE  6E01               	movwf	digitalWrite@pin^0,c
  2086  0014D0  0E00               	movlw	0
  2087  0014D2  6E04               	movwf	(digitalWrite@value+1)^0,c
  2088  0014D4  0E00               	movlw	0
  2089  0014D6  6E03               	movwf	digitalWrite@value^0,c
  2090  0014D8  EC39  F007         	call	_digitalWrite	;wreg free
  2091                           
  2092                           ;ssd.c: 66:     PORTD = 0x00;
  2093  0014DC  0E00               	movlw	0
  2094  0014DE  6E83               	movwf	131,c	;volatile
  2095                           
  2096                           ;ssd.c: 69:     switch (display)
  2097  0014E0  EFCE  F00A         	goto	l1967
  2098  0014E4                     l1939:
  2099                           
  2100                           ;ssd.c: 72:             PORTD = valor[v0];
  2101  0014E4  0E01               	movlw	low _valor@ssd$F219
  2102  0014E6  2471               	addwf	_v0^0,w,c
  2103  0014E8  6EF6               	movwf	tblptrl,c
  2104  0014EA  6AF7               	clrf	tblptrh,c
  2105  0014EC  0E06               	movlw	high _valor@ssd$F219
  2106  0014EE  22F7               	addwfc	tblptrh,f,c
  2107  0014F0                     	if	0	;There are less than 3 active tblptr bytes
  2108  0014F0                     	endif
  2109  0014F0  0008               	tblrd		*
  2110  0014F2  CFF5 FF83          	movff	tablat,3971	;volatile
  2111  0014F6                     
  2112                           ;ssd.c: 73:             digitalWrite(PIN_A2,1);
  2113  0014F6  0E00               	movlw	0
  2114  0014F8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2115  0014FA  0E02               	movlw	2
  2116  0014FC  6E01               	movwf	digitalWrite@pin^0,c
  2117  0014FE  0E00               	movlw	0
  2118  001500  6E04               	movwf	(digitalWrite@value+1)^0,c
  2119  001502  0E01               	movlw	1
  2120  001504  6E03               	movwf	digitalWrite@value^0,c
  2121  001506  EC39  F007         	call	_digitalWrite	;wreg free
  2122  00150A                     
  2123                           ;ssd.c: 74:             display = 1;
  2124  00150A  0E01               	movlw	1
  2125  00150C  6E72               	movwf	_display^0,c
  2126                           
  2127                           ;ssd.c: 75:             break;
  2128  00150E  EFEB  F00A         	goto	l173
  2129  001512                     l1945:
  2130                           
  2131                           ;ssd.c: 78:             PORTD = valor[v1];
  2132  001512  0E01               	movlw	low _valor@ssd$F219
  2133  001514  2470               	addwf	_v1^0,w,c
  2134  001516  6EF6               	movwf	tblptrl,c
  2135  001518  6AF7               	clrf	tblptrh,c
  2136  00151A  0E06               	movlw	high _valor@ssd$F219
  2137  00151C  22F7               	addwfc	tblptrh,f,c
  2138  00151E                     	if	0	;There are less than 3 active tblptr bytes
  2139  00151E                     	endif
  2140  00151E  0008               	tblrd		*
  2141  001520  CFF5 FF83          	movff	tablat,3971	;volatile
  2142  001524                     
  2143                           ;ssd.c: 79:             digitalWrite(PIN_A3,1);
  2144  001524  0E00               	movlw	0
  2145  001526  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2146  001528  0E03               	movlw	3
  2147  00152A  6E01               	movwf	digitalWrite@pin^0,c
  2148  00152C  0E00               	movlw	0
  2149  00152E  6E04               	movwf	(digitalWrite@value+1)^0,c
  2150  001530  0E01               	movlw	1
  2151  001532  6E03               	movwf	digitalWrite@value^0,c
  2152  001534  EC39  F007         	call	_digitalWrite	;wreg free
  2153  001538                     
  2154                           ;ssd.c: 80:             display = 2;
  2155  001538  0E02               	movlw	2
  2156  00153A  6E72               	movwf	_display^0,c
  2157                           
  2158                           ;ssd.c: 81:             break;
  2159  00153C  EFEB  F00A         	goto	l173
  2160  001540                     l1951:
  2161                           
  2162                           ;ssd.c: 84:             PORTD = valor[v2];
  2163  001540  0E01               	movlw	low _valor@ssd$F219
  2164  001542  246F               	addwf	_v2^0,w,c
  2165  001544  6EF6               	movwf	tblptrl,c
  2166  001546  6AF7               	clrf	tblptrh,c
  2167  001548  0E06               	movlw	high _valor@ssd$F219
  2168  00154A  22F7               	addwfc	tblptrh,f,c
  2169  00154C                     	if	0	;There are less than 3 active tblptr bytes
  2170  00154C                     	endif
  2171  00154C  0008               	tblrd		*
  2172  00154E  CFF5 FF83          	movff	tablat,3971	;volatile
  2173  001552                     
  2174                           ;ssd.c: 85:             digitalWrite(PIN_A4,1);
  2175  001552  0E00               	movlw	0
  2176  001554  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2177  001556  0E04               	movlw	4
  2178  001558  6E01               	movwf	digitalWrite@pin^0,c
  2179  00155A  0E00               	movlw	0
  2180  00155C  6E04               	movwf	(digitalWrite@value+1)^0,c
  2181  00155E  0E01               	movlw	1
  2182  001560  6E03               	movwf	digitalWrite@value^0,c
  2183  001562  EC39  F007         	call	_digitalWrite	;wreg free
  2184  001566                     
  2185                           ;ssd.c: 86:             display = 3;
  2186  001566  0E03               	movlw	3
  2187  001568  6E72               	movwf	_display^0,c
  2188                           
  2189                           ;ssd.c: 87:             break;
  2190  00156A  EFEB  F00A         	goto	l173
  2191  00156E                     l1957:
  2192                           
  2193                           ;ssd.c: 90:             PORTD = valor[v3];
  2194  00156E  0E01               	movlw	low _valor@ssd$F219
  2195  001570  246E               	addwf	_v3^0,w,c
  2196  001572  6EF6               	movwf	tblptrl,c
  2197  001574  6AF7               	clrf	tblptrh,c
  2198  001576  0E06               	movlw	high _valor@ssd$F219
  2199  001578  22F7               	addwfc	tblptrh,f,c
  2200  00157A                     	if	0	;There are less than 3 active tblptr bytes
  2201  00157A                     	endif
  2202  00157A  0008               	tblrd		*
  2203  00157C  CFF5 FF83          	movff	tablat,3971	;volatile
  2204  001580                     
  2205                           ;ssd.c: 91:             digitalWrite(PIN_A5,1);
  2206  001580  0E00               	movlw	0
  2207  001582  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2208  001584  0E05               	movlw	5
  2209  001586  6E01               	movwf	digitalWrite@pin^0,c
  2210  001588  0E00               	movlw	0
  2211  00158A  6E04               	movwf	(digitalWrite@value+1)^0,c
  2212  00158C  0E01               	movlw	1
  2213  00158E  6E03               	movwf	digitalWrite@value^0,c
  2214  001590  EC39  F007         	call	_digitalWrite	;wreg free
  2215  001594                     l1961:
  2216                           
  2217                           ;ssd.c: 92:             display = 0;
  2218  001594  0E00               	movlw	0
  2219  001596  6E72               	movwf	_display^0,c
  2220                           
  2221                           ;ssd.c: 93:             break;
  2222  001598  EFEB  F00A         	goto	l173
  2223  00159C                     l1967:
  2224  00159C  5072               	movf	_display^0,w,c
  2225  00159E  6E07               	movwf	??_ssdUpdate^0,c
  2226  0015A0  6A08               	clrf	(??_ssdUpdate+1)^0,c
  2227                           
  2228                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2229                           ; Switch size 1, requested type "simple"
  2230                           ; Number of cases is 1, Range of values is 0 to 0
  2231                           ; switch strategies available:
  2232                           ; Name         Instructions Cycles
  2233                           ; simple_byte            4     3 (average)
  2234                           ;	Chosen strategy is simple_byte
  2235  0015A2  5008               	movf	(??_ssdUpdate+1)^0,w,c
  2236  0015A4  0A00               	xorlw	0	; case 0
  2237  0015A6  B4D8               	btfsc	status,2,c
  2238  0015A8  EFD8  F00A         	goto	l2413
  2239  0015AC  EFCA  F00A         	goto	l1961
  2240  0015B0                     l2413:
  2241                           
  2242                           ; Switch size 1, requested type "simple"
  2243                           ; Number of cases is 4, Range of values is 0 to 3
  2244                           ; switch strategies available:
  2245                           ; Name         Instructions Cycles
  2246                           ; simple_byte           13     7 (average)
  2247                           ;	Chosen strategy is simple_byte
  2248  0015B0  5007               	movf	??_ssdUpdate^0,w,c
  2249  0015B2  0A00               	xorlw	0	; case 0
  2250  0015B4  B4D8               	btfsc	status,2,c
  2251  0015B6  EF72  F00A         	goto	l1939
  2252  0015BA  0A01               	xorlw	1	; case 1
  2253  0015BC  B4D8               	btfsc	status,2,c
  2254  0015BE  EF89  F00A         	goto	l1945
  2255  0015C2  0A03               	xorlw	3	; case 2
  2256  0015C4  B4D8               	btfsc	status,2,c
  2257  0015C6  EFA0  F00A         	goto	l1951
  2258  0015CA  0A01               	xorlw	1	; case 3
  2259  0015CC  B4D8               	btfsc	status,2,c
  2260  0015CE  EFB7  F00A         	goto	l1957
  2261  0015D2  EFCA  F00A         	goto	l1961
  2262  0015D6                     l173:
  2263  0015D6  0012               	return		;funcret
  2264  0015D8                     __end_of_ssdUpdate:
  2265                           	callstack 0
  2266                           
  2267 ;; *************** function _digitalWrite *****************
  2268 ;; Defined at:
  2269 ;;		line 14 in file "io.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;  pin             2    0[COMRAM] int 
  2272 ;;  value           2    2[COMRAM] int 
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;		None
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  1    wreg      void 
  2277 ;; Registers used:
  2278 ;;		wreg, status,2, status,0
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2284 ;;      Params:         4       0       0       0       0       0       0
  2285 ;;      Locals:         0       0       0       0       0       0       0
  2286 ;;      Temps:          2       0       0       0       0       0       0
  2287 ;;      Totals:         6       0       0       0       0       0       0
  2288 ;;Total ram usage:        6 bytes
  2289 ;; Hardware stack levels used: 1
  2290 ;; This function calls:
  2291 ;;		Nothing
  2292 ;; This function is called by:
  2293 ;;		_ssdUpdate
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           	psect	text5
  2298  000E72                     __ptext5:
  2299                           	callstack 0
  2300  000E72                     _digitalWrite:
  2301                           	callstack 29
  2302  000E72                     
  2303                           ;io.c: 16:     if(pin <8){
  2304  000E72  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2305  000E74  EF47  F007         	goto	u1200
  2306  000E78  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2307  000E7A  E107               	bnz	u1201
  2308  000E7C  0E08               	movlw	8
  2309  000E7E  5C01               	subwf	digitalWrite@pin^0,w,c
  2310  000E80  B0D8               	btfsc	status,0,c
  2311  000E82  EF45  F007         	goto	u1201
  2312  000E86  EF47  F007         	goto	u1200
  2313  000E8A                     u1201:
  2314  000E8A  EF71  F007         	goto	l1819
  2315  000E8E                     u1200:
  2316  000E8E                     
  2317                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  2318  000E8E  5003               	movf	digitalWrite@value^0,w,c
  2319  000E90  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2320  000E92  B4D8               	btfsc	status,2,c
  2321  000E94  EF4E  F007         	goto	u1211
  2322  000E98  EF50  F007         	goto	u1210
  2323  000E9C                     u1211:
  2324  000E9C  EF60  F007         	goto	l1817
  2325  000EA0                     u1210:
  2326  000EA0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2327  000EA4  0E01               	movlw	1
  2328  000EA6  6E06               	movwf	(??_digitalWrite+1)^0,c
  2329  000EA8  2A05               	incf	??_digitalWrite^0,f,c
  2330  000EAA  EF59  F007         	goto	u1224
  2331  000EAE                     u1225:
  2332  000EAE  90D8               	bcf	status,0,c
  2333  000EB0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2334  000EB2                     u1224:
  2335  000EB2  2E05               	decfsz	??_digitalWrite^0,f,c
  2336  000EB4  EF57  F007         	goto	u1225
  2337  000EB8  5006               	movf	(??_digitalWrite+1)^0,w,c
  2338  000EBA  1280               	iorwf	128,f,c	;volatile
  2339  000EBC  EF5F  F008         	goto	l66
  2340  000EC0                     l1817:
  2341  000EC0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2342  000EC4  0E01               	movlw	1
  2343  000EC6  6E06               	movwf	(??_digitalWrite+1)^0,c
  2344  000EC8  2A05               	incf	??_digitalWrite^0,f,c
  2345  000ECA  EF69  F007         	goto	u1234
  2346  000ECE                     u1235:
  2347  000ECE  90D8               	bcf	status,0,c
  2348  000ED0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2349  000ED2                     u1234:
  2350  000ED2  2E05               	decfsz	??_digitalWrite^0,f,c
  2351  000ED4  EF67  F007         	goto	u1235
  2352  000ED8  5006               	movf	(??_digitalWrite+1)^0,w,c
  2353  000EDA  0AFF               	xorlw	255
  2354  000EDC  1680               	andwf	128,f,c	;volatile
  2355  000EDE  EF5F  F008         	goto	l66
  2356  000EE2                     l1819:
  2357  000EE2  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2358  000EE4  EF7F  F007         	goto	u1240
  2359  000EE8  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2360  000EEA  E107               	bnz	u1241
  2361  000EEC  0E10               	movlw	16
  2362  000EEE  5C01               	subwf	digitalWrite@pin^0,w,c
  2363  000EF0  B0D8               	btfsc	status,0,c
  2364  000EF2  EF7D  F007         	goto	u1241
  2365  000EF6  EF7F  F007         	goto	u1240
  2366  000EFA                     u1241:
  2367  000EFA  EFAD  F007         	goto	l1827
  2368  000EFE                     u1240:
  2369  000EFE                     
  2370                           ;io.c: 20:         pin -=8;
  2371  000EFE  0EF8               	movlw	248
  2372  000F00  2601               	addwf	digitalWrite@pin^0,f,c
  2373  000F02  0EFF               	movlw	255
  2374  000F04  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2375                           
  2376                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  2377  000F06  5003               	movf	digitalWrite@value^0,w,c
  2378  000F08  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2379  000F0A  B4D8               	btfsc	status,2,c
  2380  000F0C  EF8A  F007         	goto	u1251
  2381  000F10  EF8C  F007         	goto	u1250
  2382  000F14                     u1251:
  2383  000F14  EF9C  F007         	goto	l1825
  2384  000F18                     u1250:
  2385  000F18  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2386  000F1C  0E01               	movlw	1
  2387  000F1E  6E06               	movwf	(??_digitalWrite+1)^0,c
  2388  000F20  2A05               	incf	??_digitalWrite^0,f,c
  2389  000F22  EF95  F007         	goto	u1264
  2390  000F26                     u1265:
  2391  000F26  90D8               	bcf	status,0,c
  2392  000F28  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2393  000F2A                     u1264:
  2394  000F2A  2E05               	decfsz	??_digitalWrite^0,f,c
  2395  000F2C  EF93  F007         	goto	u1265
  2396  000F30  5006               	movf	(??_digitalWrite+1)^0,w,c
  2397  000F32  1281               	iorwf	129,f,c	;volatile
  2398  000F34  EF5F  F008         	goto	l66
  2399  000F38                     l1825:
  2400  000F38  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2401  000F3C  0E01               	movlw	1
  2402  000F3E  6E06               	movwf	(??_digitalWrite+1)^0,c
  2403  000F40  2A05               	incf	??_digitalWrite^0,f,c
  2404  000F42  EFA5  F007         	goto	u1274
  2405  000F46                     u1275:
  2406  000F46  90D8               	bcf	status,0,c
  2407  000F48  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2408  000F4A                     u1274:
  2409  000F4A  2E05               	decfsz	??_digitalWrite^0,f,c
  2410  000F4C  EFA3  F007         	goto	u1275
  2411  000F50  5006               	movf	(??_digitalWrite+1)^0,w,c
  2412  000F52  0AFF               	xorlw	255
  2413  000F54  1681               	andwf	129,f,c	;volatile
  2414  000F56  EF5F  F008         	goto	l66
  2415  000F5A                     l1827:
  2416  000F5A  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2417  000F5C  EFBB  F007         	goto	u1280
  2418  000F60  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2419  000F62  E107               	bnz	u1281
  2420  000F64  0E18               	movlw	24
  2421  000F66  5C01               	subwf	digitalWrite@pin^0,w,c
  2422  000F68  B0D8               	btfsc	status,0,c
  2423  000F6A  EFB9  F007         	goto	u1281
  2424  000F6E  EFBB  F007         	goto	u1280
  2425  000F72                     u1281:
  2426  000F72  EFE9  F007         	goto	l1835
  2427  000F76                     u1280:
  2428  000F76                     
  2429                           ;io.c: 24:         pin -=16;
  2430  000F76  0EF0               	movlw	240
  2431  000F78  2601               	addwf	digitalWrite@pin^0,f,c
  2432  000F7A  0EFF               	movlw	255
  2433  000F7C  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2434                           
  2435                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  2436  000F7E  5003               	movf	digitalWrite@value^0,w,c
  2437  000F80  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2438  000F82  B4D8               	btfsc	status,2,c
  2439  000F84  EFC6  F007         	goto	u1291
  2440  000F88  EFC8  F007         	goto	u1290
  2441  000F8C                     u1291:
  2442  000F8C  EFD8  F007         	goto	l1833
  2443  000F90                     u1290:
  2444  000F90  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2445  000F94  0E01               	movlw	1
  2446  000F96  6E06               	movwf	(??_digitalWrite+1)^0,c
  2447  000F98  2A05               	incf	??_digitalWrite^0,f,c
  2448  000F9A  EFD1  F007         	goto	u1304
  2449  000F9E                     u1305:
  2450  000F9E  90D8               	bcf	status,0,c
  2451  000FA0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2452  000FA2                     u1304:
  2453  000FA2  2E05               	decfsz	??_digitalWrite^0,f,c
  2454  000FA4  EFCF  F007         	goto	u1305
  2455  000FA8  5006               	movf	(??_digitalWrite+1)^0,w,c
  2456  000FAA  1282               	iorwf	130,f,c	;volatile
  2457  000FAC  EF5F  F008         	goto	l66
  2458  000FB0                     l1833:
  2459  000FB0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2460  000FB4  0E01               	movlw	1
  2461  000FB6  6E06               	movwf	(??_digitalWrite+1)^0,c
  2462  000FB8  2A05               	incf	??_digitalWrite^0,f,c
  2463  000FBA  EFE1  F007         	goto	u1314
  2464  000FBE                     u1315:
  2465  000FBE  90D8               	bcf	status,0,c
  2466  000FC0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2467  000FC2                     u1314:
  2468  000FC2  2E05               	decfsz	??_digitalWrite^0,f,c
  2469  000FC4  EFDF  F007         	goto	u1315
  2470  000FC8  5006               	movf	(??_digitalWrite+1)^0,w,c
  2471  000FCA  0AFF               	xorlw	255
  2472  000FCC  1682               	andwf	130,f,c	;volatile
  2473  000FCE  EF5F  F008         	goto	l66
  2474  000FD2                     l1835:
  2475  000FD2  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2476  000FD4  EFF7  F007         	goto	u1320
  2477  000FD8  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2478  000FDA  E107               	bnz	u1321
  2479  000FDC  0E20               	movlw	32
  2480  000FDE  5C01               	subwf	digitalWrite@pin^0,w,c
  2481  000FE0  B0D8               	btfsc	status,0,c
  2482  000FE2  EFF5  F007         	goto	u1321
  2483  000FE6  EFF7  F007         	goto	u1320
  2484  000FEA                     u1321:
  2485  000FEA  EF25  F008         	goto	l1843
  2486  000FEE                     u1320:
  2487  000FEE                     
  2488                           ;io.c: 28:         pin -=24;
  2489  000FEE  0EE8               	movlw	232
  2490  000FF0  2601               	addwf	digitalWrite@pin^0,f,c
  2491  000FF2  0EFF               	movlw	255
  2492  000FF4  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2493                           
  2494                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  2495  000FF6  5003               	movf	digitalWrite@value^0,w,c
  2496  000FF8  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2497  000FFA  B4D8               	btfsc	status,2,c
  2498  000FFC  EF02  F008         	goto	u1331
  2499  001000  EF04  F008         	goto	u1330
  2500  001004                     u1331:
  2501  001004  EF14  F008         	goto	l1841
  2502  001008                     u1330:
  2503  001008  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2504  00100C  0E01               	movlw	1
  2505  00100E  6E06               	movwf	(??_digitalWrite+1)^0,c
  2506  001010  2A05               	incf	??_digitalWrite^0,f,c
  2507  001012  EF0D  F008         	goto	u1344
  2508  001016                     u1345:
  2509  001016  90D8               	bcf	status,0,c
  2510  001018  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2511  00101A                     u1344:
  2512  00101A  2E05               	decfsz	??_digitalWrite^0,f,c
  2513  00101C  EF0B  F008         	goto	u1345
  2514  001020  5006               	movf	(??_digitalWrite+1)^0,w,c
  2515  001022  1283               	iorwf	131,f,c	;volatile
  2516  001024  EF5F  F008         	goto	l66
  2517  001028                     l1841:
  2518  001028  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2519  00102C  0E01               	movlw	1
  2520  00102E  6E06               	movwf	(??_digitalWrite+1)^0,c
  2521  001030  2A05               	incf	??_digitalWrite^0,f,c
  2522  001032  EF1D  F008         	goto	u1354
  2523  001036                     u1355:
  2524  001036  90D8               	bcf	status,0,c
  2525  001038  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2526  00103A                     u1354:
  2527  00103A  2E05               	decfsz	??_digitalWrite^0,f,c
  2528  00103C  EF1B  F008         	goto	u1355
  2529  001040  5006               	movf	(??_digitalWrite+1)^0,w,c
  2530  001042  0AFF               	xorlw	255
  2531  001044  1683               	andwf	131,f,c	;volatile
  2532  001046  EF5F  F008         	goto	l66
  2533  00104A                     l1843:
  2534  00104A  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2535  00104C  EF33  F008         	goto	u1360
  2536  001050  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2537  001052  E107               	bnz	u1361
  2538  001054  0E28               	movlw	40
  2539  001056  5C01               	subwf	digitalWrite@pin^0,w,c
  2540  001058  B0D8               	btfsc	status,0,c
  2541  00105A  EF31  F008         	goto	u1361
  2542  00105E  EF33  F008         	goto	u1360
  2543  001062                     u1361:
  2544  001062  EF5F  F008         	goto	l66
  2545  001066                     u1360:
  2546  001066                     
  2547                           ;io.c: 32:         pin -=32;
  2548  001066  0EE0               	movlw	224
  2549  001068  2601               	addwf	digitalWrite@pin^0,f,c
  2550  00106A  0EFF               	movlw	255
  2551  00106C  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2552                           
  2553                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  2554  00106E  5003               	movf	digitalWrite@value^0,w,c
  2555  001070  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2556  001072  B4D8               	btfsc	status,2,c
  2557  001074  EF3E  F008         	goto	u1371
  2558  001078  EF40  F008         	goto	u1370
  2559  00107C                     u1371:
  2560  00107C  EF50  F008         	goto	l1849
  2561  001080                     u1370:
  2562  001080  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2563  001084  0E01               	movlw	1
  2564  001086  6E06               	movwf	(??_digitalWrite+1)^0,c
  2565  001088  2A05               	incf	??_digitalWrite^0,f,c
  2566  00108A  EF49  F008         	goto	u1384
  2567  00108E                     u1385:
  2568  00108E  90D8               	bcf	status,0,c
  2569  001090  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2570  001092                     u1384:
  2571  001092  2E05               	decfsz	??_digitalWrite^0,f,c
  2572  001094  EF47  F008         	goto	u1385
  2573  001098  5006               	movf	(??_digitalWrite+1)^0,w,c
  2574  00109A  1284               	iorwf	132,f,c	;volatile
  2575  00109C  EF5F  F008         	goto	l66
  2576  0010A0                     l1849:
  2577  0010A0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2578  0010A4  0E01               	movlw	1
  2579  0010A6  6E06               	movwf	(??_digitalWrite+1)^0,c
  2580  0010A8  2A05               	incf	??_digitalWrite^0,f,c
  2581  0010AA  EF59  F008         	goto	u1394
  2582  0010AE                     u1395:
  2583  0010AE  90D8               	bcf	status,0,c
  2584  0010B0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2585  0010B2                     u1394:
  2586  0010B2  2E05               	decfsz	??_digitalWrite^0,f,c
  2587  0010B4  EF57  F008         	goto	u1395
  2588  0010B8  5006               	movf	(??_digitalWrite+1)^0,w,c
  2589  0010BA  0AFF               	xorlw	255
  2590  0010BC  1684               	andwf	132,f,c	;volatile
  2591  0010BE                     l66:
  2592  0010BE  0012               	return		;funcret
  2593  0010C0                     __end_of_digitalWrite:
  2594                           	callstack 0
  2595                           
  2596 ;; *************** function _ssdInit *****************
  2597 ;; Defined at:
  2598 ;;		line 101 in file "ssd.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;		None
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;		None
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  1    wreg      void 
  2605 ;; Registers used:
  2606 ;;		wreg, status,2, status,0, cstack
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2612 ;;      Params:         0       0       0       0       0       0       0
  2613 ;;      Locals:         0       0       0       0       0       0       0
  2614 ;;      Temps:          0       0       0       0       0       0       0
  2615 ;;      Totals:         0       0       0       0       0       0       0
  2616 ;;Total ram usage:        0 bytes
  2617 ;; Hardware stack levels used: 1
  2618 ;; Hardware stack levels required when called: 1
  2619 ;; This function calls:
  2620 ;;		_pinMode
  2621 ;; This function is called by:
  2622 ;;		_main
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626                           	psect	text6
  2627  001A64                     __ptext6:
  2628                           	callstack 0
  2629  001A64                     _ssdInit:
  2630                           	callstack 29
  2631  001A64                     
  2632                           ;ssd.c: 103:     pinMode(PIN_A2, 0);
  2633  001A64  0E00               	movlw	0
  2634  001A66  6E02               	movwf	(pinMode@pin+1)^0,c
  2635  001A68  0E02               	movlw	2
  2636  001A6A  6E01               	movwf	pinMode@pin^0,c
  2637  001A6C  0E00               	movlw	0
  2638  001A6E  6E04               	movwf	(pinMode@type+1)^0,c
  2639  001A70  0E00               	movlw	0
  2640  001A72  6E03               	movwf	pinMode@type^0,c
  2641  001A74  EC60  F008         	call	_pinMode	;wreg free
  2642                           
  2643                           ;ssd.c: 104:     pinMode(PIN_A3, 0);
  2644  001A78  0E00               	movlw	0
  2645  001A7A  6E02               	movwf	(pinMode@pin+1)^0,c
  2646  001A7C  0E03               	movlw	3
  2647  001A7E  6E01               	movwf	pinMode@pin^0,c
  2648  001A80  0E00               	movlw	0
  2649  001A82  6E04               	movwf	(pinMode@type+1)^0,c
  2650  001A84  0E00               	movlw	0
  2651  001A86  6E03               	movwf	pinMode@type^0,c
  2652  001A88  EC60  F008         	call	_pinMode	;wreg free
  2653                           
  2654                           ;ssd.c: 105:     pinMode(PIN_A4, 0);
  2655  001A8C  0E00               	movlw	0
  2656  001A8E  6E02               	movwf	(pinMode@pin+1)^0,c
  2657  001A90  0E04               	movlw	4
  2658  001A92  6E01               	movwf	pinMode@pin^0,c
  2659  001A94  0E00               	movlw	0
  2660  001A96  6E04               	movwf	(pinMode@type+1)^0,c
  2661  001A98  0E00               	movlw	0
  2662  001A9A  6E03               	movwf	pinMode@type^0,c
  2663  001A9C  EC60  F008         	call	_pinMode	;wreg free
  2664                           
  2665                           ;ssd.c: 106:     pinMode(PIN_A5, 0);
  2666  001AA0  0E00               	movlw	0
  2667  001AA2  6E02               	movwf	(pinMode@pin+1)^0,c
  2668  001AA4  0E05               	movlw	5
  2669  001AA6  6E01               	movwf	pinMode@pin^0,c
  2670  001AA8  0E00               	movlw	0
  2671  001AAA  6E04               	movwf	(pinMode@type+1)^0,c
  2672  001AAC  0E00               	movlw	0
  2673  001AAE  6E03               	movwf	pinMode@type^0,c
  2674  001AB0  EC60  F008         	call	_pinMode	;wreg free
  2675  001AB4                     
  2676                           ;ssd.c: 109:     TRISD = 0x00;
  2677  001AB4  0E00               	movlw	0
  2678  001AB6  6E95               	movwf	149,c	;volatile
  2679  001AB8  0012               	return		;funcret
  2680  001ABA                     __end_of_ssdInit:
  2681                           	callstack 0
  2682                           
  2683 ;; *************** function _pinMode *****************
  2684 ;; Defined at:
  2685 ;;		line 54 in file "io.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;  pin             2    0[COMRAM] int 
  2688 ;;  type            2    2[COMRAM] int 
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;		None
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  1    wreg      void 
  2693 ;; Registers used:
  2694 ;;		wreg, status,2, status,0
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2700 ;;      Params:         4       0       0       0       0       0       0
  2701 ;;      Locals:         0       0       0       0       0       0       0
  2702 ;;      Temps:          2       0       0       0       0       0       0
  2703 ;;      Totals:         6       0       0       0       0       0       0
  2704 ;;Total ram usage:        6 bytes
  2705 ;; Hardware stack levels used: 1
  2706 ;; This function calls:
  2707 ;;		Nothing
  2708 ;; This function is called by:
  2709 ;;		_ssdInit
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           	psect	text7
  2714  0010C0                     __ptext7:
  2715                           	callstack 0
  2716  0010C0                     _pinMode:
  2717                           	callstack 29
  2718  0010C0                     
  2719                           ;io.c: 56:     if(pin <8){
  2720  0010C0  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2721  0010C2  EF6E  F008         	goto	u1400
  2722  0010C6  5002               	movf	(pinMode@pin+1)^0,w,c
  2723  0010C8  E107               	bnz	u1401
  2724  0010CA  0E08               	movlw	8
  2725  0010CC  5C01               	subwf	pinMode@pin^0,w,c
  2726  0010CE  B0D8               	btfsc	status,0,c
  2727  0010D0  EF6C  F008         	goto	u1401
  2728  0010D4  EF6E  F008         	goto	u1400
  2729  0010D8                     u1401:
  2730  0010D8  EF98  F008         	goto	l1859
  2731  0010DC                     u1400:
  2732  0010DC                     
  2733                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  2734  0010DC  5003               	movf	pinMode@type^0,w,c
  2735  0010DE  1004               	iorwf	(pinMode@type+1)^0,w,c
  2736  0010E0  B4D8               	btfsc	status,2,c
  2737  0010E2  EF75  F008         	goto	u1411
  2738  0010E6  EF77  F008         	goto	u1410
  2739  0010EA                     u1411:
  2740  0010EA  EF87  F008         	goto	l1857
  2741  0010EE                     u1410:
  2742  0010EE  C001  F005         	movff	pinMode@pin,??_pinMode
  2743  0010F2  0E01               	movlw	1
  2744  0010F4  6E06               	movwf	(??_pinMode+1)^0,c
  2745  0010F6  2A05               	incf	??_pinMode^0,f,c
  2746  0010F8  EF80  F008         	goto	u1424
  2747  0010FC                     u1425:
  2748  0010FC  90D8               	bcf	status,0,c
  2749  0010FE  3606               	rlcf	(??_pinMode+1)^0,f,c
  2750  001100                     u1424:
  2751  001100  2E05               	decfsz	??_pinMode^0,f,c
  2752  001102  EF7E  F008         	goto	u1425
  2753  001106  5006               	movf	(??_pinMode+1)^0,w,c
  2754  001108  1292               	iorwf	146,f,c	;volatile
  2755  00110A  EF86  F009         	goto	l100
  2756  00110E                     l1857:
  2757  00110E  C001  F005         	movff	pinMode@pin,??_pinMode
  2758  001112  0E01               	movlw	1
  2759  001114  6E06               	movwf	(??_pinMode+1)^0,c
  2760  001116  2A05               	incf	??_pinMode^0,f,c
  2761  001118  EF90  F008         	goto	u1434
  2762  00111C                     u1435:
  2763  00111C  90D8               	bcf	status,0,c
  2764  00111E  3606               	rlcf	(??_pinMode+1)^0,f,c
  2765  001120                     u1434:
  2766  001120  2E05               	decfsz	??_pinMode^0,f,c
  2767  001122  EF8E  F008         	goto	u1435
  2768  001126  5006               	movf	(??_pinMode+1)^0,w,c
  2769  001128  0AFF               	xorlw	255
  2770  00112A  1692               	andwf	146,f,c	;volatile
  2771  00112C  EF86  F009         	goto	l100
  2772  001130                     l1859:
  2773  001130  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2774  001132  EFA6  F008         	goto	u1440
  2775  001136  5002               	movf	(pinMode@pin+1)^0,w,c
  2776  001138  E107               	bnz	u1441
  2777  00113A  0E10               	movlw	16
  2778  00113C  5C01               	subwf	pinMode@pin^0,w,c
  2779  00113E  B0D8               	btfsc	status,0,c
  2780  001140  EFA4  F008         	goto	u1441
  2781  001144  EFA6  F008         	goto	u1440
  2782  001148                     u1441:
  2783  001148  EFD4  F008         	goto	l1867
  2784  00114C                     u1440:
  2785  00114C                     
  2786                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  2787  00114C  5003               	movf	pinMode@type^0,w,c
  2788  00114E  1004               	iorwf	(pinMode@type+1)^0,w,c
  2789  001150  B4D8               	btfsc	status,2,c
  2790  001152  EFAD  F008         	goto	u1451
  2791  001156  EFAF  F008         	goto	u1450
  2792  00115A                     u1451:
  2793  00115A  EFC1  F008         	goto	l1865
  2794  00115E                     u1450:
  2795  00115E  C001  F005         	movff	pinMode@pin,??_pinMode
  2796  001162  0EF8               	movlw	-8
  2797  001164  2605               	addwf	??_pinMode^0,f,c
  2798  001166  0E01               	movlw	1
  2799  001168  6E06               	movwf	(??_pinMode+1)^0,c
  2800  00116A  2A05               	incf	??_pinMode^0,f,c
  2801  00116C  EFBA  F008         	goto	u1464
  2802  001170                     u1465:
  2803  001170  90D8               	bcf	status,0,c
  2804  001172  3606               	rlcf	(??_pinMode+1)^0,f,c
  2805  001174                     u1464:
  2806  001174  2E05               	decfsz	??_pinMode^0,f,c
  2807  001176  EFB8  F008         	goto	u1465
  2808  00117A  5006               	movf	(??_pinMode+1)^0,w,c
  2809  00117C  1293               	iorwf	147,f,c	;volatile
  2810  00117E  EF86  F009         	goto	l100
  2811  001182                     l1865:
  2812  001182  C001  F005         	movff	pinMode@pin,??_pinMode
  2813  001186  0EF8               	movlw	-8
  2814  001188  2605               	addwf	??_pinMode^0,f,c
  2815  00118A  0E01               	movlw	1
  2816  00118C  6E06               	movwf	(??_pinMode+1)^0,c
  2817  00118E  2A05               	incf	??_pinMode^0,f,c
  2818  001190  EFCC  F008         	goto	u1474
  2819  001194                     u1475:
  2820  001194  90D8               	bcf	status,0,c
  2821  001196  3606               	rlcf	(??_pinMode+1)^0,f,c
  2822  001198                     u1474:
  2823  001198  2E05               	decfsz	??_pinMode^0,f,c
  2824  00119A  EFCA  F008         	goto	u1475
  2825  00119E  5006               	movf	(??_pinMode+1)^0,w,c
  2826  0011A0  0AFF               	xorlw	255
  2827  0011A2  1693               	andwf	147,f,c	;volatile
  2828  0011A4  EF86  F009         	goto	l100
  2829  0011A8                     l1867:
  2830  0011A8  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2831  0011AA  EFE2  F008         	goto	u1480
  2832  0011AE  5002               	movf	(pinMode@pin+1)^0,w,c
  2833  0011B0  E107               	bnz	u1481
  2834  0011B2  0E18               	movlw	24
  2835  0011B4  5C01               	subwf	pinMode@pin^0,w,c
  2836  0011B6  B0D8               	btfsc	status,0,c
  2837  0011B8  EFE0  F008         	goto	u1481
  2838  0011BC  EFE2  F008         	goto	u1480
  2839  0011C0                     u1481:
  2840  0011C0  EF10  F009         	goto	l1875
  2841  0011C4                     u1480:
  2842  0011C4                     
  2843                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  2844  0011C4  5003               	movf	pinMode@type^0,w,c
  2845  0011C6  1004               	iorwf	(pinMode@type+1)^0,w,c
  2846  0011C8  B4D8               	btfsc	status,2,c
  2847  0011CA  EFE9  F008         	goto	u1491
  2848  0011CE  EFEB  F008         	goto	u1490
  2849  0011D2                     u1491:
  2850  0011D2  EFFD  F008         	goto	l1873
  2851  0011D6                     u1490:
  2852  0011D6  C001  F005         	movff	pinMode@pin,??_pinMode
  2853  0011DA  0EF0               	movlw	-16
  2854  0011DC  2605               	addwf	??_pinMode^0,f,c
  2855  0011DE  0E01               	movlw	1
  2856  0011E0  6E06               	movwf	(??_pinMode+1)^0,c
  2857  0011E2  2A05               	incf	??_pinMode^0,f,c
  2858  0011E4  EFF6  F008         	goto	u1504
  2859  0011E8                     u1505:
  2860  0011E8  90D8               	bcf	status,0,c
  2861  0011EA  3606               	rlcf	(??_pinMode+1)^0,f,c
  2862  0011EC                     u1504:
  2863  0011EC  2E05               	decfsz	??_pinMode^0,f,c
  2864  0011EE  EFF4  F008         	goto	u1505
  2865  0011F2  5006               	movf	(??_pinMode+1)^0,w,c
  2866  0011F4  1294               	iorwf	148,f,c	;volatile
  2867  0011F6  EF86  F009         	goto	l100
  2868  0011FA                     l1873:
  2869  0011FA  C001  F005         	movff	pinMode@pin,??_pinMode
  2870  0011FE  0EF0               	movlw	-16
  2871  001200  2605               	addwf	??_pinMode^0,f,c
  2872  001202  0E01               	movlw	1
  2873  001204  6E06               	movwf	(??_pinMode+1)^0,c
  2874  001206  2A05               	incf	??_pinMode^0,f,c
  2875  001208  EF08  F009         	goto	u1514
  2876  00120C                     u1515:
  2877  00120C  90D8               	bcf	status,0,c
  2878  00120E  3606               	rlcf	(??_pinMode+1)^0,f,c
  2879  001210                     u1514:
  2880  001210  2E05               	decfsz	??_pinMode^0,f,c
  2881  001212  EF06  F009         	goto	u1515
  2882  001216  5006               	movf	(??_pinMode+1)^0,w,c
  2883  001218  0AFF               	xorlw	255
  2884  00121A  1694               	andwf	148,f,c	;volatile
  2885  00121C  EF86  F009         	goto	l100
  2886  001220                     l1875:
  2887  001220  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2888  001222  EF1E  F009         	goto	u1520
  2889  001226  5002               	movf	(pinMode@pin+1)^0,w,c
  2890  001228  E107               	bnz	u1521
  2891  00122A  0E20               	movlw	32
  2892  00122C  5C01               	subwf	pinMode@pin^0,w,c
  2893  00122E  B0D8               	btfsc	status,0,c
  2894  001230  EF1C  F009         	goto	u1521
  2895  001234  EF1E  F009         	goto	u1520
  2896  001238                     u1521:
  2897  001238  EF4C  F009         	goto	l1883
  2898  00123C                     u1520:
  2899  00123C                     
  2900                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  2901  00123C  5003               	movf	pinMode@type^0,w,c
  2902  00123E  1004               	iorwf	(pinMode@type+1)^0,w,c
  2903  001240  B4D8               	btfsc	status,2,c
  2904  001242  EF25  F009         	goto	u1531
  2905  001246  EF27  F009         	goto	u1530
  2906  00124A                     u1531:
  2907  00124A  EF39  F009         	goto	l1881
  2908  00124E                     u1530:
  2909  00124E  C001  F005         	movff	pinMode@pin,??_pinMode
  2910  001252  0EE8               	movlw	-24
  2911  001254  2605               	addwf	??_pinMode^0,f,c
  2912  001256  0E01               	movlw	1
  2913  001258  6E06               	movwf	(??_pinMode+1)^0,c
  2914  00125A  2A05               	incf	??_pinMode^0,f,c
  2915  00125C  EF32  F009         	goto	u1544
  2916  001260                     u1545:
  2917  001260  90D8               	bcf	status,0,c
  2918  001262  3606               	rlcf	(??_pinMode+1)^0,f,c
  2919  001264                     u1544:
  2920  001264  2E05               	decfsz	??_pinMode^0,f,c
  2921  001266  EF30  F009         	goto	u1545
  2922  00126A  5006               	movf	(??_pinMode+1)^0,w,c
  2923  00126C  1295               	iorwf	149,f,c	;volatile
  2924  00126E  EF86  F009         	goto	l100
  2925  001272                     l1881:
  2926  001272  C001  F005         	movff	pinMode@pin,??_pinMode
  2927  001276  0EE8               	movlw	-24
  2928  001278  2605               	addwf	??_pinMode^0,f,c
  2929  00127A  0E01               	movlw	1
  2930  00127C  6E06               	movwf	(??_pinMode+1)^0,c
  2931  00127E  2A05               	incf	??_pinMode^0,f,c
  2932  001280  EF44  F009         	goto	u1554
  2933  001284                     u1555:
  2934  001284  90D8               	bcf	status,0,c
  2935  001286  3606               	rlcf	(??_pinMode+1)^0,f,c
  2936  001288                     u1554:
  2937  001288  2E05               	decfsz	??_pinMode^0,f,c
  2938  00128A  EF42  F009         	goto	u1555
  2939  00128E  5006               	movf	(??_pinMode+1)^0,w,c
  2940  001290  0AFF               	xorlw	255
  2941  001292  1695               	andwf	149,f,c	;volatile
  2942  001294  EF86  F009         	goto	l100
  2943  001298                     l1883:
  2944  001298  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2945  00129A  EF5A  F009         	goto	u1560
  2946  00129E  5002               	movf	(pinMode@pin+1)^0,w,c
  2947  0012A0  E107               	bnz	u1561
  2948  0012A2  0E28               	movlw	40
  2949  0012A4  5C01               	subwf	pinMode@pin^0,w,c
  2950  0012A6  B0D8               	btfsc	status,0,c
  2951  0012A8  EF58  F009         	goto	u1561
  2952  0012AC  EF5A  F009         	goto	u1560
  2953  0012B0                     u1561:
  2954  0012B0  EF86  F009         	goto	l100
  2955  0012B4                     u1560:
  2956  0012B4                     
  2957                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  2958  0012B4  5003               	movf	pinMode@type^0,w,c
  2959  0012B6  1004               	iorwf	(pinMode@type+1)^0,w,c
  2960  0012B8  B4D8               	btfsc	status,2,c
  2961  0012BA  EF61  F009         	goto	u1571
  2962  0012BE  EF63  F009         	goto	u1570
  2963  0012C2                     u1571:
  2964  0012C2  EF75  F009         	goto	l1889
  2965  0012C6                     u1570:
  2966  0012C6  C001  F005         	movff	pinMode@pin,??_pinMode
  2967  0012CA  0EE0               	movlw	-32
  2968  0012CC  2605               	addwf	??_pinMode^0,f,c
  2969  0012CE  0E01               	movlw	1
  2970  0012D0  6E06               	movwf	(??_pinMode+1)^0,c
  2971  0012D2  2A05               	incf	??_pinMode^0,f,c
  2972  0012D4  EF6E  F009         	goto	u1584
  2973  0012D8                     u1585:
  2974  0012D8  90D8               	bcf	status,0,c
  2975  0012DA  3606               	rlcf	(??_pinMode+1)^0,f,c
  2976  0012DC                     u1584:
  2977  0012DC  2E05               	decfsz	??_pinMode^0,f,c
  2978  0012DE  EF6C  F009         	goto	u1585
  2979  0012E2  5006               	movf	(??_pinMode+1)^0,w,c
  2980  0012E4  1296               	iorwf	150,f,c	;volatile
  2981  0012E6  EF86  F009         	goto	l100
  2982  0012EA                     l1889:
  2983  0012EA  C001  F005         	movff	pinMode@pin,??_pinMode
  2984  0012EE  0EE0               	movlw	-32
  2985  0012F0  2605               	addwf	??_pinMode^0,f,c
  2986  0012F2  0E01               	movlw	1
  2987  0012F4  6E06               	movwf	(??_pinMode+1)^0,c
  2988  0012F6  2A05               	incf	??_pinMode^0,f,c
  2989  0012F8  EF80  F009         	goto	u1594
  2990  0012FC                     u1595:
  2991  0012FC  90D8               	bcf	status,0,c
  2992  0012FE  3606               	rlcf	(??_pinMode+1)^0,f,c
  2993  001300                     u1594:
  2994  001300  2E05               	decfsz	??_pinMode^0,f,c
  2995  001302  EF7E  F009         	goto	u1595
  2996  001306  5006               	movf	(??_pinMode+1)^0,w,c
  2997  001308  0AFF               	xorlw	255
  2998  00130A  1696               	andwf	150,f,c	;volatile
  2999  00130C                     l100:
  3000  00130C  0012               	return		;funcret
  3001  00130E                     __end_of_pinMode:
  3002                           	callstack 0
  3003                           
  3004 ;; *************** function _ssdDigit *****************
  3005 ;; Defined at:
  3006 ;;		line 38 in file "ssd.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;  val             1    wreg     unsigned char 
  3009 ;;  pos             1   14[COMRAM] unsigned char 
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;  val             1   15[COMRAM] unsigned char 
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  1    wreg      void 
  3014 ;; Registers used:
  3015 ;;		wreg, status,2, status,0
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3021 ;;      Params:         1       0       0       0       0       0       0
  3022 ;;      Locals:         1       0       0       0       0       0       0
  3023 ;;      Temps:          0       0       0       0       0       0       0
  3024 ;;      Totals:         2       0       0       0       0       0       0
  3025 ;;Total ram usage:        2 bytes
  3026 ;; Hardware stack levels used: 1
  3027 ;; This function calls:
  3028 ;;		Nothing
  3029 ;; This function is called by:
  3030 ;;		_main
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           	psect	text8
  3035  001A0C                     __ptext8:
  3036                           	callstack 0
  3037  001A0C                     _ssdDigit:
  3038                           	callstack 30
  3039                           
  3040                           ;incstack = 0
  3041                           ;ssdDigit@val stored from wreg
  3042  001A0C  6E10               	movwf	ssdDigit@val^0,c
  3043  001A0E                     
  3044                           ;ssd.c: 39:     if (pos == 0) {
  3045  001A0E  500F               	movf	ssdDigit@pos^0,w,c
  3046  001A10  A4D8               	btfss	status,2,c
  3047  001A12  EF0D  F00D         	goto	u1611
  3048  001A16  EF0F  F00D         	goto	u1610
  3049  001A1A                     u1611:
  3050  001A1A  EF11  F00D         	goto	l1917
  3051  001A1E                     u1610:
  3052  001A1E                     
  3053                           ;ssd.c: 40:         v0 = val;
  3054  001A1E  C010  F071         	movff	ssdDigit@val,_v0
  3055  001A22                     l1917:
  3056                           
  3057                           ;ssd.c: 42:     if (pos == 1) {
  3058  001A22  040F               	decf	ssdDigit@pos^0,w,c
  3059  001A24  A4D8               	btfss	status,2,c
  3060  001A26  EF17  F00D         	goto	u1621
  3061  001A2A  EF19  F00D         	goto	u1620
  3062  001A2E                     u1621:
  3063  001A2E  EF1B  F00D         	goto	l1921
  3064  001A32                     u1620:
  3065  001A32                     
  3066                           ;ssd.c: 43:         v1 = val;
  3067  001A32  C010  F070         	movff	ssdDigit@val,_v1
  3068  001A36                     l1921:
  3069                           
  3070                           ;ssd.c: 45:     if (pos == 2) {
  3071  001A36  0E02               	movlw	2
  3072  001A38  180F               	xorwf	ssdDigit@pos^0,w,c
  3073  001A3A  A4D8               	btfss	status,2,c
  3074  001A3C  EF22  F00D         	goto	u1631
  3075  001A40  EF24  F00D         	goto	u1630
  3076  001A44                     u1631:
  3077  001A44  EF26  F00D         	goto	l1925
  3078  001A48                     u1630:
  3079  001A48                     
  3080                           ;ssd.c: 46:         v2 = val;
  3081  001A48  C010  F06F         	movff	ssdDigit@val,_v2
  3082  001A4C                     l1925:
  3083                           
  3084                           ;ssd.c: 48:     if (pos == 3) {
  3085  001A4C  0E03               	movlw	3
  3086  001A4E  180F               	xorwf	ssdDigit@pos^0,w,c
  3087  001A50  A4D8               	btfss	status,2,c
  3088  001A52  EF2D  F00D         	goto	u1641
  3089  001A56  EF2F  F00D         	goto	u1640
  3090  001A5A                     u1641:
  3091  001A5A  EF31  F00D         	goto	l163
  3092  001A5E                     u1640:
  3093  001A5E                     
  3094                           ;ssd.c: 49:         v3 = val;
  3095  001A5E  C010  F06E         	movff	ssdDigit@val,_v3
  3096  001A62                     l163:
  3097  001A62  0012               	return		;funcret
  3098  001A64                     __end_of_ssdDigit:
  3099                           	callstack 0
  3100                           
  3101 ;; *************** function _pretas *****************
  3102 ;; Defined at:
  3103 ;;		line 11 in file "main.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;  coluna          1    wreg     unsigned char 
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;  coluna          1   71[COMRAM] unsigned char 
  3108 ;;  black          64    7[COMRAM] unsigned char [64]
  3109 ;;  i               1   72[COMRAM] unsigned char 
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  1    wreg      void 
  3112 ;; Registers used:
  3113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3119 ;;      Params:         0       0       0       0       0       0       0
  3120 ;;      Locals:        66       0       0       0       0       0       0
  3121 ;;      Temps:          0       0       0       0       0       0       0
  3122 ;;      Totals:        66       0       0       0       0       0       0
  3123 ;;Total ram usage:       66 bytes
  3124 ;; Hardware stack levels used: 1
  3125 ;; Hardware stack levels required when called: 2
  3126 ;; This function calls:
  3127 ;;		_lcd_cmd
  3128 ;;		_lcd_dat
  3129 ;; This function is called by:
  3130 ;;		_main
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134                           	psect	text9
  3135  00174C                     __ptext9:
  3136                           	callstack 0
  3137  00174C                     _pretas:
  3138                           	callstack 28
  3139                           
  3140                           ;incstack = 0
  3141                           ;pretas@coluna stored from wreg
  3142  00174C  6E48               	movwf	pretas@coluna^0,c
  3143  00174E                     
  3144                           ;main.c: 12:     char i;;main.c: 13:     char black[64] = {
  3145  00174E  EE20  F0C0         	lfsr	2,pretas@F2430
  3146  001752  EE10  F008         	lfsr	1,pretas@black
  3147  001756  0E3F               	movlw	63
  3148  001758                     u1681:
  3149  001758  CFDB FFE3          	movff	plusw2,plusw1
  3150  00175C  06E8               	decf	wreg,f,c
  3151  00175E  E2FC               	bc	u1681
  3152  001760                     
  3153                           ;main.c: 23:     lcd_cmd(0x40);
  3154  001760  0E40               	movlw	64
  3155  001762  ECB5  F00D         	call	_lcd_cmd
  3156  001766                     
  3157                           ;main.c: 25:     for (i = 0; i < 64; i++) {
  3158  001766  0E00               	movlw	0
  3159  001768  6E49               	movwf	pretas@i^0,c
  3160  00176A                     l2025:
  3161                           
  3162                           ;main.c: 26:         lcd_dat(black[i]);
  3163  00176A  0E08               	movlw	low pretas@black
  3164  00176C  2449               	addwf	pretas@i^0,w,c
  3165  00176E  6ED9               	movwf	fsr2l,c
  3166  001770  6ADA               	clrf	fsr2h,c
  3167  001772  0E00               	movlw	high pretas@black
  3168  001774  22DA               	addwfc	fsr2h,f,c
  3169  001776  50DF               	movf	indf2,w,c
  3170  001778  ECA0  F00D         	call	_lcd_dat
  3171  00177C                     
  3172                           ;main.c: 27:     }
  3173  00177C  2A49               	incf	pretas@i^0,f,c
  3174  00177E  0E3F               	movlw	63
  3175  001780  6449               	cpfsgt	pretas@i^0,c
  3176  001782  EFC5  F00B         	goto	u1691
  3177  001786  EFC7  F00B         	goto	u1690
  3178  00178A                     u1691:
  3179  00178A  EFB5  F00B         	goto	l2025
  3180  00178E                     u1690:
  3181  00178E                     
  3182                           ;main.c: 28:     lcd_cmd(0x80 + coluna);
  3183  00178E  5048               	movf	pretas@coluna^0,w,c
  3184  001790  0F80               	addlw	128
  3185  001792  ECB5  F00D         	call	_lcd_cmd
  3186                           
  3187                           ;main.c: 29:     lcd_dat(0);
  3188  001796  0E00               	movlw	0
  3189  001798  ECA0  F00D         	call	_lcd_dat
  3190                           
  3191                           ;main.c: 30:     lcd_dat(1);
  3192  00179C  0E01               	movlw	1
  3193  00179E  ECA0  F00D         	call	_lcd_dat
  3194                           
  3195                           ;main.c: 31:     lcd_dat(2);
  3196  0017A2  0E02               	movlw	2
  3197  0017A4  ECA0  F00D         	call	_lcd_dat
  3198                           
  3199                           ;main.c: 32:     lcd_dat(3);
  3200  0017A8  0E03               	movlw	3
  3201  0017AA  ECA0  F00D         	call	_lcd_dat
  3202                           
  3203                           ;main.c: 33:     lcd_cmd(0xC0 + coluna);
  3204  0017AE  5048               	movf	pretas@coluna^0,w,c
  3205  0017B0  0FC0               	addlw	192
  3206  0017B2  ECB5  F00D         	call	_lcd_cmd
  3207                           
  3208                           ;main.c: 34:     lcd_dat(4);
  3209  0017B6  0E04               	movlw	4
  3210  0017B8  ECA0  F00D         	call	_lcd_dat
  3211                           
  3212                           ;main.c: 35:     lcd_dat(5);
  3213  0017BC  0E05               	movlw	5
  3214  0017BE  ECA0  F00D         	call	_lcd_dat
  3215                           
  3216                           ;main.c: 36:     lcd_dat(6);
  3217  0017C2  0E06               	movlw	6
  3218  0017C4  ECA0  F00D         	call	_lcd_dat
  3219                           
  3220                           ;main.c: 37:     lcd_dat(7);
  3221  0017C8  0E07               	movlw	7
  3222  0017CA  ECA0  F00D         	call	_lcd_dat
  3223  0017CE  0012               	return		;funcret
  3224  0017D0                     __end_of_pretas:
  3225                           	callstack 0
  3226                           
  3227 ;; *************** function _lcd_str *****************
  3228 ;; Defined at:
  3229 ;;		line 76 in file "lcd.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;  str             2    7[COMRAM] PTR const unsigned char 
  3232 ;;		 -> STR_14(8), STR_13(9), STR_12(7), STR_11(9), 
  3233 ;;		 -> STR_10(6), STR_9(7), STR_8(6), STR_7(8), 
  3234 ;;		 -> STR_6(6), STR_5(8), STR_4(6), STR_3(12), 
  3235 ;;		 -> STR_2(7), STR_1(6), 
  3236 ;; Auto vars:     Size  Location     Type
  3237 ;;  i               1   11[COMRAM] unsigned char 
  3238 ;; Return value:  Size  Location     Type
  3239 ;;                  1    wreg      void 
  3240 ;; Registers used:
  3241 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3247 ;;      Params:         2       0       0       0       0       0       0
  3248 ;;      Locals:         1       0       0       0       0       0       0
  3249 ;;      Temps:          2       0       0       0       0       0       0
  3250 ;;      Totals:         5       0       0       0       0       0       0
  3251 ;;Total ram usage:        5 bytes
  3252 ;; Hardware stack levels used: 1
  3253 ;; Hardware stack levels required when called: 2
  3254 ;; This function calls:
  3255 ;;		_lcd_dat
  3256 ;; This function is called by:
  3257 ;;		_main
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           	psect	text10
  3262  001ABA                     __ptext10:
  3263                           	callstack 0
  3264  001ABA                     _lcd_str:
  3265                           	callstack 28
  3266  001ABA                     
  3267                           ;lcd.c: 76: void lcd_str(const char* str);lcd.c: 77: {;lcd.c: 78:  unsigned char i=0;
  3268  001ABA  0E00               	movlw	0
  3269  001ABC  6E0C               	movwf	lcd_str@i^0,c
  3270                           
  3271                           ;lcd.c: 80:  while(str[i] != 0 )
  3272  001ABE  EF70  F00D         	goto	l1909
  3273  001AC2                     l1905:
  3274                           
  3275                           ;lcd.c: 81:  {;lcd.c: 82:    lcd_dat(str[i]);
  3276  001AC2  500C               	movf	lcd_str@i^0,w,c
  3277  001AC4  2408               	addwf	lcd_str@str^0,w,c
  3278  001AC6  6E0A               	movwf	??_lcd_str^0,c
  3279  001AC8  0E00               	movlw	0
  3280  001ACA  2009               	addwfc	(lcd_str@str+1)^0,w,c
  3281  001ACC  6E0B               	movwf	(??_lcd_str+1)^0,c
  3282  001ACE  C00A  FFF6         	movff	??_lcd_str,tblptrl
  3283  001AD2  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
  3284  001AD6                     	if	0	;tblptru may be non-zero
  3285  001AD6                     	endif
  3286  001AD6                     	if	0	;tblptru may be non-zero
  3287  001AD6                     	endif
  3288  001AD6  0008               	tblrd		*
  3289  001AD8  50F5               	movf	tablat,w,c
  3290  001ADA  ECA0  F00D         	call	_lcd_dat
  3291  001ADE                     
  3292                           ;lcd.c: 83:    i++;
  3293  001ADE  2A0C               	incf	lcd_str@i^0,f,c
  3294  001AE0                     l1909:
  3295                           
  3296                           ;lcd.c: 80:  while(str[i] != 0 )
  3297  001AE0  500C               	movf	lcd_str@i^0,w,c
  3298  001AE2  2408               	addwf	lcd_str@str^0,w,c
  3299  001AE4  6E0A               	movwf	??_lcd_str^0,c
  3300  001AE6  0E00               	movlw	0
  3301  001AE8  2009               	addwfc	(lcd_str@str+1)^0,w,c
  3302  001AEA  6E0B               	movwf	(??_lcd_str+1)^0,c
  3303  001AEC  C00A  FFF6         	movff	??_lcd_str,tblptrl
  3304  001AF0  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
  3305  001AF4                     	if	0	;tblptru may be non-zero
  3306  001AF4                     	endif
  3307  001AF4                     	if	0	;tblptru may be non-zero
  3308  001AF4                     	endif
  3309  001AF4  0008               	tblrd		*
  3310  001AF6  50F5               	movf	tablat,w,c
  3311  001AF8  0900               	iorlw	0
  3312  001AFA  A4D8               	btfss	status,2,c
  3313  001AFC  EF82  F00D         	goto	u1601
  3314  001B00  EF84  F00D         	goto	u1600
  3315  001B04                     u1601:
  3316  001B04  EF61  F00D         	goto	l1905
  3317  001B08                     u1600:
  3318  001B08  0012               	return		;funcret
  3319  001B0A                     __end_of_lcd_str:
  3320                           	callstack 0
  3321                           
  3322 ;; *************** function _lcd_init *****************
  3323 ;; Defined at:
  3324 ;;		line 57 in file "lcd.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;		None
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;		None
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  1    wreg      void 
  3331 ;; Registers used:
  3332 ;;		wreg, status,2, status,0, cstack
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3338 ;;      Params:         0       0       0       0       0       0       0
  3339 ;;      Locals:         0       0       0       0       0       0       0
  3340 ;;      Temps:          0       0       0       0       0       0       0
  3341 ;;      Totals:         0       0       0       0       0       0       0
  3342 ;;Total ram usage:        0 bytes
  3343 ;; Hardware stack levels used: 1
  3344 ;; Hardware stack levels required when called: 2
  3345 ;; This function calls:
  3346 ;;		_atraso_ms
  3347 ;;		_lcd_cmd
  3348 ;; This function is called by:
  3349 ;;		_main
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           	psect	text11
  3354  0019B0                     __ptext11:
  3355                           	callstack 0
  3356  0019B0                     _lcd_init:
  3357                           	callstack 28
  3358  0019B0                     
  3359                           ;lcd.c: 59:  PORTEbits.RE1=0;
  3360  0019B0  9284               	bcf	132,1,c	;volatile
  3361                           
  3362                           ;lcd.c: 60:  PORTEbits.RE2=0;
  3363  0019B2  9484               	bcf	132,2,c	;volatile
  3364  0019B4                     
  3365                           ;lcd.c: 61:  atraso_ms(20);
  3366  0019B4  0E00               	movlw	0
  3367  0019B6  6E02               	movwf	(atraso_ms@t+1)^0,c
  3368  0019B8  0E14               	movlw	20
  3369  0019BA  6E01               	movwf	atraso_ms@t^0,c
  3370  0019BC  ECA6  F00C         	call	_atraso_ms	;wreg free
  3371  0019C0                     
  3372                           ;lcd.c: 62:  PORTEbits.RE1=1;
  3373  0019C0  8284               	bsf	132,1,c	;volatile
  3374                           
  3375                           ;lcd.c: 64:  lcd_cmd(0x38);
  3376  0019C2  0E38               	movlw	56
  3377  0019C4  ECB5  F00D         	call	_lcd_cmd
  3378                           
  3379                           ;lcd.c: 65:  atraso_ms(5);
  3380  0019C8  0E00               	movlw	0
  3381  0019CA  6E02               	movwf	(atraso_ms@t+1)^0,c
  3382  0019CC  0E05               	movlw	5
  3383  0019CE  6E01               	movwf	atraso_ms@t^0,c
  3384  0019D0  ECA6  F00C         	call	_atraso_ms	;wreg free
  3385                           
  3386                           ;lcd.c: 66:  lcd_cmd(0x38);
  3387  0019D4  0E38               	movlw	56
  3388  0019D6  ECB5  F00D         	call	_lcd_cmd
  3389                           
  3390                           ;lcd.c: 67:         atraso_ms(1);
  3391  0019DA  0E00               	movlw	0
  3392  0019DC  6E02               	movwf	(atraso_ms@t+1)^0,c
  3393  0019DE  0E01               	movlw	1
  3394  0019E0  6E01               	movwf	atraso_ms@t^0,c
  3395  0019E2  ECA6  F00C         	call	_atraso_ms	;wreg free
  3396                           
  3397                           ;lcd.c: 68:  lcd_cmd(0x38);
  3398  0019E6  0E38               	movlw	56
  3399  0019E8  ECB5  F00D         	call	_lcd_cmd
  3400                           
  3401                           ;lcd.c: 69:  lcd_cmd(0x08);
  3402  0019EC  0E08               	movlw	8
  3403  0019EE  ECB5  F00D         	call	_lcd_cmd
  3404                           
  3405                           ;lcd.c: 70:  lcd_cmd(0x0F);
  3406  0019F2  0E0F               	movlw	15
  3407  0019F4  ECB5  F00D         	call	_lcd_cmd
  3408                           
  3409                           ;lcd.c: 71:  lcd_cmd(0x01);
  3410  0019F8  0E01               	movlw	1
  3411  0019FA  ECB5  F00D         	call	_lcd_cmd
  3412                           
  3413                           ;lcd.c: 72:  lcd_cmd(0x38);
  3414  0019FE  0E38               	movlw	56
  3415  001A00  ECB5  F00D         	call	_lcd_cmd
  3416                           
  3417                           ;lcd.c: 73:     lcd_cmd(0x80);
  3418  001A04  0E80               	movlw	128
  3419  001A06  ECB5  F00D         	call	_lcd_cmd
  3420  001A0A  0012               	return		;funcret
  3421  001A0C                     __end_of_lcd_init:
  3422                           	callstack 0
  3423                           
  3424 ;; *************** function _kpRead *****************
  3425 ;; Defined at:
  3426 ;;		line 35 in file "keypad.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;		None
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;		None
  3431 ;; Return value:  Size  Location     Type
  3432 ;;                  2    0[COMRAM] unsigned int 
  3433 ;; Registers used:
  3434 ;;		None
  3435 ;; Tracked objects:
  3436 ;;		On entry : 0/0
  3437 ;;		On exit  : 0/0
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3440 ;;      Params:         2       0       0       0       0       0       0
  3441 ;;      Locals:         0       0       0       0       0       0       0
  3442 ;;      Temps:          0       0       0       0       0       0       0
  3443 ;;      Totals:         2       0       0       0       0       0       0
  3444 ;;Total ram usage:        2 bytes
  3445 ;; Hardware stack levels used: 1
  3446 ;; This function calls:
  3447 ;;		Nothing
  3448 ;; This function is called by:
  3449 ;;		_main
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453                           	psect	text12
  3454  001BEC                     __ptext12:
  3455                           	callstack 0
  3456  001BEC                     _kpRead:
  3457                           	callstack 30
  3458  001BEC                     
  3459                           ;keypad.c: 36:     return valor;
  3460  001BEC  C06C  F001         	movff	_valor,?_kpRead
  3461  001BF0  C06D  F002         	movff	_valor+1,?_kpRead+1
  3462  001BF4  0012               	return		;funcret
  3463  001BF6                     __end_of_kpRead:
  3464                           	callstack 0
  3465                           
  3466 ;; *************** function _kpInit *****************
  3467 ;; Defined at:
  3468 ;;		line 87 in file "keypad.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;		None
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;		None
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      void 
  3475 ;; Registers used:
  3476 ;;		wreg, status,2, status,0
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3482 ;;      Params:         0       0       0       0       0       0       0
  3483 ;;      Locals:         0       0       0       0       0       0       0
  3484 ;;      Temps:          0       0       0       0       0       0       0
  3485 ;;      Totals:         0       0       0       0       0       0       0
  3486 ;;Total ram usage:        0 bytes
  3487 ;; Hardware stack levels used: 1
  3488 ;; This function calls:
  3489 ;;		Nothing
  3490 ;; This function is called by:
  3491 ;;		_main
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           	psect	text13
  3496  001BF6                     __ptext13:
  3497                           	callstack 0
  3498  001BF6                     _kpInit:
  3499                           	callstack 30
  3500  001BF6                     
  3501                           ;keypad.c: 89:     TRISB &= 0x07;
  3502  001BF6  0E07               	movlw	7
  3503  001BF8  1693               	andwf	147,f,c	;volatile
  3504                           
  3505                           ;keypad.c: 91:     TRISD |= 0x0f;
  3506  001BFA  0E0F               	movlw	15
  3507  001BFC  1295               	iorwf	149,f,c	;volatile
  3508  001BFE  0012               	return		;funcret
  3509  001C00                     __end_of_kpInit:
  3510                           	callstack 0
  3511                           
  3512 ;; *************** function _kpDebounce *****************
  3513 ;; Defined at:
  3514 ;;		line 39 in file "keypad.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;		None
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;  k               2    6[COMRAM] int 
  3519 ;;  i               1    9[COMRAM] unsigned char 
  3520 ;;  j               1    8[COMRAM] unsigned char 
  3521 ;;  old_D           1    5[COMRAM] unsigned char 
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  1    wreg      void 
  3524 ;; Registers used:
  3525 ;;		wreg, status,2, status,0, prodl, prodh
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3531 ;;      Params:         0       0       0       0       0       0       0
  3532 ;;      Locals:         5       0       0       0       0       0       0
  3533 ;;      Temps:          5       0       0       0       0       0       0
  3534 ;;      Totals:        10       0       0       0       0       0       0
  3535 ;;Total ram usage:       10 bytes
  3536 ;; Hardware stack levels used: 1
  3537 ;; This function calls:
  3538 ;;		Nothing
  3539 ;; This function is called by:
  3540 ;;		_main
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           	psect	text14
  3545  00130E                     __ptext14:
  3546                           	callstack 0
  3547  00130E                     _kpDebounce:
  3548                           	callstack 30
  3549  00130E                     
  3550                           ;keypad.c: 40:     unsigned char i, j;;keypad.c: 41:     static unsigned char tempo;;key
      +                          pad.c: 42:     static unsigned int valorNovo = 0x0000;;keypad.c: 43:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 46:     unsigned char old_D;;keypad.c: 47:     old_
      +                          D = PORTD;
  3551  00130E  CF83 F006          	movff	3971,kpDebounce@old_D	;volatile
  3552  001312                     
  3553                           ;keypad.c: 51:     TRISD |= 0x0f;
  3554  001312  0E0F               	movlw	15
  3555  001314  1295               	iorwf	149,f,c	;volatile
  3556  001316                     
  3557                           ;keypad.c: 53:     for (i = 0; i < 3; i++) {
  3558  001316  0E00               	movlw	0
  3559  001318  6E0A               	movwf	kpDebounce@i^0,c
  3560  00131A                     l1161:
  3561                           
  3562                           ;keypad.c: 55:         TRISB &= 0xF8;
  3563  00131A  0EF8               	movlw	248
  3564  00131C  1693               	andwf	147,f,c	;volatile
  3565                           
  3566                           ;keypad.c: 57:         ((TRISB) |= (1<<(i)));
  3567  00131E  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  3568  001322  0E01               	movlw	1
  3569  001324  6E02               	movwf	(??_kpDebounce+1)^0,c
  3570  001326  2A01               	incf	??_kpDebounce^0,f,c
  3571  001328  EF98  F009         	goto	u454
  3572  00132C                     u455:
  3573  00132C  90D8               	bcf	status,0,c
  3574  00132E  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3575  001330                     u454:
  3576  001330  2E01               	decfsz	??_kpDebounce^0,f,c
  3577  001332  EF96  F009         	goto	u455
  3578  001336  5002               	movf	(??_kpDebounce+1)^0,w,c
  3579  001338  1293               	iorwf	147,f,c	;volatile
  3580                           
  3581                           ;keypad.c: 59:         PORTB |= 0x07;
  3582  00133A  0E07               	movlw	7
  3583  00133C  1281               	iorwf	129,f,c	;volatile
  3584                           
  3585                           ;keypad.c: 60:         ((PORTB) &= ~(1<<(i)));
  3586  00133E  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  3587  001342  0E01               	movlw	1
  3588  001344  6E02               	movwf	(??_kpDebounce+1)^0,c
  3589  001346  2A01               	incf	??_kpDebounce^0,f,c
  3590  001348  EFA8  F009         	goto	u464
  3591  00134C                     u465:
  3592  00134C  90D8               	bcf	status,0,c
  3593  00134E  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3594  001350                     u464:
  3595  001350  2E01               	decfsz	??_kpDebounce^0,f,c
  3596  001352  EFA6  F009         	goto	u465
  3597  001356  5002               	movf	(??_kpDebounce+1)^0,w,c
  3598  001358  0AFF               	xorlw	255
  3599  00135A  1681               	andwf	129,f,c	;volatile
  3600  00135C                     
  3601                           ;keypad.c: 63:         for (int k = 0; k < 10; k++);
  3602  00135C  0E00               	movlw	0
  3603  00135E  6E08               	movwf	(kpDebounce@k+1)^0,c
  3604  001360  0E00               	movlw	0
  3605  001362  6E07               	movwf	kpDebounce@k^0,c
  3606  001364                     l1169:
  3607  001364  4A07               	infsnz	kpDebounce@k^0,f,c
  3608  001366  2A08               	incf	(kpDebounce@k+1)^0,f,c
  3609  001368  BE08               	btfsc	(kpDebounce@k+1)^0,7,c
  3610  00136A  EFC0  F009         	goto	u471
  3611  00136E  5008               	movf	(kpDebounce@k+1)^0,w,c
  3612  001370  E109               	bnz	u470
  3613  001372  0E0A               	movlw	10
  3614  001374  5C07               	subwf	kpDebounce@k^0,w,c
  3615  001376  A0D8               	btfss	status,0,c
  3616  001378  EFC0  F009         	goto	u471
  3617  00137C  EFC2  F009         	goto	u470
  3618  001380                     u471:
  3619  001380  EFB2  F009         	goto	l1169
  3620  001384                     u470:
  3621  001384                     
  3622                           ;keypad.c: 66:         for (j = 0; j < 4; j++) {
  3623  001384  0E00               	movlw	0
  3624  001386  6E09               	movwf	kpDebounce@j^0,c
  3625  001388                     l1179:
  3626                           
  3627                           ;keypad.c: 67:             if (!((PORTD) & (1<<(j)))) {
  3628  001388  C009  F001         	movff	kpDebounce@j,??_kpDebounce
  3629  00138C  0E01               	movlw	1
  3630  00138E  6E02               	movwf	(??_kpDebounce+1)^0,c
  3631  001390  2A01               	incf	??_kpDebounce^0,f,c
  3632  001392  EFCD  F009         	goto	u484
  3633  001396                     u485:
  3634  001396  90D8               	bcf	status,0,c
  3635  001398  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3636  00139A                     u484:
  3637  00139A  2E01               	decfsz	??_kpDebounce^0,f,c
  3638  00139C  EFCB  F009         	goto	u485
  3639  0013A0  5002               	movf	(??_kpDebounce+1)^0,w,c
  3640  0013A2  1483               	andwf	131,w,c	;volatile
  3641  0013A4  0900               	iorlw	0
  3642  0013A6  A4D8               	btfss	status,2,c
  3643  0013A8  EFD8  F009         	goto	u491
  3644  0013AC  EFDA  F009         	goto	u490
  3645  0013B0                     u491:
  3646  0013B0  EFF2  F009         	goto	l1183
  3647  0013B4                     u490:
  3648  0013B4                     
  3649                           ;keypad.c: 68:                 ((valorNovo) |= (1<<((i * 4) + j)));
  3650  0013B4  500A               	movf	kpDebounce@i^0,w,c
  3651  0013B6  0D04               	mullw	4
  3652  0013B8  50F3               	movf	243,w,c
  3653  0013BA  2409               	addwf	kpDebounce@j^0,w,c
  3654  0013BC  6E01               	movwf	??_kpDebounce^0,c
  3655  0013BE  0E01               	movlw	1
  3656  0013C0  6E02               	movwf	(??_kpDebounce+1)^0,c
  3657  0013C2  0E00               	movlw	0
  3658  0013C4  6E03               	movwf	(??_kpDebounce+2)^0,c
  3659  0013C6  2A01               	incf	??_kpDebounce^0,f,c
  3660  0013C8  EFE9  F009         	goto	u504
  3661  0013CC                     u505:
  3662  0013CC  90D8               	bcf	status,0,c
  3663  0013CE  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3664  0013D0  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  3665  0013D2                     u504:
  3666  0013D2  2E01               	decfsz	??_kpDebounce^0,f,c
  3667  0013D4  EFE6  F009         	goto	u505
  3668  0013D8  5002               	movf	(??_kpDebounce+1)^0,w,c
  3669  0013DA  126A               	iorwf	kpDebounce@valorNovo^0,f,c
  3670  0013DC  5003               	movf	(??_kpDebounce+2)^0,w,c
  3671  0013DE  126B               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  3672                           
  3673                           ;keypad.c: 69:             } else {
  3674  0013E0  EF0C  F00A         	goto	l1185
  3675  0013E4                     l1183:
  3676                           
  3677                           ;keypad.c: 70:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  3678  0013E4  500A               	movf	kpDebounce@i^0,w,c
  3679  0013E6  0D04               	mullw	4
  3680  0013E8  50F3               	movf	243,w,c
  3681  0013EA  2409               	addwf	kpDebounce@j^0,w,c
  3682  0013EC  6E01               	movwf	??_kpDebounce^0,c
  3683  0013EE  0E01               	movlw	1
  3684  0013F0  6E02               	movwf	(??_kpDebounce+1)^0,c
  3685  0013F2  0E00               	movlw	0
  3686  0013F4  6E03               	movwf	(??_kpDebounce+2)^0,c
  3687  0013F6  2A01               	incf	??_kpDebounce^0,f,c
  3688  0013F8  EF01  F00A         	goto	u514
  3689  0013FC                     u515:
  3690  0013FC  90D8               	bcf	status,0,c
  3691  0013FE  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3692  001400  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  3693  001402                     u514:
  3694  001402  2E01               	decfsz	??_kpDebounce^0,f,c
  3695  001404  EFFE  F009         	goto	u515
  3696  001408  1C02               	comf	(??_kpDebounce+1)^0,w,c
  3697  00140A  6E04               	movwf	(??_kpDebounce+3)^0,c
  3698  00140C  1C03               	comf	(??_kpDebounce+2)^0,w,c
  3699  00140E  6E05               	movwf	(??_kpDebounce+4)^0,c
  3700  001410  5004               	movf	(??_kpDebounce+3)^0,w,c
  3701  001412  166A               	andwf	kpDebounce@valorNovo^0,f,c
  3702  001414  5005               	movf	(??_kpDebounce+4)^0,w,c
  3703  001416  166B               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  3704  001418                     l1185:
  3705                           
  3706                           ;keypad.c: 72:         }
  3707  001418  2A09               	incf	kpDebounce@j^0,f,c
  3708  00141A  0E03               	movlw	3
  3709  00141C  6409               	cpfsgt	kpDebounce@j^0,c
  3710  00141E  EF13  F00A         	goto	u521
  3711  001422  EF15  F00A         	goto	u520
  3712  001426                     u521:
  3713  001426  EFC4  F009         	goto	l1179
  3714  00142A                     u520:
  3715  00142A                     
  3716                           ;keypad.c: 73:     }
  3717  00142A  2A0A               	incf	kpDebounce@i^0,f,c
  3718  00142C  0E02               	movlw	2
  3719  00142E  640A               	cpfsgt	kpDebounce@i^0,c
  3720  001430  EF1C  F00A         	goto	u531
  3721  001434  EF1E  F00A         	goto	u530
  3722  001438                     u531:
  3723  001438  EF8D  F009         	goto	l1161
  3724  00143C                     u530:
  3725  00143C                     
  3726                           ;keypad.c: 74:     if (valorAntigo == valorNovo) {
  3727  00143C  506A               	movf	kpDebounce@valorNovo^0,w,c
  3728  00143E  1868               	xorwf	kpDebounce@valorAntigo^0,w,c
  3729  001440  E107               	bnz	u541
  3730  001442  506B               	movf	(kpDebounce@valorNovo+1)^0,w,c
  3731  001444  1869               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  3732  001446  A4D8               	btfss	status,2,c
  3733  001448  EF28  F00A         	goto	u541
  3734  00144C  EF2A  F00A         	goto	u540
  3735  001450                     u541:
  3736  001450  EF2D  F00A         	goto	l1197
  3737  001454                     u540:
  3738  001454                     
  3739                           ;keypad.c: 75:         tempo--;
  3740  001454  0673               	decf	kpDebounce@tempo^0,f,c
  3741                           
  3742                           ;keypad.c: 76:     } else {
  3743  001456  EF33  F00A         	goto	l131
  3744  00145A                     l1197:
  3745                           
  3746                           ;keypad.c: 77:         tempo = 10;
  3747  00145A  0E0A               	movlw	10
  3748  00145C  6E73               	movwf	kpDebounce@tempo^0,c
  3749  00145E                     
  3750                           ;keypad.c: 78:         valorAntigo = valorNovo;
  3751  00145E  C06A  F068         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  3752  001462  C06B  F069         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  3753  001466                     l131:
  3754                           
  3755                           ;keypad.c: 80:     if (tempo == 0) {
  3756  001466  5073               	movf	kpDebounce@tempo^0,w,c
  3757  001468  A4D8               	btfss	status,2,c
  3758  00146A  EF39  F00A         	goto	u551
  3759  00146E  EF3B  F00A         	goto	u550
  3760  001472                     u551:
  3761  001472  EF3F  F00A         	goto	l132
  3762  001476                     u550:
  3763  001476                     
  3764                           ;keypad.c: 81:         valor = valorAntigo;
  3765  001476  C068  F06C         	movff	kpDebounce@valorAntigo,_valor
  3766  00147A  C069  F06D         	movff	kpDebounce@valorAntigo+1,_valor+1
  3767  00147E                     l132:
  3768                           
  3769                           ;keypad.c: 83:     PORTD = old_D;
  3770  00147E  C006  FF83         	movff	kpDebounce@old_D,3971	;volatile
  3771  001482                     
  3772                           ;keypad.c: 84:     TRISD = 0x00;
  3773  001482  0E00               	movlw	0
  3774  001484  6E95               	movwf	149,c	;volatile
  3775  001486  0012               	return		;funcret
  3776  001488                     __end_of_kpDebounce:
  3777                           	callstack 0
  3778                           
  3779 ;; *************** function _brancas *****************
  3780 ;; Defined at:
  3781 ;;		line 40 in file "main.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;  coluna          1    wreg     unsigned char 
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;  coluna          1   71[COMRAM] unsigned char 
  3786 ;;  white          64    7[COMRAM] unsigned char [64]
  3787 ;;  i               1   72[COMRAM] unsigned char 
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      void 
  3790 ;; Registers used:
  3791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3797 ;;      Params:         0       0       0       0       0       0       0
  3798 ;;      Locals:        66       0       0       0       0       0       0
  3799 ;;      Temps:          0       0       0       0       0       0       0
  3800 ;;      Totals:        66       0       0       0       0       0       0
  3801 ;;Total ram usage:       66 bytes
  3802 ;; Hardware stack levels used: 1
  3803 ;; Hardware stack levels required when called: 2
  3804 ;; This function calls:
  3805 ;;		_lcd_cmd
  3806 ;;		_lcd_dat
  3807 ;; This function is called by:
  3808 ;;		_main
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812                           	psect	text15
  3813  0017D0                     __ptext15:
  3814                           	callstack 0
  3815  0017D0                     _brancas:
  3816                           	callstack 28
  3817                           
  3818                           ;incstack = 0
  3819                           ;brancas@coluna stored from wreg
  3820  0017D0  6E48               	movwf	brancas@coluna^0,c
  3821  0017D2                     
  3822                           ;main.c: 41:     char i;;main.c: 42:     char white[64] = {
  3823  0017D2  EE20  F080         	lfsr	2,brancas@F2435
  3824  0017D6  EE10  F008         	lfsr	1,brancas@white
  3825  0017DA  0E3F               	movlw	63
  3826  0017DC                     u1701:
  3827  0017DC  CFDB FFE3          	movff	plusw2,plusw1
  3828  0017E0  06E8               	decf	wreg,f,c
  3829  0017E2  E2FC               	bc	u1701
  3830  0017E4                     
  3831                           ;main.c: 52:     lcd_cmd(0x40);
  3832  0017E4  0E40               	movlw	64
  3833  0017E6  ECB5  F00D         	call	_lcd_cmd
  3834  0017EA                     
  3835                           ;main.c: 54:     for (i = 0; i < 64; i++) {
  3836  0017EA  0E00               	movlw	0
  3837  0017EC  6E49               	movwf	brancas@i^0,c
  3838  0017EE                     l2043:
  3839                           
  3840                           ;main.c: 55:         lcd_dat(white[i]);
  3841  0017EE  0E08               	movlw	low brancas@white
  3842  0017F0  2449               	addwf	brancas@i^0,w,c
  3843  0017F2  6ED9               	movwf	fsr2l,c
  3844  0017F4  6ADA               	clrf	fsr2h,c
  3845  0017F6  0E00               	movlw	high brancas@white
  3846  0017F8  22DA               	addwfc	fsr2h,f,c
  3847  0017FA  50DF               	movf	indf2,w,c
  3848  0017FC  ECA0  F00D         	call	_lcd_dat
  3849  001800                     
  3850                           ;main.c: 56:     }
  3851  001800  2A49               	incf	brancas@i^0,f,c
  3852  001802  0E3F               	movlw	63
  3853  001804  6449               	cpfsgt	brancas@i^0,c
  3854  001806  EF07  F00C         	goto	u1711
  3855  00180A  EF09  F00C         	goto	u1710
  3856  00180E                     u1711:
  3857  00180E  EFF7  F00B         	goto	l2043
  3858  001812                     u1710:
  3859  001812                     
  3860                           ;main.c: 57:     lcd_cmd(0x80 + coluna);
  3861  001812  5048               	movf	brancas@coluna^0,w,c
  3862  001814  0F80               	addlw	128
  3863  001816  ECB5  F00D         	call	_lcd_cmd
  3864                           
  3865                           ;main.c: 58:     lcd_dat(0);
  3866  00181A  0E00               	movlw	0
  3867  00181C  ECA0  F00D         	call	_lcd_dat
  3868                           
  3869                           ;main.c: 59:     lcd_dat(1);
  3870  001820  0E01               	movlw	1
  3871  001822  ECA0  F00D         	call	_lcd_dat
  3872                           
  3873                           ;main.c: 60:     lcd_dat(2);
  3874  001826  0E02               	movlw	2
  3875  001828  ECA0  F00D         	call	_lcd_dat
  3876                           
  3877                           ;main.c: 61:     lcd_dat(3);
  3878  00182C  0E03               	movlw	3
  3879  00182E  ECA0  F00D         	call	_lcd_dat
  3880                           
  3881                           ;main.c: 62:     lcd_cmd(0xC0 + coluna);
  3882  001832  5048               	movf	brancas@coluna^0,w,c
  3883  001834  0FC0               	addlw	192
  3884  001836  ECB5  F00D         	call	_lcd_cmd
  3885                           
  3886                           ;main.c: 63:     lcd_dat(4);
  3887  00183A  0E04               	movlw	4
  3888  00183C  ECA0  F00D         	call	_lcd_dat
  3889                           
  3890                           ;main.c: 64:     lcd_dat(5);
  3891  001840  0E05               	movlw	5
  3892  001842  ECA0  F00D         	call	_lcd_dat
  3893                           
  3894                           ;main.c: 65:     lcd_dat(6);
  3895  001846  0E06               	movlw	6
  3896  001848  ECA0  F00D         	call	_lcd_dat
  3897                           
  3898                           ;main.c: 66:     lcd_dat(7);
  3899  00184C  0E07               	movlw	7
  3900  00184E  ECA0  F00D         	call	_lcd_dat
  3901  001852  0012               	return		;funcret
  3902  001854                     __end_of_brancas:
  3903                           	callstack 0
  3904                           
  3905 ;; *************** function _lcd_dat *****************
  3906 ;; Defined at:
  3907 ;;		line 46 in file "lcd.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;  val             1    wreg     unsigned char 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  val             1    6[COMRAM] unsigned char 
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      void 
  3914 ;; Registers used:
  3915 ;;		wreg, status,2, status,0, cstack
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3921 ;;      Params:         0       0       0       0       0       0       0
  3922 ;;      Locals:         1       0       0       0       0       0       0
  3923 ;;      Temps:          0       0       0       0       0       0       0
  3924 ;;      Totals:         1       0       0       0       0       0       0
  3925 ;;Total ram usage:        1 bytes
  3926 ;; Hardware stack levels used: 1
  3927 ;; Hardware stack levels required when called: 1
  3928 ;; This function calls:
  3929 ;;		_atraso_ms
  3930 ;;		_lcd_wr
  3931 ;; This function is called by:
  3932 ;;		_lcd_str
  3933 ;;		_pretas
  3934 ;;		_brancas
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text16
  3939  001B40                     __ptext16:
  3940                           	callstack 0
  3941  001B40                     _lcd_dat:
  3942                           	callstack 28
  3943                           
  3944                           ;incstack = 0
  3945                           ;lcd_dat@val stored from wreg
  3946  001B40  6E07               	movwf	lcd_dat@val^0,c
  3947  001B42                     
  3948                           ;lcd.c: 46: void lcd_dat(unsigned char val);lcd.c: 47: {;lcd.c: 48:  PORTEbits.RE1=1;
  3949  001B42  8284               	bsf	132,1,c	;volatile
  3950  001B44                     
  3951                           ;lcd.c: 49:         lcd_wr(val);
  3952  001B44  5007               	movf	lcd_dat@val^0,w,c
  3953  001B46  EC04  F00E         	call	_lcd_wr
  3954  001B4A                     
  3955                           ;lcd.c: 50:         PORTEbits.RE2=1;
  3956  001B4A  8484               	bsf	132,2,c	;volatile
  3957  001B4C                     
  3958                           ;lcd.c: 51:         atraso_ms(3);
  3959  001B4C  0E00               	movlw	0
  3960  001B4E  6E02               	movwf	(atraso_ms@t+1)^0,c
  3961  001B50  0E03               	movlw	3
  3962  001B52  6E01               	movwf	atraso_ms@t^0,c
  3963  001B54  ECA6  F00C         	call	_atraso_ms	;wreg free
  3964  001B58                     
  3965                           ;lcd.c: 52:         PORTEbits.RE1=0;
  3966  001B58  9284               	bcf	132,1,c	;volatile
  3967  001B5A                     
  3968                           ;lcd.c: 53:         atraso_ms(3);
  3969  001B5A  0E00               	movlw	0
  3970  001B5C  6E02               	movwf	(atraso_ms@t+1)^0,c
  3971  001B5E  0E03               	movlw	3
  3972  001B60  6E01               	movwf	atraso_ms@t^0,c
  3973  001B62  ECA6  F00C         	call	_atraso_ms	;wreg free
  3974  001B66                     
  3975                           ;lcd.c: 54:  PORTEbits.RE1=1;
  3976  001B66  8284               	bsf	132,1,c	;volatile
  3977  001B68  0012               	return		;funcret
  3978  001B6A                     __end_of_lcd_dat:
  3979                           	callstack 0
  3980                           
  3981 ;; *************** function _lcd_cmd *****************
  3982 ;; Defined at:
  3983 ;;		line 35 in file "lcd.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  val             1    wreg     unsigned char 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;  val             1    6[COMRAM] unsigned char 
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  1    wreg      void 
  3990 ;; Registers used:
  3991 ;;		wreg, status,2, status,0, cstack
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3997 ;;      Params:         0       0       0       0       0       0       0
  3998 ;;      Locals:         1       0       0       0       0       0       0
  3999 ;;      Temps:          0       0       0       0       0       0       0
  4000 ;;      Totals:         1       0       0       0       0       0       0
  4001 ;;Total ram usage:        1 bytes
  4002 ;; Hardware stack levels used: 1
  4003 ;; Hardware stack levels required when called: 1
  4004 ;; This function calls:
  4005 ;;		_atraso_ms
  4006 ;;		_lcd_wr
  4007 ;; This function is called by:
  4008 ;;		_lcd_init
  4009 ;;		_pretas
  4010 ;;		_brancas
  4011 ;;		_main
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           	psect	text17
  4016  001B6A                     __ptext17:
  4017                           	callstack 0
  4018  001B6A                     _lcd_cmd:
  4019                           	callstack 28
  4020                           
  4021                           ;incstack = 0
  4022                           ;lcd_cmd@val stored from wreg
  4023  001B6A  6E07               	movwf	lcd_cmd@val^0,c
  4024  001B6C                     
  4025                           ;lcd.c: 35: void lcd_cmd(unsigned char val);lcd.c: 36: {;lcd.c: 37:  PORTEbits.RE1=1;
  4026  001B6C  8284               	bsf	132,1,c	;volatile
  4027  001B6E                     
  4028                           ;lcd.c: 38:         lcd_wr(val);
  4029  001B6E  5007               	movf	lcd_cmd@val^0,w,c
  4030  001B70  EC04  F00E         	call	_lcd_wr
  4031  001B74                     
  4032                           ;lcd.c: 39:         PORTEbits.RE2=0;
  4033  001B74  9484               	bcf	132,2,c	;volatile
  4034  001B76                     
  4035                           ;lcd.c: 40:         atraso_ms(3);
  4036  001B76  0E00               	movlw	0
  4037  001B78  6E02               	movwf	(atraso_ms@t+1)^0,c
  4038  001B7A  0E03               	movlw	3
  4039  001B7C  6E01               	movwf	atraso_ms@t^0,c
  4040  001B7E  ECA6  F00C         	call	_atraso_ms	;wreg free
  4041  001B82                     
  4042                           ;lcd.c: 41:         PORTEbits.RE1=0;
  4043  001B82  9284               	bcf	132,1,c	;volatile
  4044  001B84                     
  4045                           ;lcd.c: 42:         atraso_ms(3);
  4046  001B84  0E00               	movlw	0
  4047  001B86  6E02               	movwf	(atraso_ms@t+1)^0,c
  4048  001B88  0E03               	movlw	3
  4049  001B8A  6E01               	movwf	atraso_ms@t^0,c
  4050  001B8C  ECA6  F00C         	call	_atraso_ms	;wreg free
  4051  001B90                     
  4052                           ;lcd.c: 43:  PORTEbits.RE1=1;
  4053  001B90  8284               	bsf	132,1,c	;volatile
  4054  001B92  0012               	return		;funcret
  4055  001B94                     __end_of_lcd_cmd:
  4056                           	callstack 0
  4057                           
  4058 ;; *************** function _lcd_wr *****************
  4059 ;; Defined at:
  4060 ;;		line 30 in file "lcd.c"
  4061 ;; Parameters:    Size  Location     Type
  4062 ;;  val             1    wreg     unsigned char 
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;  val             1    0[COMRAM] unsigned char 
  4065 ;; Return value:  Size  Location     Type
  4066 ;;                  1    wreg      void 
  4067 ;; Registers used:
  4068 ;;		wreg
  4069 ;; Tracked objects:
  4070 ;;		On entry : 0/0
  4071 ;;		On exit  : 0/0
  4072 ;;		Unchanged: 0/0
  4073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4074 ;;      Params:         0       0       0       0       0       0       0
  4075 ;;      Locals:         1       0       0       0       0       0       0
  4076 ;;      Temps:          0       0       0       0       0       0       0
  4077 ;;      Totals:         1       0       0       0       0       0       0
  4078 ;;Total ram usage:        1 bytes
  4079 ;; Hardware stack levels used: 1
  4080 ;; This function calls:
  4081 ;;		Nothing
  4082 ;; This function is called by:
  4083 ;;		_lcd_cmd
  4084 ;;		_lcd_dat
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088                           	psect	text18
  4089  001C08                     __ptext18:
  4090                           	callstack 0
  4091  001C08                     _lcd_wr:
  4092                           	callstack 28
  4093                           
  4094                           ;incstack = 0
  4095                           ;lcd_wr@val stored from wreg
  4096  001C08  6E01               	movwf	lcd_wr@val^0,c
  4097  001C0A                     
  4098                           ;lcd.c: 30: void lcd_wr(unsigned char val);lcd.c: 31: {;lcd.c: 32:   PORTD=val;
  4099  001C0A  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  4100  001C0E  0012               	return		;funcret
  4101  001C10                     __end_of_lcd_wr:
  4102                           	callstack 0
  4103                           
  4104 ;; *************** function _atraso_ms *****************
  4105 ;; Defined at:
  4106 ;;		line 3 in file "delay.c"
  4107 ;; Parameters:    Size  Location     Type
  4108 ;;  t               2    0[COMRAM] unsigned int 
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;  i               2    2[COMRAM] volatile unsigned int 
  4111 ;;  k               1    5[COMRAM] volatile unsigned char 
  4112 ;;  j               1    4[COMRAM] volatile unsigned char 
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  1    wreg      void 
  4115 ;; Registers used:
  4116 ;;		wreg, status,2, status,0
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4122 ;;      Params:         2       0       0       0       0       0       0
  4123 ;;      Locals:         4       0       0       0       0       0       0
  4124 ;;      Temps:          0       0       0       0       0       0       0
  4125 ;;      Totals:         6       0       0       0       0       0       0
  4126 ;;Total ram usage:        6 bytes
  4127 ;; Hardware stack levels used: 1
  4128 ;; This function calls:
  4129 ;;		Nothing
  4130 ;; This function is called by:
  4131 ;;		_lcd_cmd
  4132 ;;		_lcd_dat
  4133 ;;		_lcd_init
  4134 ;;		_main
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           	psect	text19
  4139  00194C                     __ptext19:
  4140                           	callstack 0
  4141  00194C                     _atraso_ms:
  4142                           	callstack 28
  4143  00194C                     
  4144                           ;delay.c: 4:     volatile unsigned char j, k;;delay.c: 5:     volatile unsigned int i;;d
      +                          elay.c: 6:     for (i = 0; i < t; i++) {
  4145  00194C  0E00               	movlw	0
  4146  00194E  6E04               	movwf	(atraso_ms@i+1)^0,c	;volatile
  4147  001950  0E00               	movlw	0
  4148  001952  6E03               	movwf	atraso_ms@i^0,c	;volatile
  4149  001954  EFCC  F00C         	goto	l1781
  4150  001958                     l1759:
  4151                           
  4152                           ;delay.c: 7:         for (j = 0; j < 41; j++) {
  4153  001958  0E00               	movlw	0
  4154  00195A  6E05               	movwf	atraso_ms@j^0,c	;volatile
  4155  00195C                     l1761:
  4156  00195C  0E28               	movlw	40
  4157  00195E  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
  4158  001960  EFB4  F00C         	goto	u1171
  4159  001964  EFB6  F00C         	goto	u1170
  4160  001968                     u1171:
  4161  001968  EFB8  F00C         	goto	l1765
  4162  00196C                     u1170:
  4163  00196C  EFCA  F00C         	goto	l1779
  4164  001970                     l1765:
  4165                           
  4166                           ;delay.c: 8:             for (k = 0; k < 3; k++);
  4167  001970  0E00               	movlw	0
  4168  001972  6E06               	movwf	atraso_ms@k^0,c	;volatile
  4169  001974                     l1767:
  4170  001974  0E02               	movlw	2
  4171  001976  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
  4172  001978  EFC0  F00C         	goto	u1181
  4173  00197C  EFC2  F00C         	goto	u1180
  4174  001980                     u1181:
  4175  001980  EFC4  F00C         	goto	l1771
  4176  001984                     u1180:
  4177  001984  EFC7  F00C         	goto	l1775
  4178  001988                     l1771:
  4179  001988  2A06               	incf	atraso_ms@k^0,f,c	;volatile
  4180  00198A  EFBA  F00C         	goto	l1767
  4181  00198E                     l1775:
  4182                           
  4183                           ;delay.c: 9:         }
  4184  00198E  2A05               	incf	atraso_ms@j^0,f,c	;volatile
  4185  001990  EFAE  F00C         	goto	l1761
  4186  001994                     l1779:
  4187                           
  4188                           ;delay.c: 10:     }
  4189  001994  4A03               	infsnz	atraso_ms@i^0,f,c	;volatile
  4190  001996  2A04               	incf	(atraso_ms@i+1)^0,f,c	;volatile
  4191  001998                     l1781:
  4192  001998  5001               	movf	atraso_ms@t^0,w,c
  4193  00199A  5C03               	subwf	atraso_ms@i^0,w,c	;volatile
  4194  00199C  5002               	movf	(atraso_ms@t+1)^0,w,c
  4195  00199E  5804               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
  4196  0019A0  A0D8               	btfss	status,0,c
  4197  0019A2  EFD5  F00C         	goto	u1191
  4198  0019A6  EFD7  F00C         	goto	u1190
  4199  0019AA                     u1191:
  4200  0019AA  EFAC  F00C         	goto	l1759
  4201  0019AE                     u1190:
  4202  0019AE  0012               	return		;funcret
  4203  0019B0                     __end_of_atraso_ms:
  4204                           	callstack 0
  4205                           
  4206 ;; *************** function _atraso_s *****************
  4207 ;; Defined at:
  4208 ;;		line 13 in file "delay.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;  t               2    6[COMRAM] unsigned int 
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;  i               2    8[COMRAM] volatile unsigned int 
  4213 ;;  k               1   11[COMRAM] volatile unsigned char 
  4214 ;;  j               1   10[COMRAM] volatile unsigned char 
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  1    wreg      void 
  4217 ;; Registers used:
  4218 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4224 ;;      Params:         2       0       0       0       0       0       0
  4225 ;;      Locals:         4       0       0       0       0       0       0
  4226 ;;      Temps:          0       0       0       0       0       0       0
  4227 ;;      Totals:         6       0       0       0       0       0       0
  4228 ;;Total ram usage:        6 bytes
  4229 ;; Hardware stack levels used: 1
  4230 ;; Hardware stack levels required when called: 1
  4231 ;; This function calls:
  4232 ;;		___wmul
  4233 ;; This function is called by:
  4234 ;;		_main
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           	psect	text20
  4239  0018D4                     __ptext20:
  4240                           	callstack 0
  4241  0018D4                     _atraso_s:
  4242                           	callstack 29
  4243  0018D4                     
  4244                           ;delay.c: 14:     volatile unsigned char j, k;;delay.c: 15:     volatile unsigned int i;
      +                          ;delay.c: 16:     for (i = 0; i < (t * 1000); i++) {
  4245  0018D4  0E00               	movlw	0
  4246  0018D6  6E0A               	movwf	(atraso_s@i+1)^0,c	;volatile
  4247  0018D8  0E00               	movlw	0
  4248  0018DA  6E09               	movwf	atraso_s@i^0,c	;volatile
  4249  0018DC  EF90  F00C         	goto	l2013
  4250  0018E0                     l1991:
  4251                           
  4252                           ;delay.c: 17:         for (j = 0; j < 41; j++) {
  4253  0018E0  0E00               	movlw	0
  4254  0018E2  6E0B               	movwf	atraso_s@j^0,c	;volatile
  4255  0018E4                     l1993:
  4256  0018E4  0E28               	movlw	40
  4257  0018E6  640B               	cpfsgt	atraso_s@j^0,c	;volatile
  4258  0018E8  EF78  F00C         	goto	u1651
  4259  0018EC  EF7A  F00C         	goto	u1650
  4260  0018F0                     u1651:
  4261  0018F0  EF7C  F00C         	goto	l1997
  4262  0018F4                     u1650:
  4263  0018F4  EF8E  F00C         	goto	l2011
  4264  0018F8                     l1997:
  4265                           
  4266                           ;delay.c: 18:             for (k = 0; k < 3; k++);
  4267  0018F8  0E00               	movlw	0
  4268  0018FA  6E0C               	movwf	atraso_s@k^0,c	;volatile
  4269  0018FC                     l1999:
  4270  0018FC  0E02               	movlw	2
  4271  0018FE  640C               	cpfsgt	atraso_s@k^0,c	;volatile
  4272  001900  EF84  F00C         	goto	u1661
  4273  001904  EF86  F00C         	goto	u1660
  4274  001908                     u1661:
  4275  001908  EF88  F00C         	goto	l2003
  4276  00190C                     u1660:
  4277  00190C  EF8B  F00C         	goto	l2007
  4278  001910                     l2003:
  4279  001910  2A0C               	incf	atraso_s@k^0,f,c	;volatile
  4280  001912  EF7E  F00C         	goto	l1999
  4281  001916                     l2007:
  4282                           
  4283                           ;delay.c: 19:         }
  4284  001916  2A0B               	incf	atraso_s@j^0,f,c	;volatile
  4285  001918  EF72  F00C         	goto	l1993
  4286  00191C                     l2011:
  4287                           
  4288                           ;delay.c: 20:     }
  4289  00191C  4A09               	infsnz	atraso_s@i^0,f,c	;volatile
  4290  00191E  2A0A               	incf	(atraso_s@i+1)^0,f,c	;volatile
  4291  001920                     l2013:
  4292  001920  C007  F001         	movff	atraso_s@t,___wmul@multiplier
  4293  001924  C008  F002         	movff	atraso_s@t+1,___wmul@multiplier+1
  4294  001928  0E03               	movlw	3
  4295  00192A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4296  00192C  0EE8               	movlw	232
  4297  00192E  6E03               	movwf	___wmul@multiplicand^0,c
  4298  001930  ECCA  F00D         	call	___wmul	;wreg free
  4299  001934  5001               	movf	?___wmul^0,w,c
  4300  001936  5C09               	subwf	atraso_s@i^0,w,c	;volatile
  4301  001938  5002               	movf	(?___wmul+1)^0,w,c
  4302  00193A  580A               	subwfb	(atraso_s@i+1)^0,w,c	;volatile
  4303  00193C  A0D8               	btfss	status,0,c
  4304  00193E  EFA3  F00C         	goto	u1671
  4305  001942  EFA5  F00C         	goto	u1670
  4306  001946                     u1671:
  4307  001946  EF70  F00C         	goto	l1991
  4308  00194A                     u1670:
  4309  00194A  0012               	return		;funcret
  4310  00194C                     __end_of_atraso_s:
  4311                           	callstack 0
  4312                           
  4313 ;; *************** function ___wmul *****************
  4314 ;; Defined at:
  4315 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  4316 ;; Parameters:    Size  Location     Type
  4317 ;;  multiplier      2    0[COMRAM] unsigned int 
  4318 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;  product         2    4[COMRAM] unsigned int 
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  2    0[COMRAM] unsigned int 
  4323 ;; Registers used:
  4324 ;;		wreg, status,2, status,0, prodl, prodh
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4330 ;;      Params:         4       0       0       0       0       0       0
  4331 ;;      Locals:         2       0       0       0       0       0       0
  4332 ;;      Temps:          0       0       0       0       0       0       0
  4333 ;;      Totals:         6       0       0       0       0       0       0
  4334 ;;Total ram usage:        6 bytes
  4335 ;; Hardware stack levels used: 1
  4336 ;; This function calls:
  4337 ;;		Nothing
  4338 ;; This function is called by:
  4339 ;;		_atraso_s
  4340 ;;		_main
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           	psect	text21
  4345  001B94                     __ptext21:
  4346                           	callstack 0
  4347  001B94                     ___wmul:
  4348                           	callstack 29
  4349  001B94  5001               	movf	___wmul@multiplier^0,w,c
  4350  001B96  0203               	mulwf	___wmul@multiplicand^0,c
  4351  001B98  CFF3 F005          	movff	prodl,___wmul@product
  4352  001B9C  CFF4 F006          	movff	prodh,___wmul@product+1
  4353  001BA0  5001               	movf	___wmul@multiplier^0,w,c
  4354  001BA2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4355  001BA4  50F3               	movf	243,w,c
  4356  001BA6  2606               	addwf	(___wmul@product+1)^0,f,c
  4357  001BA8  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4358  001BAA  0203               	mulwf	___wmul@multiplicand^0,c
  4359  001BAC  50F3               	movf	243,w,c
  4360  001BAE  2606               	addwf	(___wmul@product+1)^0,f,c
  4361  001BB0  C005  F001         	movff	___wmul@product,?___wmul
  4362  001BB4  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4363  001BB8  0012               	return		;funcret
  4364  001BBA                     __end_of___wmul:
  4365                           	callstack 0
  4366                           
  4367 ;; *************** function ___awmod *****************
  4368 ;; Defined at:
  4369 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  4370 ;; Parameters:    Size  Location     Type
  4371 ;;  dividend        2    8[COMRAM] int 
  4372 ;;  divisor         2   10[COMRAM] int 
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;  sign            1   13[COMRAM] unsigned char 
  4375 ;;  counter         1   12[COMRAM] unsigned char 
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  2    8[COMRAM] int 
  4378 ;; Registers used:
  4379 ;;		wreg, status,2, status,0
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4385 ;;      Params:         4       0       0       0       0       0       0
  4386 ;;      Locals:         2       0       0       0       0       0       0
  4387 ;;      Temps:          0       0       0       0       0       0       0
  4388 ;;      Totals:         6       0       0       0       0       0       0
  4389 ;;Total ram usage:        6 bytes
  4390 ;; Hardware stack levels used: 1
  4391 ;; This function calls:
  4392 ;;		Nothing
  4393 ;; This function is called by:
  4394 ;;		_main
  4395 ;; This function uses a non-reentrant model
  4396 ;;
  4397                           
  4398                           	psect	text22
  4399  00169C                     __ptext22:
  4400                           	callstack 0
  4401  00169C                     ___awmod:
  4402                           	callstack 30
  4403  00169C  0E00               	movlw	0
  4404  00169E  6E0E               	movwf	___awmod@sign^0,c
  4405  0016A0  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  4406  0016A2  EF57  F00B         	goto	u1780
  4407  0016A6  EF55  F00B         	goto	u1781
  4408  0016AA                     u1781:
  4409  0016AA  EF5D  F00B         	goto	l2103
  4410  0016AE                     u1780:
  4411  0016AE  6C09               	negf	___awmod@dividend^0,c
  4412  0016B0  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4413  0016B2  B0D8               	btfsc	status,0,c
  4414  0016B4  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4415  0016B6  0E01               	movlw	1
  4416  0016B8  6E0E               	movwf	___awmod@sign^0,c
  4417  0016BA                     l2103:
  4418  0016BA  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  4419  0016BC  EF64  F00B         	goto	u1790
  4420  0016C0  EF62  F00B         	goto	u1791
  4421  0016C4                     u1791:
  4422  0016C4  EF68  F00B         	goto	l2107
  4423  0016C8                     u1790:
  4424  0016C8  6C0B               	negf	___awmod@divisor^0,c
  4425  0016CA  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  4426  0016CC  B0D8               	btfsc	status,0,c
  4427  0016CE  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  4428  0016D0                     l2107:
  4429  0016D0  500B               	movf	___awmod@divisor^0,w,c
  4430  0016D2  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  4431  0016D4  B4D8               	btfsc	status,2,c
  4432  0016D6  EF6F  F00B         	goto	u1801
  4433  0016DA  EF71  F00B         	goto	u1800
  4434  0016DE                     u1801:
  4435  0016DE  EF95  F00B         	goto	l2123
  4436  0016E2                     u1800:
  4437  0016E2  0E01               	movlw	1
  4438  0016E4  6E0D               	movwf	___awmod@counter^0,c
  4439  0016E6  EF79  F00B         	goto	l2113
  4440  0016EA                     l2111:
  4441  0016EA  90D8               	bcf	status,0,c
  4442  0016EC  360B               	rlcf	___awmod@divisor^0,f,c
  4443  0016EE  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  4444  0016F0  2A0D               	incf	___awmod@counter^0,f,c
  4445  0016F2                     l2113:
  4446  0016F2  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  4447  0016F4  EF7E  F00B         	goto	u1811
  4448  0016F8  EF80  F00B         	goto	u1810
  4449  0016FC                     u1811:
  4450  0016FC  EF75  F00B         	goto	l2111
  4451  001700                     u1810:
  4452  001700                     l2115:
  4453  001700  500B               	movf	___awmod@divisor^0,w,c
  4454  001702  5C09               	subwf	___awmod@dividend^0,w,c
  4455  001704  500C               	movf	(___awmod@divisor+1)^0,w,c
  4456  001706  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  4457  001708  A0D8               	btfss	status,0,c
  4458  00170A  EF89  F00B         	goto	u1821
  4459  00170E  EF8B  F00B         	goto	u1820
  4460  001712                     u1821:
  4461  001712  EF8F  F00B         	goto	l2119
  4462  001716                     u1820:
  4463  001716  500B               	movf	___awmod@divisor^0,w,c
  4464  001718  5E09               	subwf	___awmod@dividend^0,f,c
  4465  00171A  500C               	movf	(___awmod@divisor+1)^0,w,c
  4466  00171C  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  4467  00171E                     l2119:
  4468  00171E  90D8               	bcf	status,0,c
  4469  001720  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  4470  001722  320B               	rrcf	___awmod@divisor^0,f,c
  4471  001724  2E0D               	decfsz	___awmod@counter^0,f,c
  4472  001726  EF80  F00B         	goto	l2115
  4473  00172A                     l2123:
  4474  00172A  500E               	movf	___awmod@sign^0,w,c
  4475  00172C  B4D8               	btfsc	status,2,c
  4476  00172E  EF9B  F00B         	goto	u1831
  4477  001732  EF9D  F00B         	goto	u1830
  4478  001736                     u1831:
  4479  001736  EFA1  F00B         	goto	l2127
  4480  00173A                     u1830:
  4481  00173A  6C09               	negf	___awmod@dividend^0,c
  4482  00173C  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4483  00173E  B0D8               	btfsc	status,0,c
  4484  001740  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4485  001742                     l2127:
  4486  001742  C009  F009         	movff	___awmod@dividend,?___awmod
  4487  001746  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  4488  00174A  0012               	return		;funcret
  4489  00174C                     __end_of___awmod:
  4490                           	callstack 0
  4491                           
  4492 ;; *************** function ___awdiv *****************
  4493 ;; Defined at:
  4494 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;  dividend        2    0[COMRAM] int 
  4497 ;;  divisor         2    2[COMRAM] int 
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;  quotient        2    6[COMRAM] int 
  4500 ;;  sign            1    5[COMRAM] unsigned char 
  4501 ;;  counter         1    4[COMRAM] unsigned char 
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  2    0[COMRAM] int 
  4504 ;; Registers used:
  4505 ;;		wreg, status,2, status,0
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4511 ;;      Params:         4       0       0       0       0       0       0
  4512 ;;      Locals:         4       0       0       0       0       0       0
  4513 ;;      Temps:          0       0       0       0       0       0       0
  4514 ;;      Totals:         8       0       0       0       0       0       0
  4515 ;;Total ram usage:        8 bytes
  4516 ;; Hardware stack levels used: 1
  4517 ;; This function calls:
  4518 ;;		Nothing
  4519 ;; This function is called by:
  4520 ;;		_main
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           	psect	text23
  4525  0015D8                     __ptext23:
  4526                           	callstack 0
  4527  0015D8                     ___awdiv:
  4528                           	callstack 30
  4529  0015D8  0E00               	movlw	0
  4530  0015DA  6E06               	movwf	___awdiv@sign^0,c
  4531  0015DC  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4532  0015DE  EFF5  F00A         	goto	u1720
  4533  0015E2  EFF3  F00A         	goto	u1721
  4534  0015E6                     u1721:
  4535  0015E6  EFFB  F00A         	goto	l2059
  4536  0015EA                     u1720:
  4537  0015EA  6C03               	negf	___awdiv@divisor^0,c
  4538  0015EC  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4539  0015EE  B0D8               	btfsc	status,0,c
  4540  0015F0  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4541  0015F2  0E01               	movlw	1
  4542  0015F4  6E06               	movwf	___awdiv@sign^0,c
  4543  0015F6                     l2059:
  4544  0015F6  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4545  0015F8  EF02  F00B         	goto	u1730
  4546  0015FC  EF00  F00B         	goto	u1731
  4547  001600                     u1731:
  4548  001600  EF08  F00B         	goto	l2065
  4549  001604                     u1730:
  4550  001604  6C01               	negf	___awdiv@dividend^0,c
  4551  001606  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4552  001608  B0D8               	btfsc	status,0,c
  4553  00160A  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4554  00160C  0E01               	movlw	1
  4555  00160E  1A06               	xorwf	___awdiv@sign^0,f,c
  4556  001610                     l2065:
  4557  001610  0E00               	movlw	0
  4558  001612  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4559  001614  0E00               	movlw	0
  4560  001616  6E07               	movwf	___awdiv@quotient^0,c
  4561  001618  5003               	movf	___awdiv@divisor^0,w,c
  4562  00161A  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4563  00161C  B4D8               	btfsc	status,2,c
  4564  00161E  EF13  F00B         	goto	u1741
  4565  001622  EF15  F00B         	goto	u1740
  4566  001626                     u1741:
  4567  001626  EF3D  F00B         	goto	l2087
  4568  00162A                     u1740:
  4569  00162A  0E01               	movlw	1
  4570  00162C  6E05               	movwf	___awdiv@counter^0,c
  4571  00162E  EF1D  F00B         	goto	l2073
  4572  001632                     l2071:
  4573  001632  90D8               	bcf	status,0,c
  4574  001634  3603               	rlcf	___awdiv@divisor^0,f,c
  4575  001636  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4576  001638  2A05               	incf	___awdiv@counter^0,f,c
  4577  00163A                     l2073:
  4578  00163A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4579  00163C  EF22  F00B         	goto	u1751
  4580  001640  EF24  F00B         	goto	u1750
  4581  001644                     u1751:
  4582  001644  EF19  F00B         	goto	l2071
  4583  001648                     u1750:
  4584  001648                     l2075:
  4585  001648  90D8               	bcf	status,0,c
  4586  00164A  3607               	rlcf	___awdiv@quotient^0,f,c
  4587  00164C  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4588  00164E  5003               	movf	___awdiv@divisor^0,w,c
  4589  001650  5C01               	subwf	___awdiv@dividend^0,w,c
  4590  001652  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4591  001654  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4592  001656  A0D8               	btfss	status,0,c
  4593  001658  EF30  F00B         	goto	u1761
  4594  00165C  EF32  F00B         	goto	u1760
  4595  001660                     u1761:
  4596  001660  EF37  F00B         	goto	l2083
  4597  001664                     u1760:
  4598  001664  5003               	movf	___awdiv@divisor^0,w,c
  4599  001666  5E01               	subwf	___awdiv@dividend^0,f,c
  4600  001668  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4601  00166A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4602  00166C  8007               	bsf	___awdiv@quotient^0,0,c
  4603  00166E                     l2083:
  4604  00166E  90D8               	bcf	status,0,c
  4605  001670  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4606  001672  3203               	rrcf	___awdiv@divisor^0,f,c
  4607  001674  2E05               	decfsz	___awdiv@counter^0,f,c
  4608  001676  EF24  F00B         	goto	l2075
  4609  00167A                     l2087:
  4610  00167A  5006               	movf	___awdiv@sign^0,w,c
  4611  00167C  B4D8               	btfsc	status,2,c
  4612  00167E  EF43  F00B         	goto	u1771
  4613  001682  EF45  F00B         	goto	u1770
  4614  001686                     u1771:
  4615  001686  EF49  F00B         	goto	l2091
  4616  00168A                     u1770:
  4617  00168A  6C07               	negf	___awdiv@quotient^0,c
  4618  00168C  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4619  00168E  B0D8               	btfsc	status,0,c
  4620  001690  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4621  001692                     l2091:
  4622  001692  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4623  001696  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4624  00169A  0012               	return		;funcret
  4625  00169C                     __end_of___awdiv:
  4626                           	callstack 0
  4627                           
  4628                           	psect	rparam
  4629  0000                     
  4630                           	psect	idloc
  4631                           
  4632                           ;Config register IDLOC0 @ 0x200000
  4633                           ;	unspecified, using default values
  4634  200000                     	org	2097152
  4635  200000  FF                 	db	255
  4636                           
  4637                           ;Config register IDLOC1 @ 0x200001
  4638                           ;	unspecified, using default values
  4639  200001                     	org	2097153
  4640  200001  FF                 	db	255
  4641                           
  4642                           ;Config register IDLOC2 @ 0x200002
  4643                           ;	unspecified, using default values
  4644  200002                     	org	2097154
  4645  200002  FF                 	db	255
  4646                           
  4647                           ;Config register IDLOC3 @ 0x200003
  4648                           ;	unspecified, using default values
  4649  200003                     	org	2097155
  4650  200003  FF                 	db	255
  4651                           
  4652                           ;Config register IDLOC4 @ 0x200004
  4653                           ;	unspecified, using default values
  4654  200004                     	org	2097156
  4655  200004  FF                 	db	255
  4656                           
  4657                           ;Config register IDLOC5 @ 0x200005
  4658                           ;	unspecified, using default values
  4659  200005                     	org	2097157
  4660  200005  FF                 	db	255
  4661                           
  4662                           ;Config register IDLOC6 @ 0x200006
  4663                           ;	unspecified, using default values
  4664  200006                     	org	2097158
  4665  200006  FF                 	db	255
  4666                           
  4667                           ;Config register IDLOC7 @ 0x200007
  4668                           ;	unspecified, using default values
  4669  200007                     	org	2097159
  4670  200007  FF                 	db	255
  4671                           
  4672                           	psect	config
  4673                           
  4674                           ; Padding undefined space
  4675  300000                     	org	3145728
  4676  300000  FF                 	db	255
  4677                           
  4678                           ;Config register CONFIG1H @ 0x300001
  4679                           ;	Oscillator Selection bits
  4680                           ;	OSC = HS, HS oscillator
  4681                           ;	Fail-Safe Clock Monitor Enable bit
  4682                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4683                           ;	Internal/External Oscillator Switchover bit
  4684                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4685  300001                     	org	3145729
  4686  300001  02                 	db	2
  4687                           
  4688                           ;Config register CONFIG2L @ 0x300002
  4689                           ;	Power-up Timer Enable bit
  4690                           ;	PWRT = OFF, PWRT disabled
  4691                           ;	Brown-out Reset Enable bits
  4692                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4693                           ;	Brown Out Reset Voltage bits
  4694                           ;	BORV = 0x2E, user specified literal
  4695  300002                     	org	3145730
  4696  300002  71                 	db	369
  4697                           
  4698                           ;Config register CONFIG2H @ 0x300003
  4699                           ;	Watchdog Timer Enable bit
  4700                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4701                           ;	Watchdog Timer Postscale Select bits
  4702                           ;	WDTPS = 1, 1:1
  4703  300003                     	org	3145731
  4704  300003  00                 	db	0
  4705                           
  4706                           ; Padding undefined space
  4707  300004                     	org	3145732
  4708  300004  FF                 	db	255
  4709                           
  4710                           ;Config register CONFIG3H @ 0x300005
  4711                           ;	CCP2 MUX bit
  4712                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4713                           ;	PORTB A/D Enable bit
  4714                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4715                           ;	Low-Power Timer1 Oscillator Enable bit
  4716                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4717                           ;	MCLR Pin Enable bit
  4718                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4719  300005                     	org	3145733
  4720  300005  83                 	db	131
  4721                           
  4722                           ;Config register CONFIG4L @ 0x300006
  4723                           ;	Stack Full/Underflow Reset Enable bit
  4724                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  4725                           ;	Single-Supply ICSP Enable bit
  4726                           ;	LVP = OFF, Single-Supply ICSP disabled
  4727                           ;	Extended Instruction Set Enable bit
  4728                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4729                           ;	Background Debugger Enable bit
  4730                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4731  300006                     	org	3145734
  4732  300006  80                 	db	128
  4733                           
  4734                           ; Padding undefined space
  4735  300007                     	org	3145735
  4736  300007  FF                 	db	255
  4737                           
  4738                           ;Config register CONFIG5L @ 0x300008
  4739                           ;	Code Protection bit
  4740                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4741                           ;	Code Protection bit
  4742                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4743                           ;	Code Protection bit
  4744                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4745                           ;	Code Protection bit
  4746                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4747  300008                     	org	3145736
  4748  300008  0F                 	db	15
  4749                           
  4750                           ;Config register CONFIG5H @ 0x300009
  4751                           ;	Boot Block Code Protection bit
  4752                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4753                           ;	Data EEPROM Code Protection bit
  4754                           ;	CPD = OFF, Data EEPROM not code-protected
  4755  300009                     	org	3145737
  4756  300009  C0                 	db	192
  4757                           
  4758                           ;Config register CONFIG6L @ 0x30000A
  4759                           ;	Write Protection bit
  4760                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4761                           ;	Write Protection bit
  4762                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4763                           ;	Write Protection bit
  4764                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4765                           ;	Write Protection bit
  4766                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4767  30000A                     	org	3145738
  4768  30000A  0F                 	db	15
  4769                           
  4770                           ;Config register CONFIG6H @ 0x30000B
  4771                           ;	Configuration Register Write Protection bit
  4772                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4773                           ;	Boot Block Write Protection bit
  4774                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4775                           ;	Data EEPROM Write Protection bit
  4776                           ;	WRTD = OFF, Data EEPROM not write-protected
  4777  30000B                     	org	3145739
  4778  30000B  E0                 	db	224
  4779                           
  4780                           ;Config register CONFIG7L @ 0x30000C
  4781                           ;	Table Read Protection bit
  4782                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4783                           ;	Table Read Protection bit
  4784                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4785                           ;	Table Read Protection bit
  4786                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4787                           ;	Table Read Protection bit
  4788                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4789  30000C                     	org	3145740
  4790  30000C  0F                 	db	15
  4791                           
  4792                           ;Config register CONFIG7H @ 0x30000D
  4793                           ;	Boot Block Table Read Protection bit
  4794                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4795  30000D                     	org	3145741
  4796  30000D  40                 	db	64
  4797                           tosu	equ	0xFFF
  4798                           tosh	equ	0xFFE
  4799                           tosl	equ	0xFFD
  4800                           stkptr	equ	0xFFC
  4801                           pclatu	equ	0xFFB
  4802                           pclath	equ	0xFFA
  4803                           pcl	equ	0xFF9
  4804                           tblptru	equ	0xFF8
  4805                           tblptrh	equ	0xFF7
  4806                           tblptrl	equ	0xFF6
  4807                           tablat	equ	0xFF5
  4808                           prodh	equ	0xFF4
  4809                           prodl	equ	0xFF3
  4810                           indf0	equ	0xFEF
  4811                           postinc0	equ	0xFEE
  4812                           postdec0	equ	0xFED
  4813                           preinc0	equ	0xFEC
  4814                           plusw0	equ	0xFEB
  4815                           fsr0h	equ	0xFEA
  4816                           fsr0l	equ	0xFE9
  4817                           wreg	equ	0xFE8
  4818                           indf1	equ	0xFE7
  4819                           postinc1	equ	0xFE6
  4820                           postdec1	equ	0xFE5
  4821                           preinc1	equ	0xFE4
  4822                           plusw1	equ	0xFE3
  4823                           fsr1h	equ	0xFE2
  4824                           fsr1l	equ	0xFE1
  4825                           bsr	equ	0xFE0
  4826                           indf2	equ	0xFDF
  4827                           postinc2	equ	0xFDE
  4828                           postdec2	equ	0xFDD
  4829                           preinc2	equ	0xFDC
  4830                           plusw2	equ	0xFDB
  4831                           fsr2h	equ	0xFDA
  4832                           fsr2l	equ	0xFD9
  4833                           status	equ	0xFD8

Data Sizes:
    Strings     61
    Constant    16
    Data        128
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    103     115
    BANK0           128      0     128
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_14(CODE[8]), STR_13(CODE[9]), STR_12(CODE[7]), STR_11(CODE[9]), 
		 -> STR_10(CODE[6]), STR_9(CODE[7]), STR_8(CODE[6]), STR_7(CODE[8]), 
		 -> STR_6(CODE[6]), STR_5(CODE[8]), STR_4(CODE[6]), STR_3(CODE[12]), 
		 -> STR_2(CODE[7]), STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_brancas
    _main->_pretas
    _ssdUpdate->_digitalWrite
    _ssdInit->_pinMode
    _ssdDigit->___awmod
    _pretas->_lcd_cmd
    _pretas->_lcd_dat
    _lcd_str->_lcd_dat
    _lcd_init->_lcd_cmd
    _brancas->_lcd_cmd
    _brancas->_lcd_dat
    _lcd_dat->_atraso_ms
    _lcd_cmd->_atraso_ms
    _atraso_s->___wmul
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   20592
                                             73 COMRAM    30    30      0
                            ___awdiv
                            ___awmod
                             ___wmul
                          _atraso_ms
                           _atraso_s
                            _brancas
                         _kpDebounce
                             _kpInit
                             _kpRead
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                             _pretas
                           _ssdDigit
                            _ssdInit
                          _ssdUpdate
                          _timerInit
                         _timerReset
                          _timerWait
 ---------------------------------------------------------------------------------
 (1) _timerWait                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timerReset                                           4     2      2     167
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0    1660
                                              6 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _digitalWrite                                         6     2      4    1660
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    1048
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1048
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ssdDigit                                             2     1      1    1088
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _pretas                                              66    66      0    1868
                                              7 COMRAM    66    66      0
                            _lcd_cmd
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              5     3      2    2020
                                              7 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    1688
                          _atraso_ms
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                          10    10      0     210
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (1) _brancas                                             66    66      0    1868
                                              7 COMRAM    66    66      0
                            _lcd_cmd
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0     866
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0     866
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            6     4      2     822
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _atraso_s                                             6     4      2    1589
                                              6 COMRAM     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1223
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    2120
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1212
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   ___wmul
   _atraso_ms
   _atraso_s
     ___wmul
   _brancas
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_dat
       _atraso_ms
       _lcd_wr
   _kpDebounce
   _kpInit
   _kpRead
   _lcd_cmd
   _lcd_init
     _atraso_ms
     _lcd_cmd
   _lcd_str
     _lcd_dat
   _pretas
     _lcd_cmd
     _lcd_dat
   _ssdDigit
     ___awdiv (ARG)
     ___awmod (ARG)
   _ssdInit
     _pinMode
   _ssdUpdate
     _digitalWrite
   _timerInit
   _timerReset
   _timerWait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      80       5      100.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     67      73       1       90.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F3      15        0.0%
DATA                 0      0      F3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Aug 01 20:56:40 2021

                      l9 1C0E                       l12 1B92                       l15 1B68  
                     l24 1B08                       l18 1A0A                       l66 10BE  
           ___awdiv@sign 0006                       _v0 0071                       _v1 0070  
                     _v2 006F                       _v3 006E      ___wmul@multiplicand 0003  
                    l100 130C                      l113 1BF4                      l131 1466  
                    l132 147E                      l133 1486                      l320 1BB8  
                    l136 1BFE                      l209 19AE                      l219 194A  
                    l163 1A62                      l173 15D6                      l270 17CE  
                    l190 1BDC                      l176 1AB8                      l193 1BEA  
                    l196 1BDA                      l277 1852                      l551 169A  
                    l199 1C06                      l564 174A                      u520 142A  
                    u504 13D2                      u600 1BEA                      u521 1426  
                    u505 13CC                      u601 1BE6                      u530 143C  
                    u514 1402                      u531 1438                      u515 13FC  
                    u540 1454                      u541 1450                      u550 1476  
                    u470 1384                      u454 1330                      u551 1472  
                    u471 1380                      u455 132C                      u464 1350  
                    u465 134C                      u490 13B4                      u491 13B0  
                    u484 139A                      u485 1396             ___awmod@sign 000E  
                    wreg 000FE8                     l1201 1476                     l2003 1910  
                   l2011 191C                     l1203 1482                     l2101 16B6  
                   l2013 1920                     l1205 1BF6                     l2111 16EA  
                   l2103 16BA                     l2007 1916                     l1151 130E  
                   l2031 178E                     l2015 174E                     l2121 1724  
                   l2113 16F2                     l2105 16C8                     l2033 17D2  
                   l1161 131A                     l1153 1312                     l2025 176A  
                   l2017 1760                     l2201 081E                     l2051 15D8  
                   l2115 1700                     l2123 172A                     l2107 16D0  
                   l2043 17EE                     l2035 17E4                     l1171 1368  
                   l1163 135C                     l1155 1316                     l2027 177C  
                   l2019 1766                     l2211 085C                     l2203 0822  
                   l2131 0650                     l2061 1604                     l2053 15DC  
                   l2125 173A                     l2117 1716                     l2109 16E2  
                   l2045 1800                     l2037 17EA                     l1181 13B4  
                   l1173 1384                     l2029 177E                     l2301 0C7A  
                   l2221 08B2                     l2213 0878                     l2205 083E  
                   l2141 06B0                     l2133 0694                     l2071 1632  
                   l2063 160C                     l2055 15EA                     l2127 1742  
                   l2119 171E                     l2047 1802                     l1191 142C  
                   l1183 13E4                     l1271 1BDC                     l2311 0CB8  
                   l2303 0C86                     l2231 08F4                     l2223 08BA  
                   l2215 0880                     l2207 0846                     l2151 06D4  
                   l2143 06B6                     l2135 0698                     l2081 166C  
                   l2073 163A                     l2065 1610                     l2057 15F2  
                   l2049 1812                     l1193 143C                     l1185 1418  
                   l1169 1364                     l2401 0E5A                     l2313 0CC4  
                   l2305 0C98                     l2321 0CF0                     l2241 09D8  
                   l2233 0906                     l2225 08CC                     l2217 0892  
                   l2209 0858                     l2161 0704                     l2153 06E0  
                   l2145 06BC                     l2137 069E                     l2091 1692  
                   l2083 166E                     l2075 1648                     l2067 1618  
                   l2059 15F6                     l1195 1454                     l1187 141A  
                   l1179 1388                     l2331 0D2A                     l2323 0D02  
                   l2315 0CD0                     l2307 0C9E                     l2251 0A02  
                   l2243 09DE                     l2235 09C6                     l2227 08D0  
                   l2219 0896                     l2171 072C                     l2163 070A  
                   l2155 06E6                     l2147 06C8                     l2139 06A4  
                   l2085 1674                     l2077 164E                     l2069 162A  
                   l1197 145A                     l1189 142A                     l2413 15B0  
                   l1285 1C00                     l2405 0E62                     l2333 0D30  
                   l2325 0D12                     l2317 0CE2                     l2309 0CA6  
                   l2261 0A40                     l2253 0A0E                     l2245 09EA  
                   l2237 09CA                     l2229 08EC                     l2181 078E  
                   l2173 0730                     l2165 0716                     l2157 06F2  
                   l2149 06CE                     l2079 1664                     l2087 167A  
                   l2095 169C                     l1199 145E                     l1287 1C04  
                   l2407 0E66                     l2351 0D78                     l2343 0D5A  
                   l2335 0D3C                     l2327 0D18                     l2319 0CE8  
                   l2271 0AF8                     l2263 0A5A                     l2255 0A20  
                   l2247 09F0                     l2239 09D2                     l2183 07AC  
                   l2175 0734                     l2167 071C                     l2159 06FE  
                   l2089 168A                     l2097 16A0                     l1801 1B4A  
                   l2353 0D7C                     l2337 0D42                     l2329 0D1E  
                   l2281 0B52                     l2265 0A62                     l2257 0A24  
                   l2273 0B1E                     l2249 09FC                     l2193 07DC  
                   l2185 07B4                     l2177 0752                     l2169 0728  
                   l2099 16AE                     l1803 1B4C                     l1811 0E72  
                   l2371 0DD8                     l2355 0D88                     l2347 0D72  
                   l2339 0D46                     l2363 0DA8                     l2291 0C0A  
                   l2283 0B6C                     l2275 0B32                     l2267 0A94  
                   l2259 0A3A                     l2195 07E0                     l2179 0770  
                   l1805 1B58                     l1901 19C0                     l1821 0EFE  
                   l1813 0E8E                     l2381 0E00                     l2373 0DE4  
                   l2365 0DBC                     l2357 0D90                     l2349 0D74  
                   l2285 0B74                     l2277 0B36                     l2293 0C30  
                   l2269 0AC6                     l2197 07E4                     l2189 07D4  
                   l1807 1B5A                     l1911 1BEC                     l1903 1ABA  
                   l1831 0F90                     l1823 0F18                     l1815 0EA0  
                   l2391 0E2E                     l2375 0DEA                     l2367 0DCC  
                   l2359 0DA0                     l2295 0C34                     l2287 0BA6  
                   l2279 0B4C                     l2199 0800                     l1761 195C  
                   l1809 1B66                     l1905 1AC2                     l1921 1A36  
                   l1913 1A0E                     l1841 1028                     l1833 0FB0  
                   l1825 0F38                     l1817 0EC0                     l2393 0E32  
                   l2385 0E14                     l2377 0DF6                     l2369 0DD2  
                   l2297 0C50                     l2289 0BD8                     l1771 1988  
                   l1755 1C0A                     l1907 1ADE                     l1923 1A48  
                   l1915 1A1E                     l1851 10C0                     l1843 104A  
                   l1835 0FD2                     l1827 0F5A                     l1819 0EE2  
                   l1931 148C                     l2395 0E36                     l2379 0DFC  
                   l2299 0C6E                     l1765 1970                     l1781 1998  
                   l1757 194C                     l1909 1AE0                     l1925 1A4C  
                   l1917 1A22                     l1861 114C                     l1853 10DC  
                   l1845 1066                     l1837 0FEE                     l1829 0F76  
                   l1941 14F6                     l1933 14A0                     l2397 0E42  
                   l2389 0E2C                     l1775 198E                     l1767 1974  
                   l1759 1958                     l1791 1B82                     l1783 1B6C  
                   l1927 1A5E                     l1919 1A32                     l1871 11D6  
                   l1863 115E                     l1855 10EE                     l1847 1080  
                   l1839 1008                     l1951 1540                     l1943 150A  
                   l1935 14B4                     l2399 0E4A                     l1793 1B84  
                   l1785 1B6E                     l1881 1272                     l1873 11FA  
                   l1865 1182                     l1857 110E                     l1849 10A0  
                   l1961 1594                     l1953 1552                     l1945 1512  
                   l1937 14C8                     l1929 1488                     l1891 1B94  
                   l1779 1994                     l1795 1B90                     l1787 1B74  
                   l1883 1298                     l1875 1220                     l1867 11A8  
                   l1859 1130                     l1955 1566                     l1947 1524  
                   l1939 14E4                     l1893 1BB0                     l1789 1B76  
                   l1797 1B42                     l1885 12B4                     l1877 123C  
                   l1869 11C4                     l1973 1A64                     l1957 156E  
                   l1949 1538                     l1981 1BC8                     l1991 18E0  
                   l1799 1B44                     l1887 12C6                     l1879 124E  
                   l1975 1AB4                     l1959 1580                     l1967 159C  
                   l1983 1BD0                     l1993 18E4                     l1897 19B0  
                   l1889 12EA                     l1985 1BD4                     l1977 1BBA  
                   l1899 19B4                     l1987 1BD8                     l1979 1BC4  
                   l1997 18F8                     l1989 18D4                     l1999 18FC  
                   STR_1 063C                     STR_2 062E                     STR_3 0611  
                   STR_4 0648                     STR_5 0626                     STR_6 0642  
                   STR_7 0626                     STR_8 0642                     STR_9 0635  
                   u1200 0E8E                     u2000 0B6C                     u1201 0E8A  
                   u2001 0B68                     u1210 0EA0                     u2010 0C50  
                   u1211 0E9C                     u2011 0C4C                     u2100 0E28  
                   u2020 0C6E                     u2101 0E24                     u2021 0C6A  
                   u2110 0E5A                     u2030 0CB8                     u2111 0E56  
                   u2031 0CB4                     u1400 10DC                     u1320 0FEE  
                   u1304 0FA2                     u1240 0EFE                     u1224 0EB2  
                   u2040 0D02                     u1401 10D8                     u1321 0FEA  
                   u1305 0F9E                     u1241 0EFA                     u1225 0EAE  
                   u2041 0CFE                     u1170 196C                     u1410 10EE  
                   u1330 1008                     u1314 0FC2                     u1250 0F18  
                   u1234 0ED2                     u2050 0D56                     u1171 1968  
                   u1411 10EA                     u1331 1004                     u1315 0FBE  
                   u1251 0F14                     u1235 0ECE                     u2051 0D52  
                   u1180 1984                     u2060 0D6E                     u1181 1980  
                   u2061 0D6A                     u1190 19AE                     u2070 0DA0  
                   u1191 19AA                     u2071 0D9C                     u1600 1B08  
                   u1520 123C                     u1504 11EC                     u1440 114C  
                   u1424 1100                     u1360 1066                     u1344 101A  
                   u1280 0F76                     u1264 0F2A                     u2080 0DBC  
                   u1601 1B04                     u1521 1238                     u1505 11E8  
                   u1441 1148                     u1425 10FC                     u1361 1062  
                   u1345 1016                     u1281 0F72                     u1265 0F26  
                   u2081 0DB8                     u1610 1A1E                     u1530 124E  
                   u1514 1210                     u1450 115E                     u1434 1120  
                   u1370 1080                     u1354 103A                     u1290 0F90  
                   u1274 0F4A                     u2090 0E10                     u1611 1A1A  
                   u1531 124A                     u1515 120C                     u1451 115A  
                   u1435 111C                     u1371 107C                     u1355 1036  
                   u1291 0F8C                     u1275 0F46                     u2091 0E0C  
                   u1620 1A32                     u1701 17DC                     u1621 1A2E  
                   u1710 1812                     u1630 1A48                     u1711 180E  
                   u1631 1A44                     u1720 15EA                     u1800 16E2  
                   u1640 1A5E                     u1560 12B4                     u1544 1264  
                   u1480 11C4                     u1464 1174                     u1384 1092  
                   u1721 15E6                     u1801 16DE                     u1641 1A5A  
                   u1561 12B0                     u1545 1260                     u1481 11C0  
                   u1465 1170                     u1385 108E                     u1730 1604  
                   u1810 1700                     u1650 18F4                     u1570 12C6  
                   u1554 1288                     u1490 11D6                     u1474 1198  
                   u1394 10B2                     u1731 1600                     u1811 16FC  
                   u1651 18F0                     u1571 12C2                     u1555 1284  
                   u1491 11D2                     u1475 1194                     u1395 10AE  
                   u1740 162A                     u1820 1716                     u1660 190C  
                   u1900 0892                     u1741 1626                     u1821 1712  
                   u1661 1908                     u1901 088E                     u1750 1648  
                   u1830 173A                     u1670 194A                     u1910 08B2  
                   u1751 1644                     u1831 1736                     u1671 1946  
                   u1911 08AE                     u1760 1664                     u1584 12DC  
                   u1920 08CC                     u1840 07D0                     u1761 1660  
                   u1681 1758                     u1585 12D8                     u1921 08C8  
                   u1841 07CC                     u1770 168A                     u1690 178E  
                   u1594 1300                     u1930 08EC                     u1850 0800  
                   u1771 1686                     u1691 178A                     u1595 12FC  
                   u1931 08E8                     u1851 07FC                     u1780 16AE  
                   u1940 0906                     u1860 081E                     u1781 16AA  
                   u1941 0902                     u1861 081A                     u1790 16C8  
                   u1950 0A20                     u1870 083E                     u1791 16C4  
                   u1951 0A1C                     u1871 083A                     u1960 0A3A  
                   u1880 0858                     u1961 0A36                     u1881 0854  
                   u1970 0A5A                     u1890 0878                     u1971 0A56  
                   u1891 0874                     u1980 0B32                     u1981 0B2E  
                   u1990 0B4C                     u1991 0B48                     _main 0650  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
           ___param_bank 000000                    ?_main 0001          __end_of___awdiv 169C  
                  STR_10 0642                    STR_11 061D                    STR_12 0635  
                  STR_13 061D                    STR_14 0626          __end_of___awmod 174C  
                  _T0CON 000FD5          ___awdiv@divisor 0003          ___awdiv@counter 0005  
                  _TMR0H 000FD7                    _TMR0L 000FD6                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
        __end_of_brancas 1854          __end_of_lcd_dat 1B6A          __end_of_lcd_cmd 1B94  
        __end_of_lcd_str 1B0A          __end_of_pinMode 130E                    _valor 006C  
                  main@i 0067                    main@j 0062             main@tempflag 0058  
                  tablat 000FF5          __end_of_ssdInit 1ABA                    plusw1 000FE3  
                  plusw2 000FDB                    status 000FD8     __end_of_digitalWrite 10C0  
        __initialization 1B0A             __end_of_main 0E72                   ??_main 004A  
          __activetblptr 000002         ___awdiv@dividend 0001                   _INTCON 000FF2  
       __end_of_lcd_init 1A0C         __end_of_atraso_s 194C                   ___wmul 1B94  
              ??___awdiv 0005                ??___awmod 000D                   _kpInit 1BF6  
                 _kpRead 1BEC                   _lcd_wr 1C08                   clear_0 1B30  
       ___awdiv@quotient 0007          ___awmod@divisor 000B                   isa$std 000001  
                 _pretas 174C          ___awmod@counter 000D                ??_brancas 0008  
                 main@t1 0050                   main@t2 0052                ??_lcd_dat 0007  
              ??_lcd_cmd 0007                ??_lcd_str 000A         __end_of_ssdDigit 1A64  
              ??_pinMode 0005             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_ssdInit 0007  
             __accesstop 0080  __end_of__initialization 1B36            ___rparam_used 000001  
            pinMode@type 0003           __pcstackCOMRAM 0001             __pidataBANK0 1854  
       main@flagcontrole 0056       __size_of_atraso_ms 0064    __size_of_digitalWrite 024E  
                ?___wmul 0001                  ?_kpInit 0001                  ?_kpRead 0001  
                ?_lcd_wr 0001               _kpDebounce 130E                  ?_pretas 0001  
     __size_of_timerInit 0008       __size_of_timerWait 0010       __size_of_ssdUpdate 0150  
           _digitalWrite 0E72                ?_lcd_init 0001                ?_atraso_s 0007  
                __Hparam 0000                  __Lparam 0000                ?_ssdDigit 000F  
        kpDebounce@old_D 0006          kpDebounce@tempo 0073                  ___awdiv 15D8  
                ___awmod 169C          __size_of___wmul 0026        __end_of_atraso_ms 19B0  
           __psmallconst 0600          __size_of_kpInit 000A          __size_of_kpRead 000A  
        __size_of_lcd_wr 0008              ssdDigit@val 0010              ssdDigit@pos 000F  
                __pcinit 1B0A                  __ramtop 0600                  _brancas 17D0  
                __ptext0 0650                  __ptext1 1BDC                  __ptext2 1BBA  
                __ptext3 1C00                  __ptext4 1488                  __ptext5 0E72  
                __ptext6 1A64                  __ptext7 10C0                  __ptext8 1A0C  
                __ptext9 174C          __size_of_pretas 0084                  _lcd_dat 1B40  
                _lcd_cmd 1B6A                  _display 0072                  _lcd_str 1ABA  
                _pinMode 10C0         ___awmod@dividend 0009                  _ssdInit 1A64  
             ??_lcd_init 0008      kpDebounce@valorNovo 006A     end_of_initialization 1B36  
             ??_atraso_s 0009            __Lmediumconst 0000        __end_of_timerInit 1C08  
            pretas@F2430 00C0        __end_of_timerWait 1BEC        __end_of_ssdUpdate 15D8  
             ??_ssdDigit 0010                  pretas@i 0049                  postdec1 000FE5  
                postinc0 000FEE              pretas@black 0008               _timerReset 1BBA  
            ?_kpDebounce 0001                _PORTEbits 000F84           _valor@ssd$F219 0601  
             lcd_dat@val 0007               lcd_cmd@val 0007               main@contP1 0063  
             main@contP2 0065               main@tecla1 004C               main@tecla2 004E  
             lcd_str@str 0008               atraso_ms@i 0003               atraso_ms@j 0005  
             atraso_ms@k 0006               atraso_ms@t 0001           __end_of___wmul 1BBA  
         __end_of_kpInit 1C00           __end_of_kpRead 1BF6           __end_of_lcd_wr 1C10  
 __end_of_valor@ssd$F219 0611           __end_of_pretas 17D0      start_initialization 1B0A  
    __size_of_kpDebounce 017A                 ??___wmul 0005                 ??_kpInit 0001  
               ??_kpRead 0003                 ??_lcd_wr 0001              __pdataBANK0 0080  
            ?_timerReset 0001                 ??_pretas 0008              __pbssCOMRAM 0068  
             pinMode@pin 0001        __size_of_lcd_init 005C        __size_of_atraso_s 0078  
               ?___awdiv 0001                 ?___awmod 0009        __size_of_ssdDigit 0058  
               ?_brancas 0001                 ?_lcd_dat 0001                 ?_lcd_cmd 0001  
               ?_lcd_str 0008                _atraso_ms 194C              __smallconst 0600  
               ?_pinMode 0001                 ?_ssdInit 0001      __size_of_timerReset 0022  
         ___wmul@product 0005                _timerInit 1C00                _timerWait 1BDC  
              _ssdUpdate 1488             ??_kpDebounce 0001                main@DeMin 005C  
              main@DeSeg 0060        ___wmul@multiplier 0001                main@UnMin 005A  
              main@UnSeg 005E               ?_atraso_ms 0001    kpDebounce@valorAntigo 0068  
              lcd_wr@val 0001                main@tempo 0054                atraso_s@i 0009  
              atraso_s@j 000B                atraso_s@k 000C                atraso_s@t 0007  
       timerReset@ciclos 0003                copy_data0 1B1E       __end_of_kpDebounce 1488  
               __Hrparam 0000                 __Lrparam 0000            brancas@coluna 0048  
             ?_timerInit 0001               ?_timerWait 0001               ?_ssdUpdate 0001  
       __size_of___awdiv 00C4         __size_of___awmod 00B0         __size_of_brancas 0084  
       __size_of_lcd_dat 002A         __size_of_lcd_cmd 002A         __size_of_lcd_str 0050  
       __size_of_pinMode 024E                 __ptext10 1ABA                 __ptext11 19B0  
               __ptext20 18D4                 __ptext12 1BEC                 __ptext21 1B94  
               __ptext13 1BF6                 __ptext22 169C                 __ptext14 130E  
               __ptext23 15D8                 __ptext15 17D0                 __ptext16 1B40  
               __ptext17 1B6A                 __ptext18 1C08                 __ptext19 194C  
       __size_of_ssdInit 0056                 _lcd_init 19B0                 _atraso_s 18D4  
          __size_of_main 0822                 _ssdDigit 1A0C                 brancas@i 0049  
               isa$xinst 000000             ??_timerReset 0003             brancas@F2435 0080  
               lcd_str@i 000C              ??_atraso_ms 0003          timerReset@tempo 0001  
          ?_digitalWrite 0001             brancas@white 0008        digitalWrite@value 0003  
     __end_of_timerReset 1BDC              ??_timerInit 0001              ??_timerWait 0001  
            ??_ssdUpdate 0007              kpDebounce@i 000A              kpDebounce@j 0009  
            kpDebounce@k 0007           ??_digitalWrite 0005             pretas@coluna 0048  
        digitalWrite@pin 0001  
